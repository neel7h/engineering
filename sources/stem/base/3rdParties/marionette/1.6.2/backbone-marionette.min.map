{"version":3,"file":"backbone-marionette.min.js","sources":["backbone-marionette.js"],"names":["Backbone","ChildViewContainer","_","Container","views","this","_views","_indexByModel","_indexByCustom","_updateLength","each","add","extend","prototype","view","customIndex","viewCid","cid","model","findByModel","findByModelCid","modelCid","findByCid","findByCustom","index","findByIndex","values","remove","any","key","call","method","apply","tail","arguments","args","isFunction","length","size","methods","concat","toArray","Wreqr","Marionette","Handlers","options","_wreqrHandlers","initialize","Model","Events","setHandlers","handlers","handler","name","context","isObject","callback","setHandler","config","trigger","hasHandler","getHandler","Error","Array","slice","removeHandler","removeAllHandlers","CommandStorage","_commands","getCommands","commandName","commands","command","instances","addCommand","push","clearCommands","Commands","storageType","constructor","_initializeStorage","on","_executeCommands","execute","storage","StorageType","RequestResponse","request","EventAggregator","EA","global","protoSlice","throwError","message","error","$","getOption","target","optionName","value","undefined","normalizeMethods","hash","normalizedHash","fn","triggerMethod","getEventName","match","prefix","eventName","toUpperCase","splitter","event","methodName","replace","MonitorDOMRefresh","documentElement","handleShow","_isShown","triggerDOMRefresh","handleRender","_isRendered","isInDOM","contains","el","listenTo","document","bindFromStrings","entity","evt","methodNames","split","bindToFunction","unbindFromStrings","stopListening","unbindToFunction","iterateEvents","bindings","functionCallback","stringCallback","bindEntityEvents","unbindEntityEvents","Callbacks","_deferred","Deferred","_callbacks","contextOverride","cb","ctx","done","run","resolve","reset","callbacks","Controller","close","unbind","Region","err","buildRegion","regionConfig","defaultRegionType","regionIsString","regionSelectorIsString","selector","regionTypeIsUndefined","regionType","regionIsType","RegionType","region","parentEl","getEl","find","show","ensureEl","isViewClosed","isClosed","isUndefined","$el","isDifferentView","currentView","render","open","empty","append","attachView","RegionManager","_regions","addRegions","regionDefinitions","defaults","regions","definition","addRegion","isString","hasSelector","_store","get","removeRegion","_remove","removeRegions","closeRegions","_setLength","TemplateCache","templateId","templateCaches","cachedTemplate","load","clear","i","compiledTemplate","template","loadTemplate","compileTemplate","html","rawTemplate","Renderer","data","templateFunc","View","bindAll","result","events","normalizeUIKeys","onShowCalled","getTemplate","mixinTemplateHelpers","templateHelpers","keys","v","ui","configureTriggers","triggers","triggerEvents","hasOptions","e","prevent","preventDefault","stop","stopPropagation","shouldPrevent","shouldStop","collection","delegateEvents","_delegateDOMEvents","combinedEvents","undelegateEvents","shouldClose","unbindUIElements","bindUIElements","_uiBindings","ItemView","serializeData","toJSON","items","CollectionView","itemViewEventPrefix","_initChildViewStorage","_initialEvents","initRenderBuffer","elBuffer","createDocumentFragment","_bufferedChildren","startBuffering","isBuffering","endBuffering","appendBuffer","_triggerShowBufferedChildren","child","addChildView","removeItemView","item","closeEmptyView","getItemView","indexOf","addItemView","children","triggerBeforeRender","triggerRendered","_renderChildren","closeChildren","isEmpty","showEmptyView","showCollection","EmptyView","getEmptyView","_showingEmptyView","itemView","itemViewOptions","buildItemView","addChildViewEventForwarding","renderItemView","rootEvent","itemEvents","getItemEvents","splice","appendHtml","ItemViewType","removeChildView","checkEmpty","collectionView","buffer","appendChild","CompositeView","once","isRendered","resetItemViewContainer","renderModel","compositeView","$container","getItemViewContainer","containerView","$itemViewContainer","container","itemViewContainer","Layout","_firstRender","_initializeRegions","_reInitializeRegions","regionManager","_buildRegions","that","_initRegionManager","AppRouter","Router","appRoutes","controller","_getController","processAppRoutes","appRoute","route","_addAppRoute","routeNames","reverse","bind","Application","_initCallbacks","vent","reqres","submodules","addInitializer","initializer","start","_regionManager","getRegion","module","moduleNames","moduleDefinition","ModuleClass","Module","moduleClass","unshift","create","moduleName","app","_setupInitializersAndFinalizers","startWithParent","_initializerCallbacks","addFinalizer","_finalizerCallbacks","_isInitialized","mod","addDefinition","customArgs","_runModuleDefinition","flatten","moduleDefinitions","parentModule","_getModule","_addModuleDefinition","def","define","startWithParentIsConfigured"],"mappings":"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","sourcesContent":["// MarionetteJS (Backbone.Marionette)\n// ----------------------------------\n// v1.6.2\n//\n// Copyright (c)2014 Derick Bailey, Muted Solutions, LLC.\n// Distributed under MIT license\n//\n// http://marionettejs.com\n\n\n\n/*!\n * Includes BabySitter\n * https://github.com/marionettejs/backbone.babysitter/\n *\n * Includes Wreqr\n * https://github.com/marionettejs/backbone.wreqr/\n */\n\n// Backbone.BabySitter\n// -------------------\n// v0.0.6\n//\n// Copyright (c)2013 Derick Bailey, Muted Solutions, LLC.\n// Distributed under MIT license\n//\n// http://github.com/babysitterjs/backbone.babysitter\n\n// Backbone.ChildViewContainer\n// ---------------------------\n//\n// Provide a container to store, retrieve and\n// shut down child views.\n\nBackbone.ChildViewContainer = (function(Backbone, _){\n  \n  // Container Constructor\n  // ---------------------\n\n  var Container = function(views){\n    this._views = {};\n    this._indexByModel = {};\n    this._indexByCustom = {};\n    this._updateLength();\n\n    _.each(views, this.add, this);\n  };\n\n  // Container Methods\n  // -----------------\n\n  _.extend(Container.prototype, {\n\n    // Add a view to this container. Stores the view\n    // by `cid` and makes it searchable by the model\n    // cid (and model itself). Optionally specify\n    // a custom key to store an retrieve the view.\n    add: function(view, customIndex){\n      var viewCid = view.cid;\n\n      // store the view\n      this._views[viewCid] = view;\n\n      // index it by model\n      if (view.model){\n        this._indexByModel[view.model.cid] = viewCid;\n      }\n\n      // index by custom\n      if (customIndex){\n        this._indexByCustom[customIndex] = viewCid;\n      }\n\n      this._updateLength();\n    },\n\n    // Find a view by the model that was attached to\n    // it. Uses the model's `cid` to find it.\n    findByModel: function(model){\n      return this.findByModelCid(model.cid);\n    },\n\n    // Find a view by the `cid` of the model that was attached to\n    // it. Uses the model's `cid` to find the view `cid` and\n    // retrieve the view using it.\n    findByModelCid: function(modelCid){\n      var viewCid = this._indexByModel[modelCid];\n      return this.findByCid(viewCid);\n    },\n\n    // Find a view by a custom indexer.\n    findByCustom: function(index){\n      var viewCid = this._indexByCustom[index];\n      return this.findByCid(viewCid);\n    },\n\n    // Find by index. This is not guaranteed to be a\n    // stable index.\n    findByIndex: function(index){\n      return _.values(this._views)[index];\n    },\n\n    // retrieve a view by it's `cid` directly\n    findByCid: function(cid){\n      return this._views[cid];\n    },\n\n    // Remove a view\n    remove: function(view){\n      var viewCid = view.cid;\n\n      // delete model index\n      if (view.model){\n        delete this._indexByModel[view.model.cid];\n      }\n\n      // delete custom index\n      _.any(this._indexByCustom, function(cid, key) {\n        if (cid === viewCid) {\n          delete this._indexByCustom[key];\n          return true;\n        }\n      }, this);\n\n      // remove the view from the container\n      delete this._views[viewCid];\n\n      // update the length\n      this._updateLength();\n    },\n\n    // Call a method on every view in the container,\n    // passing parameters to the call method one at a\n    // time, like `function.call`.\n    call: function(method){\n      this.apply(method, _.tail(arguments));\n    },\n\n    // Apply a method on every view in the container,\n    // passing parameters to the call method one at a\n    // time, like `function.apply`.\n    apply: function(method, args){\n      _.each(this._views, function(view){\n        if (_.isFunction(view[method])){\n          view[method].apply(view, args || []);\n        }\n      });\n    },\n\n    // Update the `.length` attribute on this container\n    _updateLength: function(){\n      this.length = _.size(this._views);\n    }\n  });\n\n  // Borrowing this code from Backbone.Collection:\n  // http://backbonejs.org/docs/backbone.html#section-106\n  //\n  // Mix in methods from Underscore, for iteration, and other\n  // collection related features.\n  var methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter', \n    'select', 'reject', 'every', 'all', 'some', 'any', 'include', \n    'contains', 'invoke', 'toArray', 'first', 'initial', 'rest', \n    'last', 'without', 'isEmpty', 'pluck'];\n\n  _.each(methods, function(method) {\n    Container.prototype[method] = function() {\n      var views = _.values(this._views);\n      var args = [views].concat(_.toArray(arguments));\n      return _[method].apply(_, args);\n    };\n  });\n\n  // return the public API\n  return Container;\n})(Backbone, _);\n\n// Backbone.Wreqr (Backbone.Marionette)\n// ----------------------------------\n// v0.2.0\n//\n// Copyright (c)2013 Derick Bailey, Muted Solutions, LLC.\n// Distributed under MIT license\n//\n// http://github.com/marionettejs/backbone.wreqr\n\n\nBackbone.Wreqr = (function(Backbone, Marionette, _){\n  \"use strict\";\n  var Wreqr = {};\n\n  // Handlers\n// --------\n// A registry of functions to call, given a name\n\nWreqr.Handlers = (function(Backbone, _){\n  \"use strict\";\n  \n  // Constructor\n  // -----------\n\n  var Handlers = function(options){\n    this.options = options;\n    this._wreqrHandlers = {};\n    \n    if (_.isFunction(this.initialize)){\n      this.initialize(options);\n    }\n  };\n\n  Handlers.extend = Backbone.Model.extend;\n\n  // Instance Members\n  // ----------------\n\n  _.extend(Handlers.prototype, Backbone.Events, {\n\n    // Add multiple handlers using an object literal configuration\n    setHandlers: function(handlers){\n      _.each(handlers, function(handler, name){\n        var context = null;\n\n        if (_.isObject(handler) && !_.isFunction(handler)){\n          context = handler.context;\n          handler = handler.callback;\n        }\n\n        this.setHandler(name, handler, context);\n      }, this);\n    },\n\n    // Add a handler for the given name, with an\n    // optional context to run the handler within\n    setHandler: function(name, handler, context){\n      var config = {\n        callback: handler,\n        context: context\n      };\n\n      this._wreqrHandlers[name] = config;\n\n      this.trigger(\"handler:add\", name, handler, context);\n    },\n\n    // Determine whether or not a handler is registered\n    hasHandler: function(name){\n      return !! this._wreqrHandlers[name];\n    },\n\n    // Get the currently registered handler for\n    // the specified name. Throws an exception if\n    // no handler is found.\n    getHandler: function(name){\n      var config = this._wreqrHandlers[name];\n\n      if (!config){\n        throw new Error(\"Handler not found for '\" + name + \"'\");\n      }\n\n      return function(){\n        var args = Array.prototype.slice.apply(arguments);\n        return config.callback.apply(config.context, args);\n      };\n    },\n\n    // Remove a handler for the specified name\n    removeHandler: function(name){\n      delete this._wreqrHandlers[name];\n    },\n\n    // Remove all handlers from this registry\n    removeAllHandlers: function(){\n      this._wreqrHandlers = {};\n    }\n  });\n\n  return Handlers;\n})(Backbone, _);\n\n  // Wreqr.CommandStorage\n// --------------------\n//\n// Store and retrieve commands for execution.\nWreqr.CommandStorage = (function(){\n  \"use strict\";\n\n  // Constructor function\n  var CommandStorage = function(options){\n    this.options = options;\n    this._commands = {};\n\n    if (_.isFunction(this.initialize)){\n      this.initialize(options);\n    }\n  };\n\n  // Instance methods\n  _.extend(CommandStorage.prototype, Backbone.Events, {\n\n    // Get an object literal by command name, that contains\n    // the `commandName` and the `instances` of all commands\n    // represented as an array of arguments to process\n    getCommands: function(commandName){\n      var commands = this._commands[commandName];\n\n      // we don't have it, so add it\n      if (!commands){\n\n        // build the configuration\n        commands = {\n          command: commandName, \n          instances: []\n        };\n\n        // store it\n        this._commands[commandName] = commands;\n      }\n\n      return commands;\n    },\n\n    // Add a command by name, to the storage and store the\n    // args for the command\n    addCommand: function(commandName, args){\n      var command = this.getCommands(commandName);\n      command.instances.push(args);\n    },\n\n    // Clear all commands for the given `commandName`\n    clearCommands: function(commandName){\n      var command = this.getCommands(commandName);\n      command.instances = [];\n    }\n  });\n\n  return CommandStorage;\n})();\n\n  // Wreqr.Commands\n// --------------\n//\n// A simple command pattern implementation. Register a command\n// handler and execute it.\nWreqr.Commands = (function(Wreqr){\n  \"use strict\";\n\n  return Wreqr.Handlers.extend({\n    // default storage type\n    storageType: Wreqr.CommandStorage,\n\n    constructor: function(options){\n      this.options = options || {};\n\n      this._initializeStorage(this.options);\n      this.on(\"handler:add\", this._executeCommands, this);\n\n      var args = Array.prototype.slice.call(arguments);\n      Wreqr.Handlers.prototype.constructor.apply(this, args);\n    },\n\n    // Execute a named command with the supplied args\n    execute: function(name, args){\n      name = arguments[0];\n      args = Array.prototype.slice.call(arguments, 1);\n\n      if (this.hasHandler(name)){\n        this.getHandler(name).apply(this, args);\n      } else {\n        this.storage.addCommand(name, args);\n      }\n\n    },\n\n    // Internal method to handle bulk execution of stored commands\n    _executeCommands: function(name, handler, context){\n      var command = this.storage.getCommands(name);\n\n      // loop through and execute all the stored command instances\n      _.each(command.instances, function(args){\n        handler.apply(context, args);\n      });\n\n      this.storage.clearCommands(name);\n    },\n\n    // Internal method to initialize storage either from the type's\n    // `storageType` or the instance `options.storageType`.\n    _initializeStorage: function(options){\n      var storage;\n\n      var StorageType = options.storageType || this.storageType;\n      if (_.isFunction(StorageType)){\n        storage = new StorageType();\n      } else {\n        storage = StorageType;\n      }\n\n      this.storage = storage;\n    }\n  });\n\n})(Wreqr);\n\n  // Wreqr.RequestResponse\n// ---------------------\n//\n// A simple request/response implementation. Register a\n// request handler, and return a response from it\nWreqr.RequestResponse = (function(Wreqr){\n  \"use strict\";\n\n  return Wreqr.Handlers.extend({\n    request: function(){\n      var name = arguments[0];\n      var args = Array.prototype.slice.call(arguments, 1);\n\n      return this.getHandler(name).apply(this, args);\n    }\n  });\n\n})(Wreqr);\n\n  // Event Aggregator\n// ----------------\n// A pub-sub object that can be used to decouple various parts\n// of an application through event-driven architecture.\n\nWreqr.EventAggregator = (function(Backbone, _){\n  \"use strict\";\n  var EA = function(){};\n\n  // Copy the `extend` function used by Backbone's classes\n  EA.extend = Backbone.Model.extend;\n\n  // Copy the basic Backbone.Events on to the event aggregator\n  _.extend(EA.prototype, Backbone.Events);\n\n  return EA;\n})(Backbone, _);\n\n\n  return Wreqr;\n})(Backbone, Backbone.Marionette, _);\n\nvar Marionette = (function(global, Backbone, _){\n  \"use strict\";\n\n  // Define and export the Marionette namespace\n  var Marionette = {};\n  Backbone.Marionette = Marionette;\n\n  // Get the DOM manipulator for later use\n  Marionette.$ = Backbone.$;\n\n// Helpers\n// -------\n\n// For slicing `arguments` in functions\nvar protoSlice = Array.prototype.slice;\nfunction slice(args) {\n  return protoSlice.call(args);\n}\n\nfunction throwError(message, name) {\n  var error = new Error(message);\n  error.name = name || 'Error';\n  throw error;\n}\n\n// Marionette.extend\n// -----------------\n\n// Borrow the Backbone `extend` method so we can use it as needed\nMarionette.extend = Backbone.Model.extend;\n\n// Marionette.getOption\n// --------------------\n\n// Retrieve an object, function or other value from a target\n// object or its `options`, with `options` taking precedence.\nMarionette.getOption = function(target, optionName){\n  if (!target || !optionName){ return; }\n  var value;\n\n  if (target.options && (optionName in target.options) && (target.options[optionName] !== undefined)){\n    value = target.options[optionName];\n  } else {\n    value = target[optionName];\n  }\n\n  return value;\n};\n\n// Marionette.normalizeMethods\n// ----------------------\n\n// Pass in a mapping of events => functions or function names\n// and return a mapping of events => functions\nMarionette.normalizeMethods = function(hash) {\n  var normalizedHash = {}, method;\n  _.each(hash, function(fn, name) {\n    method = fn;\n    if (!_.isFunction(method)) {\n      method = this[method];\n    }\n    if (!method) {\n      return;\n    }\n    normalizedHash[name] = method;\n  }, this);\n  return normalizedHash;\n};\n// Trigger an event and/or a corresponding method name. Examples:\n//\n// `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n// call the \"onFoo\" method.\n//\n// `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n// call the \"onFooBar\" method.\nMarionette.triggerMethod = (function(){\n\n  // split the event name on the \":\"\n  var splitter = /(^|:)(\\w)/gi;\n\n  // take the event section (\"section1:section2:section3\")\n  // and turn it in to uppercase name\n  function getEventName(match, prefix, eventName) {\n    return eventName.toUpperCase();\n  }\n\n  // actual triggerMethod implementation\n  var triggerMethod = function(event) {\n    // get the method name from the event name\n    var methodName = 'on' + event.replace(splitter, getEventName);\n    var method = this[methodName];\n\n    // trigger the event, if a trigger method exists\n    if(_.isFunction(this.trigger)) {\n      this.trigger.apply(this, arguments);\n    }\n\n    // call the onMethodName if it exists\n    if (_.isFunction(method)) {\n      // pass all arguments, except the event name\n      return method.apply(this, _.tail(arguments));\n    }\n  };\n\n  return triggerMethod;\n})();\n\n// DOMRefresh\n// ----------\n//\n// Monitor a view's state, and after it has been rendered and shown\n// in the DOM, trigger a \"dom:refresh\" event every time it is\n// re-rendered.\n\nMarionette.MonitorDOMRefresh = (function(documentElement){\n  // track when the view has been shown in the DOM,\n  // using a Marionette.Region (or by other means of triggering \"show\")\n  function handleShow(view){\n    view._isShown = true;\n    triggerDOMRefresh(view);\n  }\n\n  // track when the view has been rendered\n  function handleRender(view){\n    view._isRendered = true;\n    triggerDOMRefresh(view);\n  }\n\n  // Trigger the \"dom:refresh\" event and corresponding \"onDomRefresh\" method\n  function triggerDOMRefresh(view){\n    if (view._isShown && view._isRendered && isInDOM(view)){\n      if (_.isFunction(view.triggerMethod)){\n        view.triggerMethod(\"dom:refresh\");\n      }\n    }\n  }\n\n  function isInDOM(view) {\n    return documentElement.contains(view.el);\n  }\n\n  // Export public API\n  return function(view){\n    view.listenTo(view, \"show\", function(){\n      handleShow(view);\n    });\n\n    view.listenTo(view, \"render\", function(){\n      handleRender(view);\n    });\n  };\n})(document.documentElement);\n\n\n// Marionette.bindEntityEvents & unbindEntityEvents\n// ---------------------------\n//\n// These methods are used to bind/unbind a backbone \"entity\" (collection/model)\n// to methods on a target object.\n//\n// The first parameter, `target`, must have a `listenTo` method from the\n// EventBinder object.\n//\n// The second parameter is the entity (Backbone.Model or Backbone.Collection)\n// to bind the events from.\n//\n// The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n// configuration. Multiple handlers can be separated by a space. A\n// function can be supplied instead of a string handler name.\n\n(function(Marionette){\n  \"use strict\";\n\n  // Bind the event to handlers specified as a string of\n  // handler names on the target object\n  function bindFromStrings(target, entity, evt, methods){\n    var methodNames = methods.split(/\\s+/);\n\n    _.each(methodNames,function(methodName) {\n\n      var method = target[methodName];\n      if(!method) {\n        throwError(\"Method '\"+ methodName +\"' was configured as an event handler, but does not exist.\");\n      }\n\n      target.listenTo(entity, evt, method, target);\n    });\n  }\n\n  // Bind the event to a supplied callback function\n  function bindToFunction(target, entity, evt, method){\n      target.listenTo(entity, evt, method, target);\n  }\n\n  // Bind the event to handlers specified as a string of\n  // handler names on the target object\n  function unbindFromStrings(target, entity, evt, methods){\n    var methodNames = methods.split(/\\s+/);\n\n    _.each(methodNames,function(methodName) {\n      var method = target[methodName];\n      target.stopListening(entity, evt, method, target);\n    });\n  }\n\n  // Bind the event to a supplied callback function\n  function unbindToFunction(target, entity, evt, method){\n      target.stopListening(entity, evt, method, target);\n  }\n\n\n  // generic looping function\n  function iterateEvents(target, entity, bindings, functionCallback, stringCallback){\n    if (!entity || !bindings) { return; }\n\n    // allow the bindings to be a function\n    if (_.isFunction(bindings)){\n      bindings = bindings.call(target);\n    }\n\n    // iterate the bindings and bind them\n    _.each(bindings, function(methods, evt){\n\n      // allow for a function as the handler,\n      // or a list of event names as a string\n      if (_.isFunction(methods)){\n        functionCallback(target, entity, evt, methods);\n      } else {\n        stringCallback(target, entity, evt, methods);\n      }\n\n    });\n  }\n\n  // Export Public API\n  Marionette.bindEntityEvents = function(target, entity, bindings){\n    iterateEvents(target, entity, bindings, bindToFunction, bindFromStrings);\n  };\n\n  Marionette.unbindEntityEvents = function(target, entity, bindings){\n    iterateEvents(target, entity, bindings, unbindToFunction, unbindFromStrings);\n  };\n\n})(Marionette);\n\n\n// Callbacks\n// ---------\n\n// A simple way of managing a collection of callbacks\n// and executing them at a later point in time, using jQuery's\n// `Deferred` object.\nMarionette.Callbacks = function(){\n  this._deferred = Marionette.$.Deferred();\n  this._callbacks = [];\n};\n\n_.extend(Marionette.Callbacks.prototype, {\n\n  // Add a callback to be executed. Callbacks added here are\n  // guaranteed to execute, even if they are added after the\n  // `run` method is called.\n  add: function(callback, contextOverride){\n    this._callbacks.push({cb: callback, ctx: contextOverride});\n\n    this._deferred.done(function(context, options){\n      if (contextOverride){ context = contextOverride; }\n      callback.call(context, options);\n    });\n  },\n\n  // Run all registered callbacks with the context specified.\n  // Additional callbacks can be added after this has been run\n  // and they will still be executed.\n  run: function(options, context){\n    this._deferred.resolve(context, options);\n  },\n\n  // Resets the list of callbacks to be run, allowing the same list\n  // to be run multiple times - whenever the `run` method is called.\n  reset: function(){\n    var callbacks = this._callbacks;\n    this._deferred = Marionette.$.Deferred();\n    this._callbacks = [];\n\n    _.each(callbacks, function(cb){\n      this.add(cb.cb, cb.ctx);\n    }, this);\n  }\n});\n\n\n// Marionette Controller\n// ---------------------\n//\n// A multi-purpose object to use as a controller for\n// modules and routers, and as a mediator for workflow\n// and coordination of other objects, views, and more.\nMarionette.Controller = function(options){\n  this.triggerMethod = Marionette.triggerMethod;\n  this.options = options || {};\n\n  if (_.isFunction(this.initialize)){\n    this.initialize(this.options);\n  }\n};\n\nMarionette.Controller.extend = Marionette.extend;\n\n// Controller Methods\n// --------------\n\n// Ensure it can trigger events with Backbone.Events\n_.extend(Marionette.Controller.prototype, Backbone.Events, {\n  close: function(){\n    this.stopListening();\n    this.triggerMethod(\"close\");\n    this.unbind();\n  }\n});\n\n// Region\n// ------\n//\n// Manage the visual regions of your composite application. See\n// http://lostechies.com/derickbailey/2011/12/12/composite-js-apps-regions-and-region-managers/\n\nMarionette.Region = function(options){\n  this.options = options || {};\n  this.el = Marionette.getOption(this, \"el\");\n\n  if (!this.el){\n    var err = new Error(\"An 'el' must be specified for a region.\");\n    err.name = \"NoElError\";\n    throw err;\n  }\n\n  if (this.initialize){\n    var args = Array.prototype.slice.apply(arguments);\n    this.initialize.apply(this, args);\n  }\n};\n\n\n// Region Type methods\n// -------------------\n\n_.extend(Marionette.Region, {\n\n  // Build an instance of a region by passing in a configuration object\n  // and a default region type to use if none is specified in the config.\n  //\n  // The config object should either be a string as a jQuery DOM selector,\n  // a Region type directly, or an object literal that specifies both\n  // a selector and regionType:\n  //\n  // ```js\n  // {\n  //   selector: \"#foo\",\n  //   regionType: MyCustomRegion\n  // }\n  // ```\n  //\n  buildRegion: function(regionConfig, defaultRegionType){\n    var regionIsString = (typeof regionConfig === \"string\");\n    var regionSelectorIsString = (typeof regionConfig.selector === \"string\");\n    var regionTypeIsUndefined = (typeof regionConfig.regionType === \"undefined\");\n    var regionIsType = (typeof regionConfig === \"function\");\n\n    if (!regionIsType && !regionIsString && !regionSelectorIsString) {\n      throw new Error(\"Region must be specified as a Region type, a selector string or an object with selector property\");\n    }\n\n    var selector, RegionType;\n\n    // get the selector for the region\n\n    if (regionIsString) {\n      selector = regionConfig;\n    }\n\n    if (regionConfig.selector) {\n      selector = regionConfig.selector;\n      delete regionConfig.selector;\n    }\n\n    // get the type for the region\n\n    if (regionIsType){\n      RegionType = regionConfig;\n    }\n\n    if (!regionIsType && regionTypeIsUndefined) {\n      RegionType = defaultRegionType;\n    }\n\n    if (regionConfig.regionType) {\n      RegionType = regionConfig.regionType;\n      delete regionConfig.regionType;\n    }\n\n    if (regionIsString || regionIsType) {\n      regionConfig = {};\n    }\n\n    regionConfig.el = selector;\n\n    // build the region instance\n    var region = new RegionType(regionConfig);\n\n    // override the `getEl` function if we have a parentEl\n    // this must be overridden to ensure the selector is found\n    // on the first use of the region. if we try to assign the\n    // region's `el` to `parentEl.find(selector)` in the object\n    // literal to build the region, the element will not be\n    // guaranteed to be in the DOM already, and will cause problems\n    if (regionConfig.parentEl){\n      region.getEl = function(selector) {\n        var parentEl = regionConfig.parentEl;\n        if (_.isFunction(parentEl)){\n          parentEl = parentEl();\n        }\n        return parentEl.find(selector);\n      };\n    }\n\n    return region;\n  }\n\n});\n\n// Region Instance Methods\n// -----------------------\n\n_.extend(Marionette.Region.prototype, Backbone.Events, {\n\n  // Displays a backbone view instance inside of the region.\n  // Handles calling the `render` method for you. Reads content\n  // directly from the `el` attribute. Also calls an optional\n  // `onShow` and `close` method on your view, just after showing\n  // or just before closing the view, respectively.\n  show: function(view){\n    this.ensureEl();\n\n    var isViewClosed = view.isClosed || _.isUndefined(view.$el);\n    var isDifferentView = view !== this.currentView;\n\n    if (isDifferentView) {\n      this.close();\n    }\n\n    view.render();\n\n    if (isDifferentView || isViewClosed) {\n      this.open(view);\n    }\n\n    this.currentView = view;\n\n    Marionette.triggerMethod.call(this, \"show\", view);\n    Marionette.triggerMethod.call(view, \"show\");\n  },\n\n  ensureEl: function(){\n    if (!this.$el || this.$el.length === 0){\n      this.$el = this.getEl(this.el);\n    }\n  },\n\n  // Override this method to change how the region finds the\n  // DOM element that it manages. Return a jQuery selector object.\n  getEl: function(selector){\n    return Marionette.$(selector);\n  },\n\n  // Override this method to change how the new view is\n  // appended to the `$el` that the region is managing\n  open: function(view){\n    this.$el.empty().append(view.el);\n  },\n\n  // Close the current view, if there is one. If there is no\n  // current view, it does nothing and returns immediately.\n  close: function(){\n    var view = this.currentView;\n    if (!view || view.isClosed){ return; }\n\n    // call 'close' or 'remove', depending on which is found\n    if (view.close) { view.close(); }\n    else if (view.remove) { view.remove(); }\n\n    Marionette.triggerMethod.call(this, \"close\", view);\n\n    delete this.currentView;\n  },\n\n  // Attach an existing view to the region. This\n  // will not call `render` or `onShow` for the new view,\n  // and will not replace the current HTML for the `el`\n  // of the region.\n  attachView: function(view){\n    this.currentView = view;\n  },\n\n  // Reset the region by closing any existing view and\n  // clearing out the cached `$el`. The next time a view\n  // is shown via this region, the region will re-query the\n  // DOM for the region's `el`.\n  reset: function(){\n    this.close();\n    delete this.$el;\n  }\n});\n\n// Copy the `extend` function used by Backbone's classes\nMarionette.Region.extend = Marionette.extend;\n\n// Marionette.RegionManager\n// ------------------------\n//\n// Manage one or more related `Marionette.Region` objects.\nMarionette.RegionManager = (function(Marionette){\n\n  var RegionManager = Marionette.Controller.extend({\n    constructor: function(options){\n      this._regions = {};\n      Marionette.Controller.prototype.constructor.call(this, options);\n    },\n\n    // Add multiple regions using an object literal, where\n    // each key becomes the region name, and each value is\n    // the region definition.\n    addRegions: function(regionDefinitions, defaults){\n      var regions = {};\n\n      _.each(regionDefinitions, function(definition, name){\n        if (typeof definition === \"string\"){\n          definition = { selector: definition };\n        }\n\n        if (definition.selector){\n          definition = _.defaults({}, definition, defaults);\n        }\n\n        var region = this.addRegion(name, definition);\n        regions[name] = region;\n      }, this);\n\n      return regions;\n    },\n\n    // Add an individual region to the region manager,\n    // and return the region instance\n    addRegion: function(name, definition){\n      var region;\n\n      var isObject = _.isObject(definition);\n      var isString = _.isString(definition);\n      var hasSelector = !!definition.selector;\n\n      if (isString || (isObject && hasSelector)){\n        region = Marionette.Region.buildRegion(definition, Marionette.Region);\n      } else if (_.isFunction(definition)){\n        region = Marionette.Region.buildRegion(definition, Marionette.Region);\n      } else {\n        region = definition;\n      }\n\n      this._store(name, region);\n      this.triggerMethod(\"region:add\", name, region);\n      return region;\n    },\n\n    // Get a region by name\n    get: function(name){\n      return this._regions[name];\n    },\n\n    // Remove a region by name\n    removeRegion: function(name){\n      var region = this._regions[name];\n      this._remove(name, region);\n    },\n\n    // Close all regions in the region manager, and\n    // remove them\n    removeRegions: function(){\n      _.each(this._regions, function(region, name){\n        this._remove(name, region);\n      }, this);\n    },\n\n    // Close all regions in the region manager, but\n    // leave them attached\n    closeRegions: function(){\n      _.each(this._regions, function(region, name){\n        region.close();\n      }, this);\n    },\n\n    // Close all regions and shut down the region\n    // manager entirely\n    close: function(){\n      this.removeRegions();\n      var args = Array.prototype.slice.call(arguments);\n      Marionette.Controller.prototype.close.apply(this, args);\n    },\n\n    // internal method to store regions\n    _store: function(name, region){\n      this._regions[name] = region;\n      this._setLength();\n    },\n\n    // internal method to remove a region\n    _remove: function(name, region){\n      region.close();\n      delete this._regions[name];\n      this._setLength();\n      this.triggerMethod(\"region:remove\", name, region);\n    },\n\n    // set the number of regions current held\n    _setLength: function(){\n      this.length = _.size(this._regions);\n    }\n\n  });\n\n  // Borrowing this code from Backbone.Collection:\n  // http://backbonejs.org/docs/backbone.html#section-106\n  //\n  // Mix in methods from Underscore, for iteration, and other\n  // collection related features.\n  var methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n    'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n    'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n    'last', 'without', 'isEmpty', 'pluck'];\n\n  _.each(methods, function(method) {\n    RegionManager.prototype[method] = function() {\n      var regions = _.values(this._regions);\n      var args = [regions].concat(_.toArray(arguments));\n      return _[method].apply(_, args);\n    };\n  });\n\n  return RegionManager;\n})(Marionette);\n\n\n// Template Cache\n// --------------\n\n// Manage templates stored in `<script>` blocks,\n// caching them for faster access.\nMarionette.TemplateCache = function(templateId){\n  this.templateId = templateId;\n};\n\n// TemplateCache object-level methods. Manage the template\n// caches from these method calls instead of creating\n// your own TemplateCache instances\n_.extend(Marionette.TemplateCache, {\n  templateCaches: {},\n\n  // Get the specified template by id. Either\n  // retrieves the cached version, or loads it\n  // from the DOM.\n  get: function(templateId){\n    var cachedTemplate = this.templateCaches[templateId];\n\n    if (!cachedTemplate){\n      cachedTemplate = new Marionette.TemplateCache(templateId);\n      this.templateCaches[templateId] = cachedTemplate;\n    }\n\n    return cachedTemplate.load();\n  },\n\n  // Clear templates from the cache. If no arguments\n  // are specified, clears all templates:\n  // `clear()`\n  //\n  // If arguments are specified, clears each of the\n  // specified templates from the cache:\n  // `clear(\"#t1\", \"#t2\", \"...\")`\n  clear: function(){\n    var i;\n    var args = slice(arguments);\n    var length = args.length;\n\n    if (length > 0){\n      for(i=0; i<length; i++){\n        delete this.templateCaches[args[i]];\n      }\n    } else {\n      this.templateCaches = {};\n    }\n  }\n});\n\n// TemplateCache instance methods, allowing each\n// template cache object to manage its own state\n// and know whether or not it has been loaded\n_.extend(Marionette.TemplateCache.prototype, {\n\n  // Internal method to load the template\n  load: function(){\n    // Guard clause to prevent loading this template more than once\n    if (this.compiledTemplate){\n      return this.compiledTemplate;\n    }\n\n    // Load the template and compile it\n    var template = this.loadTemplate(this.templateId);\n    this.compiledTemplate = this.compileTemplate(template);\n\n    return this.compiledTemplate;\n  },\n\n  // Load a template from the DOM, by default. Override\n  // this method to provide your own template retrieval\n  // For asynchronous loading with AMD/RequireJS, consider\n  // using a template-loader plugin as described here:\n  // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs\n  loadTemplate: function(templateId){\n    var template = Marionette.$(templateId).html();\n\n    if (!template || template.length === 0){\n      throwError(\"Could not find template: '\" + templateId + \"'\", \"NoTemplateError\");\n    }\n\n    return template;\n  },\n\n  // Pre-compile the template before caching it. Override\n  // this method if you do not need to pre-compile a template\n  // (JST / RequireJS for example) or if you want to change\n  // the template engine used (Handebars, etc).\n  compileTemplate: function(rawTemplate){\n    return _.template(rawTemplate);\n  }\n});\n\n\n// Renderer\n// --------\n\n// Render a template with data by passing in the template\n// selector and the data to render.\nMarionette.Renderer = {\n\n  // Render a template with data. The `template` parameter is\n  // passed to the `TemplateCache` object to retrieve the\n  // template function. Override this method to provide your own\n  // custom rendering and template handling for all of Marionette.\n  render: function(template, data){\n\n    if (!template) {\n      var error = new Error(\"Cannot render the template since it's false, null or undefined.\");\n      error.name = \"TemplateNotFoundError\";\n      throw error;\n    }\n\n    var templateFunc;\n    if (typeof template === \"function\"){\n      templateFunc = template;\n    } else {\n      templateFunc = Marionette.TemplateCache.get(template);\n    }\n\n    return templateFunc(data);\n  }\n};\n\n\n\n// Marionette.View\n// ---------------\n\n// The core view type that other Marionette views extend from.\nMarionette.View = Backbone.View.extend({\n\n  constructor: function(options){\n    _.bindAll(this, \"render\");\n\n    var args = Array.prototype.slice.apply(arguments);\n\n    // this exposes view options to the view initializer\n    // this is a backfill since backbone removed the assignment\n    // of this.options\n    // at some point however this may be removed\n    this.options = _.extend({}, _.result(this, 'options'), _.isFunction(options) ? options.call(this) : options);\n\n    // parses out the @ui DSL for events\n    this.events = this.normalizeUIKeys(_.result(this, 'events'));\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    Marionette.MonitorDOMRefresh(this);\n    this.listenTo(this, \"show\", this.onShowCalled, this);\n  },\n\n  // import the \"triggerMethod\" to trigger events with corresponding\n  // methods if the method exists\n  triggerMethod: Marionette.triggerMethod,\n\n  // Imports the \"normalizeMethods\" to transform hashes of\n  // events=>function references/names to a hash of events=>function references\n  normalizeMethods: Marionette.normalizeMethods,\n\n  // Get the template for this view\n  // instance. You can set a `template` attribute in the view\n  // definition or pass a `template: \"whatever\"` parameter in\n  // to the constructor options.\n  getTemplate: function(){\n    return Marionette.getOption(this, \"template\");\n  },\n\n  // Mix in template helper methods. Looks for a\n  // `templateHelpers` attribute, which can either be an\n  // object literal, or a function that returns an object\n  // literal. All methods and attributes from this object\n  // are copies to the object passed in.\n  mixinTemplateHelpers: function(target){\n    target = target || {};\n    var templateHelpers = Marionette.getOption(this, \"templateHelpers\");\n    if (_.isFunction(templateHelpers)){\n      templateHelpers = templateHelpers.call(this);\n    }\n    return _.extend(target, templateHelpers);\n  },\n\n  // allows for the use of the @ui. syntax within\n  // a given key for triggers and events\n  // swaps the @ui with the associated selector\n  normalizeUIKeys: function(hash) {\n    if (typeof(hash) === \"undefined\") {\n      return;\n    }\n\n    _.each(_.keys(hash), function(v) {\n      var split = v.split(\"@ui.\");\n      if (split.length === 2) {\n        hash[split[0]+this.ui[split[1]]] = hash[v];\n        delete hash[v];\n      }\n    }, this);\n\n    return hash;\n  },\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  configureTriggers: function(){\n    if (!this.triggers) { return; }\n\n    var triggerEvents = {};\n\n    // Allow `triggers` to be configured as a function\n    var triggers = this.normalizeUIKeys(_.result(this, \"triggers\"));\n\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    _.each(triggers, function(value, key){\n\n      var hasOptions = _.isObject(value);\n      var eventName = hasOptions ? value.event : value;\n\n      // build the event handler function for the DOM event\n      triggerEvents[key] = function(e){\n\n        // stop the event in its tracks\n        if (e) {\n          var prevent = e.preventDefault;\n          var stop = e.stopPropagation;\n\n          var shouldPrevent = hasOptions ? value.preventDefault : prevent;\n          var shouldStop = hasOptions ? value.stopPropagation : stop;\n\n          if (shouldPrevent && prevent) { prevent.apply(e); }\n          if (shouldStop && stop) { stop.apply(e); }\n        }\n\n        // build the args for the event\n        var args = {\n          view: this,\n          model: this.model,\n          collection: this.collection\n        };\n\n        // trigger the event\n        this.triggerMethod(eventName, args);\n      };\n\n    }, this);\n\n    return triggerEvents;\n  },\n\n  // Overriding Backbone.View's delegateEvents to handle\n  // the `triggers`, `modelEvents`, and `collectionEvents` configuration\n  delegateEvents: function(events){\n    this._delegateDOMEvents(events);\n    Marionette.bindEntityEvents(this, this.model, Marionette.getOption(this, \"modelEvents\"));\n    Marionette.bindEntityEvents(this, this.collection, Marionette.getOption(this, \"collectionEvents\"));\n  },\n\n  // internal method to delegate DOM events and triggers\n  _delegateDOMEvents: function(events){\n    events = events || this.events;\n    if (_.isFunction(events)){ events = events.call(this); }\n\n    var combinedEvents = {};\n    var triggers = this.configureTriggers();\n    _.extend(combinedEvents, events, triggers);\n\n    Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\n  },\n\n  // Overriding Backbone.View's undelegateEvents to handle unbinding\n  // the `triggers`, `modelEvents`, and `collectionEvents` config\n  undelegateEvents: function(){\n    var args = Array.prototype.slice.call(arguments);\n    Backbone.View.prototype.undelegateEvents.apply(this, args);\n\n    Marionette.unbindEntityEvents(this, this.model, Marionette.getOption(this, \"modelEvents\"));\n    Marionette.unbindEntityEvents(this, this.collection, Marionette.getOption(this, \"collectionEvents\"));\n  },\n\n  // Internal method, handles the `show` event.\n  onShowCalled: function(){},\n\n  // Default `close` implementation, for removing a view from the\n  // DOM and unbinding it. Regions will call this method\n  // for you. You can specify an `onClose` method in your view to\n  // add custom code that is called after the view is closed.\n  close: function(){\n    if (this.isClosed) { return; }\n\n    // allow the close to be stopped by returning `false`\n    // from the `onBeforeClose` method\n    var shouldClose = this.triggerMethod(\"before:close\");\n    if (shouldClose === false){\n      return;\n    }\n\n    // mark as closed before doing the actual close, to\n    // prevent infinite loops within \"close\" event handlers\n    // that are trying to close other views\n    this.isClosed = true;\n    this.triggerMethod(\"close\");\n\n    // unbind UI elements\n    this.unbindUIElements();\n\n    // remove the view from the DOM\n    this.remove();\n  },\n\n  // This method binds the elements specified in the \"ui\" hash inside the view's code with\n  // the associated jQuery selectors.\n  bindUIElements: function(){\n    if (!this.ui) { return; }\n\n    // store the ui hash in _uiBindings so they can be reset later\n    // and so re-rendering the view will be able to find the bindings\n    if (!this._uiBindings){\n      this._uiBindings = this.ui;\n    }\n\n    // get the bindings result, as a function or otherwise\n    var bindings = _.result(this, \"_uiBindings\");\n\n    // empty the ui so we don't have anything to start with\n    this.ui = {};\n\n    // bind each of the selectors\n    _.each(_.keys(bindings), function(key) {\n      var selector = bindings[key];\n      this.ui[key] = this.$(selector);\n    }, this);\n  },\n\n  // This method unbinds the elements specified in the \"ui\" hash\n  unbindUIElements: function(){\n    if (!this.ui || !this._uiBindings){ return; }\n\n    // delete all of the existing ui bindings\n    _.each(this.ui, function($el, name){\n      delete this.ui[name];\n    }, this);\n\n    // reset the ui element to the original bindings configuration\n    this.ui = this._uiBindings;\n    delete this._uiBindings;\n  }\n});\n\n// Item View\n// ---------\n\n// A single item view implementation that contains code for rendering\n// with underscore.js templates, serializing the view's model or collection,\n// and calling several methods on extended views, such as `onRender`.\nMarionette.ItemView = Marionette.View.extend({\n\n  // Setting up the inheritance chain which allows changes to\n  // Marionette.View.prototype.constructor which allows overriding\n  constructor: function(){\n    Marionette.View.prototype.constructor.apply(this, slice(arguments));\n  },\n\n  // Serialize the model or collection for the view. If a model is\n  // found, `.toJSON()` is called. If a collection is found, `.toJSON()`\n  // is also called, but is used to populate an `items` array in the\n  // resulting data. If both are found, defaults to the model.\n  // You can override the `serializeData` method in your own view\n  // definition, to provide custom serialization for your view's data.\n  serializeData: function(){\n    var data = {};\n\n    if (this.model) {\n      data = this.model.toJSON();\n    }\n    else if (this.collection) {\n      data = { items: this.collection.toJSON() };\n    }\n\n    return data;\n  },\n\n  // Render the view, defaulting to underscore.js templates.\n  // You can override this in your view definition to provide\n  // a very specific rendering for your view. In general, though,\n  // you should override the `Marionette.Renderer` object to\n  // change how Marionette renders views.\n  render: function(){\n    this.isClosed = false;\n\n    this.triggerMethod(\"before:render\", this);\n    this.triggerMethod(\"item:before:render\", this);\n\n    var data = this.serializeData();\n    data = this.mixinTemplateHelpers(data);\n\n    var template = this.getTemplate();\n    var html = Marionette.Renderer.render(template, data);\n\n    this.$el.html(html);\n    this.bindUIElements();\n\n    this.triggerMethod(\"render\", this);\n    this.triggerMethod(\"item:rendered\", this);\n\n    return this;\n  },\n\n  // Override the default close event to add a few\n  // more events that are triggered.\n  close: function(){\n    if (this.isClosed){ return; }\n\n    this.triggerMethod('item:before:close');\n\n    Marionette.View.prototype.close.apply(this, slice(arguments));\n\n    this.triggerMethod('item:closed');\n  }\n});\n\n// Collection View\n// ---------------\n\n// A view that iterates over a Backbone.Collection\n// and renders an individual ItemView for each model.\nMarionette.CollectionView = Marionette.View.extend({\n  // used as the prefix for item view events\n  // that are forwarded through the collectionview\n  itemViewEventPrefix: \"itemview\",\n\n  // constructor\n  constructor: function(options){\n    this._initChildViewStorage();\n\n    Marionette.View.prototype.constructor.apply(this, slice(arguments));\n\n    this._initialEvents();\n    this.initRenderBuffer();\n  },\n\n  // Instead of inserting elements one by one into the page,\n  // it's much more performant to insert elements into a document\n  // fragment and then insert that document fragment into the page\n  initRenderBuffer: function() {\n    this.elBuffer = document.createDocumentFragment();\n    this._bufferedChildren = [];\n  },\n\n  startBuffering: function() {\n    this.initRenderBuffer();\n    this.isBuffering = true;\n  },\n\n  endBuffering: function() {\n    this.isBuffering = false;\n    this.appendBuffer(this, this.elBuffer);\n    this._triggerShowBufferedChildren();\n    this.initRenderBuffer();\n  },\n\n  _triggerShowBufferedChildren: function () {\n    if (this._isShown) {\n      _.each(this._bufferedChildren, function (child) {\n        Marionette.triggerMethod.call(child, \"show\");\n      });\n      this._bufferedChildren = [];\n    }\n  },\n\n  // Configured the initial events that the collection view\n  // binds to.\n  _initialEvents: function(){\n    if (this.collection){\n      this.listenTo(this.collection, \"add\", this.addChildView, this);\n      this.listenTo(this.collection, \"remove\", this.removeItemView, this);\n      this.listenTo(this.collection, \"reset\", this.render, this);\n    }\n  },\n\n  // Handle a child item added to the collection\n  addChildView: function(item, collection, options){\n    this.closeEmptyView();\n    var ItemView = this.getItemView(item);\n    var index = this.collection.indexOf(item);\n    this.addItemView(item, ItemView, index);\n  },\n\n  // Override from `Marionette.View` to guarantee the `onShow` method\n  // of child views is called.\n  onShowCalled: function(){\n    this.children.each(function(child){\n      Marionette.triggerMethod.call(child, \"show\");\n    });\n  },\n\n  // Internal method to trigger the before render callbacks\n  // and events\n  triggerBeforeRender: function(){\n    this.triggerMethod(\"before:render\", this);\n    this.triggerMethod(\"collection:before:render\", this);\n  },\n\n  // Internal method to trigger the rendered callbacks and\n  // events\n  triggerRendered: function(){\n    this.triggerMethod(\"render\", this);\n    this.triggerMethod(\"collection:rendered\", this);\n  },\n\n  // Render the collection of items. Override this method to\n  // provide your own implementation of a render function for\n  // the collection view.\n  render: function(){\n    this.isClosed = false;\n    this.triggerBeforeRender();\n    this._renderChildren();\n    this.triggerRendered();\n    return this;\n  },\n\n  // Internal method. Separated so that CompositeView can have\n  // more control over events being triggered, around the rendering\n  // process\n  _renderChildren: function(){\n    this.startBuffering();\n\n    this.closeEmptyView();\n    this.closeChildren();\n\n    if (!this.isEmpty(this.collection)) {\n      this.showCollection();\n    } else {\n      this.showEmptyView();\n    }\n\n    this.endBuffering();\n  },\n\n  // Internal method to loop through each item in the\n  // collection view and show it\n  showCollection: function(){\n    var ItemView;\n    this.collection.each(function(item, index){\n      ItemView = this.getItemView(item);\n      this.addItemView(item, ItemView, index);\n    }, this);\n  },\n\n  // Internal method to show an empty view in place of\n  // a collection of item views, when the collection is\n  // empty\n  showEmptyView: function(){\n    var EmptyView = this.getEmptyView();\n\n    if (EmptyView && !this._showingEmptyView){\n      this._showingEmptyView = true;\n      var model = new Backbone.Model();\n      this.addItemView(model, EmptyView, 0);\n    }\n  },\n\n  // Internal method to close an existing emptyView instance\n  // if one exists. Called when a collection view has been\n  // rendered empty, and then an item is added to the collection.\n  closeEmptyView: function(){\n    if (this._showingEmptyView){\n      this.closeChildren();\n      delete this._showingEmptyView;\n    }\n  },\n\n  // Retrieve the empty view type\n  getEmptyView: function(){\n    return Marionette.getOption(this, \"emptyView\");\n  },\n\n  // Retrieve the itemView type, either from `this.options.itemView`\n  // or from the `itemView` in the object definition. The \"options\"\n  // takes precedence.\n  getItemView: function(item){\n    var itemView = Marionette.getOption(this, \"itemView\");\n\n    if (!itemView){\n      throwError(\"An `itemView` must be specified\", \"NoItemViewError\");\n    }\n\n    return itemView;\n  },\n\n  // Render the child item's view and add it to the\n  // HTML for the collection view.\n  addItemView: function(item, ItemView, index){\n    // get the itemViewOptions if any were specified\n    var itemViewOptions = Marionette.getOption(this, \"itemViewOptions\");\n    if (_.isFunction(itemViewOptions)){\n      itemViewOptions = itemViewOptions.call(this, item, index);\n    }\n\n    // build the view\n    var view = this.buildItemView(item, ItemView, itemViewOptions);\n\n    // set up the child view event forwarding\n    this.addChildViewEventForwarding(view);\n\n    // this view is about to be added\n    this.triggerMethod(\"before:item:added\", view);\n\n    // Store the child view itself so we can properly\n    // remove and/or close it later\n    this.children.add(view);\n\n    // Render it and show it\n    this.renderItemView(view, index);\n\n    // call the \"show\" method if the collection view\n    // has already been shown\n    if (this._isShown && !this.isBuffering){\n      Marionette.triggerMethod.call(view, \"show\");\n    }\n\n    // this view was added\n    this.triggerMethod(\"after:item:added\", view);\n\n    return view;\n  },\n\n  // Set up the child view event forwarding. Uses an \"itemview:\"\n  // prefix in front of all forwarded events.\n  addChildViewEventForwarding: function(view){\n    var prefix = Marionette.getOption(this, \"itemViewEventPrefix\");\n\n    // Forward all child item view events through the parent,\n    // prepending \"itemview:\" to the event name\n    this.listenTo(view, \"all\", function(){\n      var args = slice(arguments);\n      var rootEvent = args[0];\n      var itemEvents = this.normalizeMethods(this.getItemEvents());\n\n      args[0] = prefix + \":\" + rootEvent;\n      args.splice(1, 0, view);\n\n      // call collectionView itemEvent if defined\n      if (typeof itemEvents !== \"undefined\" && _.isFunction(itemEvents[rootEvent])) {\n        itemEvents[rootEvent].apply(this, args);\n      }\n\n      Marionette.triggerMethod.apply(this, args);\n    }, this);\n  },\n\n  // returns the value of itemEvents depending on if a function\n  getItemEvents: function() {\n    if (_.isFunction(this.itemEvents)) {\n      return this.itemEvents.call(this);\n    }\n\n    return this.itemEvents;\n  },\n\n  // render the item view\n  renderItemView: function(view, index) {\n    view.render();\n    this.appendHtml(this, view, index);\n  },\n\n  // Build an `itemView` for every model in the collection.\n  buildItemView: function(item, ItemViewType, itemViewOptions){\n    var options = _.extend({model: item}, itemViewOptions);\n    return new ItemViewType(options);\n  },\n\n  // get the child view by item it holds, and remove it\n  removeItemView: function(item){\n    var view = this.children.findByModel(item);\n    this.removeChildView(view);\n    this.checkEmpty();\n  },\n\n  // Remove the child view and close it\n  removeChildView: function(view){\n\n    // shut down the child view properly,\n    // including events that the collection has from it\n    if (view){\n      this.stopListening(view);\n\n      // call 'close' or 'remove', depending on which is found\n      if (view.close) { view.close(); }\n      else if (view.remove) { view.remove(); }\n\n      this.children.remove(view);\n    }\n\n    this.triggerMethod(\"item:removed\", view);\n  },\n\n  // helper to check if the collection is empty\n  isEmpty: function(collection){\n    // check if we're empty now\n    return !this.collection || this.collection.length === 0;\n  },\n\n  // If empty, show the empty view\n  checkEmpty: function (){\n    if (this.isEmpty(this.collection)){\n      this.showEmptyView();\n    }\n  },\n\n  // You might need to override this if you've overridden appendHtml\n  appendBuffer: function(collectionView, buffer) {\n    collectionView.$el.append(buffer);\n  },\n\n  // Append the HTML to the collection's `el`.\n  // Override this method to do something other\n  // then `.append`.\n  appendHtml: function(collectionView, itemView, index){\n    if (collectionView.isBuffering) {\n      // buffering happens on reset events and initial renders\n      // in order to reduce the number of inserts into the\n      // document, which are expensive.\n      collectionView.elBuffer.appendChild(itemView.el);\n      collectionView._bufferedChildren.push(itemView);\n    }\n    else {\n      // If we've already rendered the main collection, just\n      // append the new items directly into the element.\n      collectionView.$el.append(itemView.el);\n    }\n  },\n\n  // Internal method to set up the `children` object for\n  // storing all of the child views\n  _initChildViewStorage: function(){\n    this.children = new Backbone.ChildViewContainer();\n  },\n\n  // Handle cleanup and other closing needs for\n  // the collection of views.\n  close: function(){\n    if (this.isClosed){ return; }\n\n    this.triggerMethod(\"collection:before:close\");\n    this.closeChildren();\n    this.triggerMethod(\"collection:closed\");\n\n    Marionette.View.prototype.close.apply(this, slice(arguments));\n  },\n\n  // Close the child views that this collection view\n  // is holding on to, if any\n  closeChildren: function(){\n    this.children.each(function(child){\n      this.removeChildView(child);\n    }, this);\n    this.checkEmpty();\n  }\n});\n\n\n// Composite View\n// --------------\n\n// Used for rendering a branch-leaf, hierarchical structure.\n// Extends directly from CollectionView and also renders an\n// an item view as `modelView`, for the top leaf\nMarionette.CompositeView = Marionette.CollectionView.extend({\n\n  // Setting up the inheritance chain which allows changes to\n  // Marionette.CollectionView.prototype.constructor which allows overriding\n  constructor: function(){\n    Marionette.CollectionView.prototype.constructor.apply(this, slice(arguments));\n  },\n\n  // Configured the initial events that the composite view\n  // binds to. Override this method to prevent the initial\n  // events, or to add your own initial events.\n  _initialEvents: function(){\n\n    // Bind only after composite view in rendered to avoid adding child views\n    // to unexisting itemViewContainer\n    this.once('render', function () {\n      if (this.collection){\n        this.listenTo(this.collection, \"add\", this.addChildView, this);\n        this.listenTo(this.collection, \"remove\", this.removeItemView, this);\n        this.listenTo(this.collection, \"reset\", this._renderChildren, this);\n      }\n    });\n\n  },\n\n  // Retrieve the `itemView` to be used when rendering each of\n  // the items in the collection. The default is to return\n  // `this.itemView` or Marionette.CompositeView if no `itemView`\n  // has been defined\n  getItemView: function(item){\n    var itemView = Marionette.getOption(this, \"itemView\") || this.constructor;\n\n    if (!itemView){\n      throwError(\"An `itemView` must be specified\", \"NoItemViewError\");\n    }\n\n    return itemView;\n  },\n\n  // Serialize the collection for the view.\n  // You can override the `serializeData` method in your own view\n  // definition, to provide custom serialization for your view's data.\n  serializeData: function(){\n    var data = {};\n\n    if (this.model){\n      data = this.model.toJSON();\n    }\n\n    return data;\n  },\n\n  // Renders the model once, and the collection once. Calling\n  // this again will tell the model's view to re-render itself\n  // but the collection will not re-render.\n  render: function(){\n    this.isRendered = true;\n    this.isClosed = false;\n    this.resetItemViewContainer();\n\n    this.triggerBeforeRender();\n    var html = this.renderModel();\n    this.$el.html(html);\n    // the ui bindings is done here and not at the end of render since they\n    // will not be available until after the model is rendered, but should be\n    // available before the collection is rendered.\n    this.bindUIElements();\n    this.triggerMethod(\"composite:model:rendered\");\n\n    this._renderChildren();\n\n    this.triggerMethod(\"composite:rendered\");\n    this.triggerRendered();\n    return this;\n  },\n\n  _renderChildren: function(){\n    if (this.isRendered){\n      this.triggerMethod(\"composite:collection:before:render\");\n      Marionette.CollectionView.prototype._renderChildren.call(this);\n      this.triggerMethod(\"composite:collection:rendered\");\n    }\n  },\n\n  // Render an individual model, if we have one, as\n  // part of a composite view (branch / leaf). For example:\n  // a treeview.\n  renderModel: function(){\n    var data = {};\n    data = this.serializeData();\n    data = this.mixinTemplateHelpers(data);\n\n    var template = this.getTemplate();\n    return Marionette.Renderer.render(template, data);\n  },\n\n\n  // You might need to override this if you've overridden appendHtml\n  appendBuffer: function(compositeView, buffer) {\n    var $container = this.getItemViewContainer(compositeView);\n    $container.append(buffer);\n  },\n\n  // Appends the `el` of itemView instances to the specified\n  // `itemViewContainer` (a jQuery selector). Override this method to\n  // provide custom logic of how the child item view instances have their\n  // HTML appended to the composite view instance.\n  appendHtml: function(compositeView, itemView, index){\n    if (compositeView.isBuffering) {\n      compositeView.elBuffer.appendChild(itemView.el);\n      compositeView._bufferedChildren.push(itemView);\n    }\n    else {\n      // If we've already rendered the main collection, just\n      // append the new items directly into the element.\n      var $container = this.getItemViewContainer(compositeView);\n      $container.append(itemView.el);\n    }\n  },\n\n\n  // Internal method to ensure an `$itemViewContainer` exists, for the\n  // `appendHtml` method to use.\n  getItemViewContainer: function(containerView){\n    if (\"$itemViewContainer\" in containerView){\n      return containerView.$itemViewContainer;\n    }\n\n    var container;\n    var itemViewContainer = Marionette.getOption(containerView, \"itemViewContainer\");\n    if (itemViewContainer){\n\n      var selector = _.isFunction(itemViewContainer) ? itemViewContainer.call(this) : itemViewContainer;\n      container = containerView.$(selector);\n      if (container.length <= 0) {\n        throwError(\"The specified `itemViewContainer` was not found: \" + containerView.itemViewContainer, \"ItemViewContainerMissingError\");\n      }\n\n    } else {\n      container = containerView.$el;\n    }\n\n    containerView.$itemViewContainer = container;\n    return container;\n  },\n\n  // Internal method to reset the `$itemViewContainer` on render\n  resetItemViewContainer: function(){\n    if (this.$itemViewContainer){\n      delete this.$itemViewContainer;\n    }\n  }\n});\n\n\n// Layout\n// ------\n\n// Used for managing application layouts, nested layouts and\n// multiple regions within an application or sub-application.\n//\n// A specialized view type that renders an area of HTML and then\n// attaches `Region` instances to the specified `regions`.\n// Used for composite view management and sub-application areas.\nMarionette.Layout = Marionette.ItemView.extend({\n  regionType: Marionette.Region,\n\n  // Ensure the regions are available when the `initialize` method\n  // is called.\n  constructor: function (options) {\n    options = options || {};\n\n    this._firstRender = true;\n    this._initializeRegions(options);\n\n    Marionette.ItemView.prototype.constructor.call(this, options);\n  },\n\n  // Layout's render will use the existing region objects the\n  // first time it is called. Subsequent calls will close the\n  // views that the regions are showing and then reset the `el`\n  // for the regions to the newly rendered DOM elements.\n  render: function(){\n\n    if (this.isClosed){\n      // a previously closed layout means we need to\n      // completely re-initialize the regions\n      this._initializeRegions();\n    }\n    if (this._firstRender) {\n      // if this is the first render, don't do anything to\n      // reset the regions\n      this._firstRender = false;\n    } else if (!this.isClosed){\n      // If this is not the first render call, then we need to\n      // re-initializing the `el` for each region\n      this._reInitializeRegions();\n    }\n\n    var args = Array.prototype.slice.apply(arguments);\n    var result = Marionette.ItemView.prototype.render.apply(this, args);\n\n    return result;\n  },\n\n  // Handle closing regions, and then close the view itself.\n  close: function () {\n    if (this.isClosed){ return; }\n    this.regionManager.close();\n    var args = Array.prototype.slice.apply(arguments);\n    Marionette.ItemView.prototype.close.apply(this, args);\n  },\n\n  // Add a single region, by name, to the layout\n  addRegion: function(name, definition){\n    var regions = {};\n    regions[name] = definition;\n    return this._buildRegions(regions)[name];\n  },\n\n  // Add multiple regions as a {name: definition, name2: def2} object literal\n  addRegions: function(regions){\n    this.regions = _.extend({}, this.regions, regions);\n    return this._buildRegions(regions);\n  },\n\n  // Remove a single region from the Layout, by name\n  removeRegion: function(name){\n    delete this.regions[name];\n    return this.regionManager.removeRegion(name);\n  },\n\n  // internal method to build regions\n  _buildRegions: function(regions){\n    var that = this;\n\n    var defaults = {\n      regionType: Marionette.getOption(this, \"regionType\"),\n      parentEl: function(){ return that.$el; }\n    };\n\n    return this.regionManager.addRegions(regions, defaults);\n  },\n\n  // Internal method to initialize the regions that have been defined in a\n  // `regions` attribute on this layout.\n  _initializeRegions: function (options) {\n    var regions;\n    this._initRegionManager();\n\n    if (_.isFunction(this.regions)) {\n      regions = this.regions(options);\n    } else {\n      regions = this.regions || {};\n    }\n\n    this.addRegions(regions);\n  },\n\n  // Internal method to re-initialize all of the regions by updating the `el` that\n  // they point to\n  _reInitializeRegions: function(){\n    this.regionManager.closeRegions();\n    this.regionManager.each(function(region){\n      region.reset();\n    });\n  },\n\n  // Internal method to initialize the region manager\n  // and all regions in it\n  _initRegionManager: function(){\n    this.regionManager = new Marionette.RegionManager();\n\n    this.listenTo(this.regionManager, \"region:add\", function(name, region){\n      this[name] = region;\n      this.trigger(\"region:add\", name, region);\n    });\n\n    this.listenTo(this.regionManager, \"region:remove\", function(name, region){\n      delete this[name];\n      this.trigger(\"region:remove\", name, region);\n    });\n  }\n});\n\n\n// AppRouter\n// ---------\n\n// Reduce the boilerplate code of handling route events\n// and then calling a single method on another object.\n// Have your routers configured to call the method on\n// your object, directly.\n//\n// Configure an AppRouter with `appRoutes`.\n//\n// App routers can only take one `controller` object.\n// It is recommended that you divide your controller\n// objects in to smaller pieces of related functionality\n// and have multiple routers / controllers, instead of\n// just one giant router and controller.\n//\n// You can also add standard routes to an AppRouter.\n\nMarionette.AppRouter = Backbone.Router.extend({\n\n  constructor: function(options){\n    Backbone.Router.prototype.constructor.apply(this, slice(arguments));\n\n    this.options = options || {};\n\n    var appRoutes = Marionette.getOption(this, \"appRoutes\");\n    var controller = this._getController();\n    this.processAppRoutes(controller, appRoutes);\n  },\n\n  // Similar to route method on a Backbone Router but\n  // method is called on the controller\n  appRoute: function(route, methodName) {\n    var controller = this._getController();\n    this._addAppRoute(controller, route, methodName);\n  },\n\n  // Internal method to process the `appRoutes` for the\n  // router, and turn them in to routes that trigger the\n  // specified method on the specified `controller`.\n  processAppRoutes: function(controller, appRoutes) {\n    if (!appRoutes){ return; }\n\n    var routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes\n\n    _.each(routeNames, function(route) {\n      this._addAppRoute(controller, route, appRoutes[route]);\n    }, this);\n  },\n\n  _getController: function(){\n    return Marionette.getOption(this, \"controller\");\n  },\n\n  _addAppRoute: function(controller, route, methodName){\n    var method = controller[methodName];\n\n    if (!method) {\n      throw new Error(\"Method '\" + methodName + \"' was not found on the controller\");\n    }\n\n    this.route(route, methodName, _.bind(method, controller));\n  }\n});\n\n\n// Application\n// -----------\n\n// Contain and manage the composite application as a whole.\n// Stores and starts up `Region` objects, includes an\n// event aggregator as `app.vent`\nMarionette.Application = function(options){\n  this._initRegionManager();\n  this._initCallbacks = new Marionette.Callbacks();\n  this.vent = new Backbone.Wreqr.EventAggregator();\n  this.commands = new Backbone.Wreqr.Commands();\n  this.reqres = new Backbone.Wreqr.RequestResponse();\n  this.submodules = {};\n\n  _.extend(this, options);\n\n  this.triggerMethod = Marionette.triggerMethod;\n};\n\n_.extend(Marionette.Application.prototype, Backbone.Events, {\n  // Command execution, facilitated by Backbone.Wreqr.Commands\n  execute: function(){\n    var args = Array.prototype.slice.apply(arguments);\n    this.commands.execute.apply(this.commands, args);\n  },\n\n  // Request/response, facilitated by Backbone.Wreqr.RequestResponse\n  request: function(){\n    var args = Array.prototype.slice.apply(arguments);\n    return this.reqres.request.apply(this.reqres, args);\n  },\n\n  // Add an initializer that is either run at when the `start`\n  // method is called, or run immediately if added after `start`\n  // has already been called.\n  addInitializer: function(initializer){\n    this._initCallbacks.add(initializer);\n  },\n\n  // kick off all of the application's processes.\n  // initializes all of the regions that have been added\n  // to the app, and runs all of the initializer functions\n  start: function(options){\n    this.triggerMethod(\"initialize:before\", options);\n    this._initCallbacks.run(options, this);\n    this.triggerMethod(\"initialize:after\", options);\n\n    this.triggerMethod(\"start\", options);\n  },\n\n  // Add regions to your app.\n  // Accepts a hash of named strings or Region objects\n  // addRegions({something: \"#someRegion\"})\n  // addRegions({something: Region.extend({el: \"#someRegion\"}) });\n  addRegions: function(regions){\n    return this._regionManager.addRegions(regions);\n  },\n\n  // Close all regions in the app, without removing them\n  closeRegions: function(){\n    this._regionManager.closeRegions();\n  },\n\n  // Removes a region from your app, by name\n  // Accepts the regions name\n  // removeRegion('myRegion')\n  removeRegion: function(region) {\n    this._regionManager.removeRegion(region);\n  },\n\n  // Provides alternative access to regions\n  // Accepts the region name\n  // getRegion('main')\n  getRegion: function(region) {\n    return this._regionManager.get(region);\n  },\n\n  // Create a module, attached to the application\n  module: function(moduleNames, moduleDefinition){\n    var ModuleClass = Marionette.Module;\n\n    // Overwrite the module class if the user specifies one\n    if (moduleDefinition) {\n      ModuleClass = moduleDefinition.moduleClass || ModuleClass;\n    }\n\n    // slice the args, and add this application object as the\n    // first argument of the array\n    var args = slice(arguments);\n    args.unshift(this);\n\n    // see the Marionette.Module object for more information\n    return ModuleClass.create.apply(ModuleClass, args);\n  },\n\n  // Internal method to set up the region manager\n  _initRegionManager: function(){\n    this._regionManager = new Marionette.RegionManager();\n\n    this.listenTo(this._regionManager, \"region:add\", function(name, region){\n      this[name] = region;\n    });\n\n    this.listenTo(this._regionManager, \"region:remove\", function(name, region){\n      delete this[name];\n    });\n  }\n});\n\n// Copy the `extend` function used by Backbone's classes\nMarionette.Application.extend = Marionette.extend;\n\n// Module\n// ------\n\n// A simple module system, used to create privacy and encapsulation in\n// Marionette applications\nMarionette.Module = function(moduleName, app, options){\n  this.moduleName = moduleName;\n  this.options = _.extend({}, this.options, options);\n  this.initialize = options.initialize || this.initialize;\n\n  // store sub-modules\n  this.submodules = {};\n\n  this._setupInitializersAndFinalizers();\n\n  // store the configuration for this module\n  this.app = app;\n  this.startWithParent = true;\n\n  this.triggerMethod = Marionette.triggerMethod;\n\n  if (_.isFunction(this.initialize)){\n    this.initialize(this.options, moduleName, app);\n  }\n};\n\nMarionette.Module.extend = Marionette.extend;\n\n// Extend the Module prototype with events / listenTo, so that the module\n// can be used as an event aggregator or pub/sub.\n_.extend(Marionette.Module.prototype, Backbone.Events, {\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic when extending Marionette.Module.\n  initialize: function(){},\n\n  // Initializer for a specific module. Initializers are run when the\n  // module's `start` method is called.\n  addInitializer: function(callback){\n    this._initializerCallbacks.add(callback);\n  },\n\n  // Finalizers are run when a module is stopped. They are used to teardown\n  // and finalize any variables, references, events and other code that the\n  // module had set up.\n  addFinalizer: function(callback){\n    this._finalizerCallbacks.add(callback);\n  },\n\n  // Start the module, and run all of its initializers\n  start: function(options){\n    // Prevent re-starting a module that is already started\n    if (this._isInitialized){ return; }\n\n    // start the sub-modules (depth-first hierarchy)\n    _.each(this.submodules, function(mod){\n      // check to see if we should start the sub-module with this parent\n      if (mod.startWithParent){\n        mod.start(options);\n      }\n    });\n\n    // run the callbacks to \"start\" the current module\n    this.triggerMethod(\"before:start\", options);\n\n    this._initializerCallbacks.run(options, this);\n    this._isInitialized = true;\n\n    this.triggerMethod(\"start\", options);\n  },\n\n  // Stop this module by running its finalizers and then stop all of\n  // the sub-modules for this module\n  stop: function(){\n    // if we are not initialized, don't bother finalizing\n    if (!this._isInitialized){ return; }\n    this._isInitialized = false;\n\n    Marionette.triggerMethod.call(this, \"before:stop\");\n\n    // stop the sub-modules; depth-first, to make sure the\n    // sub-modules are stopped / finalized before parents\n    _.each(this.submodules, function(mod){ mod.stop(); });\n\n    // run the finalizers\n    this._finalizerCallbacks.run(undefined,this);\n\n    // reset the initializers and finalizers\n    this._initializerCallbacks.reset();\n    this._finalizerCallbacks.reset();\n\n    Marionette.triggerMethod.call(this, \"stop\");\n  },\n\n  // Configure the module with a definition function and any custom args\n  // that are to be passed in to the definition function\n  addDefinition: function(moduleDefinition, customArgs){\n    this._runModuleDefinition(moduleDefinition, customArgs);\n  },\n\n  // Internal method: run the module definition function with the correct\n  // arguments\n  _runModuleDefinition: function(definition, customArgs){\n    if (!definition){ return; }\n\n    // build the correct list of arguments for the module definition\n    var args = _.flatten([\n      this,\n      this.app,\n      Backbone,\n      Marionette,\n      Marionette.$, _,\n      customArgs\n    ]);\n\n    definition.apply(this, args);\n  },\n\n  // Internal method: set up new copies of initializers and finalizers.\n  // Calling this method will wipe out all existing initializers and\n  // finalizers.\n  _setupInitializersAndFinalizers: function(){\n    this._initializerCallbacks = new Marionette.Callbacks();\n    this._finalizerCallbacks = new Marionette.Callbacks();\n  }\n});\n\n// Type methods to create modules\n_.extend(Marionette.Module, {\n\n  // Create a module, hanging off the app parameter as the parent object.\n  create: function(app, moduleNames, moduleDefinition){\n    var module = app;\n\n    // get the custom args passed in after the module definition and\n    // get rid of the module name and definition function\n    var customArgs = slice(arguments);\n    customArgs.splice(0, 3);\n\n    // split the module names and get the length\n    moduleNames = moduleNames.split(\".\");\n    var length = moduleNames.length;\n\n    // store the module definition for the last module in the chain\n    var moduleDefinitions = [];\n    moduleDefinitions[length-1] = moduleDefinition;\n\n    // Loop through all the parts of the module definition\n    _.each(moduleNames, function(moduleName, i){\n      var parentModule = module;\n      module = this._getModule(parentModule, moduleName, app, moduleDefinition);\n      this._addModuleDefinition(parentModule, module, moduleDefinitions[i], customArgs);\n    }, this);\n\n    // Return the last module in the definition chain\n    return module;\n  },\n\n  _getModule: function(parentModule, moduleName, app, def, args){\n    var ModuleClass = Marionette.Module;\n    var options = _.extend({}, def);\n    if (def) {\n      ModuleClass = def.moduleClass || ModuleClass;\n    }\n\n    // Get an existing module of this name if we have one\n    var module = parentModule[moduleName];\n\n    if (!module){\n      // Create a new module if we don't have one\n      module = new ModuleClass(moduleName, app, options);\n      parentModule[moduleName] = module;\n      // store the module on the parent\n      parentModule.submodules[moduleName] = module;\n    }\n\n    return module;\n  },\n\n  _addModuleDefinition: function(parentModule, module, def, args){\n    var fn;\n    var startWithParent;\n\n    if (_.isFunction(def)){\n      // if a function is supplied for the module definition\n      fn = def;\n      startWithParent = true;\n\n    } else if (_.isObject(def)){\n      // if an object is supplied\n      fn = def.define;\n      startWithParent = (typeof def.startWithParent !== 'undefined') ? def.startWithParent : true;\n\n    } else {\n      // if nothing is supplied\n      startWithParent = true;\n    }\n\n    // add module definition if needed\n    if (fn){\n      module.addDefinition(fn, args);\n    }\n\n    // `and` the two together, ensuring a single `false` will prevent it\n    // from starting with the parent\n    module.startWithParent = module.startWithParent && startWithParent;\n\n    // setup auto-start if needed\n    if (module.startWithParent && !module.startWithParentIsConfigured){\n\n      // only configure this once\n      module.startWithParentIsConfigured = true;\n\n      // add the module initializer config\n      parentModule.addInitializer(function(options){\n        if (module.startWithParent){\n          module.start(options);\n        }\n      });\n\n    }\n\n  }\n});\n\n\n\n  return Marionette;\n})(this, Backbone, _);\n"]}