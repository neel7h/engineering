{"version":3,"file":"jquery-mousewheel.min.js","sources":["jquery-mousewheel.js"],"names":["factory","define","amd","exports","module","jQuery","$","handler","event","fn","orgEvent","window","args","slice","call","arguments","delta","deltaX","deltaY","absDelta","absDeltaXY","fix","type","wheelDelta","detail","undefined","wheelDeltaY","wheelDeltaX","Math","abs","lowestDelta","max","lowestDeltaXY","unshift","dispatch","handle","apply","this","toFix","toBind","document","documentMode","fixHooks","i","length","mouseHooks","special","mousewheel","setup","addEventListener","onmousewheel","teardown","removeEventListener","extend","bind","trigger","unmousewheel","unbind"],"mappings":"CAYC,SAAUA,GACgB,kBAAXC,SAAyBA,OAAOC,IAExCD,QAAQ,UAAWD,GACO,gBAAZG,SAEdC,OAAOD,QAAUH,EAGjBA,EAAQK,SAEd,SAAUC,GA6CR,QAASC,GAAQC,GACb,GAOIC,GAPAC,EAAWF,GAASG,OAAOH,MAC3BI,KAAUC,MAAMC,KAAKC,UAAW,GAChCC,EAAQ,EACRC,EAAS,EACTC,EAAS,EACTC,EAAW,EACXC,EAAa,CAsCjB,OApCAZ,GAAQF,EAAEE,MAAMa,IAAIX,GACpBF,EAAMc,KAAO,aAGRZ,EAASa,aAAeP,EAAQN,EAASa,YACzCb,EAASc,SAAeR,EAA0B,GAAlBN,EAASc,QAGzCd,EAASQ,SACVA,EAA2B,GAAlBR,EAASQ,OAClBF,EAASE,GAERR,EAASO,SACVA,EAASP,EAASO,OAClBD,EAAkB,GAATC,GAIiBQ,SAAzBf,EAASgB,cAA8BR,EAASR,EAASgB,aAChCD,SAAzBf,EAASiB,cAA8BV,EAAgC,GAAvBP,EAASiB,aAG9DR,EAAWS,KAAKC,IAAIb,KACdc,GAA0BA,EAAXX,KAA2BW,EAAcX,GAC9DC,EAAaQ,KAAKG,IAAIH,KAAKC,IAAIX,GAASU,KAAKC,IAAIZ,MAC3Ce,GAA8BA,EAAbZ,KAA+BY,EAAgBZ,GAGtEX,EAAKO,EAAQ,EAAI,QAAU,OAC3BA,EAASY,KAAKnB,GAAIO,EAAQc,GAC1Bb,EAASW,KAAKnB,GAAIQ,EAASe,GAC3Bd,EAASU,KAAKnB,GAAIS,EAASc,GAG3BpB,EAAKqB,QAAQzB,EAAOQ,EAAOC,EAAQC,IAE3BZ,EAAEE,MAAM0B,UAAY5B,EAAEE,MAAM2B,QAAQC,MAAMC,KAAMzB,GAxF5D,GAEIkB,GAAaE,EAFbM,GAAS,QAAS,aAAc,iBAAkB,uBAClDC,EAAS,WAAaC,WAAYA,SAASC,cAAgB,GAAK,UAAY,aAAc,iBAAkB,sBAGhH,IAAKnC,EAAEE,MAAMkC,SACT,IAAM,GAAIC,GAAIL,EAAMM,OAAQD,GACxBrC,EAAEE,MAAMkC,SAAUJ,IAAQK,IAAOrC,EAAEE,MAAMqC,UAIjDvC,GAAEE,MAAMsC,QAAQC,YACZC,MAAO,WACH,GAAKX,KAAKY,iBACN,IAAM,GAAIN,GAAIJ,EAAOK,OAAQD,GACzBN,KAAKY,iBAAkBV,IAASI,GAAIpC,GAAS,OAGjD8B,MAAKa,aAAe3C,GAI5B4C,SAAU,WACN,GAAKd,KAAKe,oBACN,IAAM,GAAIT,GAAIJ,EAAOK,OAAQD,GACzBN,KAAKe,oBAAqBb,IAASI,GAAIpC,GAAS,OAGpD8B,MAAKa,aAAe,OAKhC5C,EAAEG,GAAG4C,QACDN,WAAY,SAAStC,GACjB,MAAOA,GAAK4B,KAAKiB,KAAK,aAAc7C,GAAM4B,KAAKkB,QAAQ,eAG3DC,aAAc,SAAS/C,GACnB,MAAO4B,MAAKoB,OAAO,aAAchD","sourcesContent":["/*! Copyright (c) 2013 Brandon Aaron (http://brandonaaron.net)\n * Licensed under the MIT License (LICENSE.txt).\n *\n * Thanks to: http://adomas.org/javascript-mouse-wheel/ for some pointers.\n * Thanks to: Mathias Bank(http://www.mathias-bank.de) for a scope bug fix.\n * Thanks to: Seamus Leahy for adding deltaX and deltaY.\n *\n * Version: 3.1.3\n *\n * Requires: 1.2.2+\n */\n\n(function (factory) {\n    if ( typeof define === 'function' && define.amd ) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS style for Browserify\n        module.exports = factory;\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n}(function ($) {\n\n    var toFix = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'];\n    var toBind = 'onwheel' in document || document.documentMode >= 9 ? ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'];\n    var lowestDelta, lowestDeltaXY;\n\n    if ( $.event.fixHooks ) {\n        for ( var i = toFix.length; i; ) {\n            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;\n        }\n    }\n\n    $.event.special.mousewheel = {\n        setup: function() {\n            if ( this.addEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.addEventListener( toBind[--i], handler, false );\n                }\n            } else {\n                this.onmousewheel = handler;\n            }\n        },\n\n        teardown: function() {\n            if ( this.removeEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.removeEventListener( toBind[--i], handler, false );\n                }\n            } else {\n                this.onmousewheel = null;\n            }\n        }\n    };\n\n    $.fn.extend({\n        mousewheel: function(fn) {\n            return fn ? this.bind(\"mousewheel\", fn) : this.trigger(\"mousewheel\");\n        },\n\n        unmousewheel: function(fn) {\n            return this.unbind(\"mousewheel\", fn);\n        }\n    });\n\n\n    function handler(event) {\n        var orgEvent = event || window.event,\n            args = [].slice.call(arguments, 1),\n            delta = 0,\n            deltaX = 0,\n            deltaY = 0,\n            absDelta = 0,\n            absDeltaXY = 0,\n            fn;\n        event = $.event.fix(orgEvent);\n        event.type = \"mousewheel\";\n\n        // Old school scrollwheel delta\n        if ( orgEvent.wheelDelta ) { delta = orgEvent.wheelDelta; }\n        if ( orgEvent.detail )     { delta = orgEvent.detail * -1; }\n\n        // New school wheel delta (wheel event)\n        if ( orgEvent.deltaY ) {\n            deltaY = orgEvent.deltaY * -1;\n            delta  = deltaY;\n        }\n        if ( orgEvent.deltaX ) {\n            deltaX = orgEvent.deltaX;\n            delta  = deltaX * -1;\n        }\n\n        // Webkit\n        if ( orgEvent.wheelDeltaY !== undefined ) { deltaY = orgEvent.wheelDeltaY; }\n        if ( orgEvent.wheelDeltaX !== undefined ) { deltaX = orgEvent.wheelDeltaX * -1; }\n\n        // Look for lowest delta to normalize the delta values\n        absDelta = Math.abs(delta);\n        if ( !lowestDelta || absDelta < lowestDelta ) { lowestDelta = absDelta; }\n        absDeltaXY = Math.max(Math.abs(deltaY), Math.abs(deltaX));\n        if ( !lowestDeltaXY || absDeltaXY < lowestDeltaXY ) { lowestDeltaXY = absDeltaXY; }\n\n        // Get a whole value for the deltas\n        fn = delta > 0 ? 'floor' : 'ceil';\n        delta  = Math[fn](delta / lowestDelta);\n        deltaX = Math[fn](deltaX / lowestDeltaXY);\n        deltaY = Math[fn](deltaY / lowestDeltaXY);\n\n        // Add event and delta to the front of the arguments\n        args.unshift(event, delta, deltaX, deltaY);\n\n        return ($.event.dispatch || $.event.handle).apply(this, args);\n    }\n\n}));\n"]}