{"version":3,"file":"jquery-tablesorter.min.js","sources":["jquery-tablesorter.js"],"names":["$","extend","tablesorter","benchmark","s","d","log","Date","getTime","console","debug","alert","buildParserCache","table","$headers","config","parsersDebug","tBodies","length","rows","list","cells","l","i","p","metadata","sorter","getParserById","headers","detectParserForColumn","id","push","rowIndex","cellIndex","parsers","node","nodeValue","keepLooking","getNodeFromRowAndCellIndex","trimAndGetNodeText","is","trim","getElementText","name","toLowerCase","buildCache","cacheTime","totalRows","totalCells","cache","row","normalized","c","cols","hasClass","cssChildRow","add","j","format","text","supportsTextContent","textContent","textExtraction","childNodes","hasChildNodes","innerHTML","appendToTable","appendTime","r","n","checkCell","tableBody","pos","appender","appendChild","applyWidget","setTimeout","trigger","buildHeaders","time","header_index","computeTableHeaderCellIndexes","$tableHeaders","selectorHeaders","each","index","this","column","parentNode","order","formatSortingOrder","sortInitialOrder","count","checkHeaderMetadata","checkHeaderOptions","sortDisabled","checkHeaderOptionsSortingLocked","lockedOrder","$th","addClass","cssHeader","onRenderHeader","apply","headerList","t","matrix","lookup","thead","getElementsByTagName","trs","firstAvailCol","cellId","rowSpan","colSpan","k","matrixrow","checkCellColSpan","arr","tHead","cell","concat","headerArr","widgets","getWidgetById","v","isValueInArray","a","setHeadersCss","css","removeClass","h","fixColumnWidth","widthFixed","colgroup","append","width","prepend","updateHeaderSortCount","sortList","o","multisort","sortTime","dynamicExp","type","makeSortFunction","e","orgOrderCol","eval","sort","sortWrapper","toString","direction","b","makeSortText","makeSortTextDesc","makeSortNumeric","makeSortNumericDesc","sortText","sortLocaleCompare","localeCompare","sortTextDesc","sortNumeric","sortNumericDesc","getCachedSortType","defaults","cssAsc","cssDesc","sortMultiSortKey","sortForce","sortAppend","widgetZebra","cancelSelection","dateFormat","decimal","construct","settings","$this","data","sortCSS","click","mousedown","onselectstart","bind","me","sortlist","addParser","parser","addWidget","widget","formatFloat","parseFloat","isNaN","formatInt","parseInt","isDigit","test","replace","clearTableBody","empty","firstChild","removeChild","browser","msie","fn","ts","toLocaleLowerCase","RegExp","split","item","jQuery","match","parserMetadataName","$tr","odd"],"mappings":"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","sourcesContent":["/*\r\n * \r\n * TableSorter 2.0 - Client-side table sorting with ease!\r\n * Version 2.0.5b\r\n * @requires jQuery v1.2.3\r\n * \r\n * Copyright (c) 2007 Christian Bach\r\n * Examples and docs at: http://tablesorter.com\r\n * Dual licensed under the MIT and GPL licenses:\r\n * http://www.opensource.org/licenses/mit-license.php\r\n * http://www.gnu.org/licenses/gpl.html\r\n * \r\n */\r\n/**\r\n * \r\n * @description Create a sortable table with multi-column sorting capabilitys\r\n * \r\n * @example $('table').tablesorter();\r\n * @desc Create a simple tablesorter interface.\r\n * \r\n * @example $('table').tablesorter({ sortList:[[0,0],[1,0]] });\r\n * @desc Create a tablesorter interface and sort on the first and secound column column headers.\r\n * \r\n * @example $('table').tablesorter({ headers: { 0: { sorter: false}, 1: {sorter: false} } });\r\n *          \r\n * @desc Create a tablesorter interface and disableing the first and second  column headers.\r\n *      \r\n * \r\n * @example $('table').tablesorter({ headers: { 0: {sorter:\"integer\"}, 1: {sorter:\"currency\"} } });\r\n * \r\n * @desc Create a tablesorter interface and set a column parser for the first\r\n *       and second column.\r\n * \r\n * \r\n * @param Object\r\n *            settings An object literal containing key/value pairs to provide\r\n *            optional settings.\r\n * \r\n * \r\n * @option String cssHeader (optional) A string of the class name to be appended\r\n *         to sortable tr elements in the thead of the table. Default value:\r\n *         \"header\"\r\n * \r\n * @option String cssAsc (optional) A string of the class name to be appended to\r\n *         sortable tr elements in the thead on a ascending sort. Default value:\r\n *         \"headerSortUp\"\r\n * \r\n * @option String cssDesc (optional) A string of the class name to be appended\r\n *         to sortable tr elements in the thead on a descending sort. Default\r\n *         value: \"headerSortDown\"\r\n * \r\n * @option String sortInitialOrder (optional) A string of the inital sorting\r\n *         order can be asc or desc. Default value: \"asc\"\r\n * \r\n * @option String sortMultisortKey (optional) A string of the multi-column sort\r\n *         key. Default value: \"shiftKey\"\r\n * \r\n * @option String textExtraction (optional) A string of the text-extraction\r\n *         method to use. For complex html structures inside td cell set this\r\n *         option to \"complex\", on large tables the complex option can be slow.\r\n *         Default value: \"simple\"\r\n * \r\n * @option Object headers (optional) An array containing the forces sorting\r\n *         rules. This option let's you specify a default sorting rule. Default\r\n *         value: null\r\n * \r\n * @option Array sortList (optional) An array containing the forces sorting\r\n *         rules. This option let's you specify a default sorting rule. Default\r\n *         value: null\r\n * \r\n * @option Array sortForce (optional) An array containing forced sorting rules.\r\n *         This option let's you specify a default sorting rule, which is\r\n *         prepended to user-selected rules. Default value: null\r\n * \r\n * @option Boolean sortLocaleCompare (optional) Boolean flag indicating whatever\r\n *         to use String.localeCampare method or not. Default set to true.\r\n * \r\n * \r\n * @option Array sortAppend (optional) An array containing forced sorting rules.\r\n *         This option let's you specify a default sorting rule, which is\r\n *         appended to user-selected rules. Default value: null\r\n * \r\n * @option Boolean widthFixed (optional) Boolean flag indicating if tablesorter\r\n *         should apply fixed widths to the table columns. This is usefull when\r\n *         using the pager companion plugin. This options requires the dimension\r\n *         jquery plugin. Default value: false\r\n * \r\n * @option Boolean cancelSelection (optional) Boolean flag indicating if\r\n *         tablesorter should cancel selection of the table headers text.\r\n *         Default value: true\r\n * \r\n * @option Boolean debug (optional) Boolean flag indicating if tablesorter\r\n *         should display debuging information usefull for development.\r\n * \r\n * @type jQuery\r\n * \r\n * @name tablesorter\r\n * \r\n * @cat Plugins/Tablesorter\r\n * \r\n * @author Christian Bach/christian.bach@polyester.se\r\n */\r\n\r\n(function ($) {\r\n    $.extend({\r\n        tablesorter: new\r\n        function () {\r\n\r\n            var parsers = [],\r\n                widgets = [];\r\n\r\n            this.defaults = {\r\n                cssHeader: \"header\",\r\n                cssAsc: \"headerSortUp\",\r\n                cssDesc: \"headerSortDown\",\r\n                cssChildRow: \"expand-child\",\r\n                sortInitialOrder: \"asc\",\r\n                sortMultiSortKey: \"shiftKey\",\r\n                sortForce: null,\r\n                sortAppend: null,\r\n                sortLocaleCompare: true,\r\n                textExtraction: \"simple\",\r\n                parsers: {}, widgets: [],\r\n                widgetZebra: {\r\n                    css: [\"even\", \"odd\"]\r\n                }, headers: {}, widthFixed: false,\r\n                cancelSelection: true,\r\n                sortList: [],\r\n                headerList: [],\r\n                dateFormat: \"us\",\r\n                decimal: '/\\.|\\,/g',\r\n                onRenderHeader: null,\r\n                selectorHeaders: 'thead th',\r\n                debug: false\r\n            };\r\n\r\n            /* debuging utils */\r\n\r\n            function benchmark(s, d) {\r\n                log(s + \",\" + (new Date().getTime() - d.getTime()) + \"ms\");\r\n            }\r\n\r\n            this.benchmark = benchmark;\r\n\r\n            function log(s) {\r\n                if (typeof console != \"undefined\" && typeof console.debug != \"undefined\") {\r\n                    console.log(s);\r\n                } else {\r\n                    alert(s);\r\n                }\r\n            }\r\n\r\n            /* parsers utils */\r\n\r\n            function buildParserCache(table, $headers) {\r\n\r\n                if (table.config.debug) {\r\n                    var parsersDebug = \"\";\r\n                }\r\n\r\n                if (table.tBodies.length == 0) return; // In the case of empty tables\r\n                var rows = table.tBodies[0].rows;\r\n\r\n                if (rows[0]) {\r\n\r\n                    var list = [],\r\n                        cells = rows[0].cells,\r\n                        l = cells.length;\r\n\r\n                    for (var i = 0; i < l; i++) {\r\n\r\n                        var p = false;\r\n\r\n                        if ($.metadata && ($($headers[i]).metadata() && $($headers[i]).metadata().sorter)) {\r\n\r\n                            p = getParserById($($headers[i]).metadata().sorter);\r\n\r\n                        } else if ((table.config.headers[i] && table.config.headers[i].sorter)) {\r\n\r\n                            p = getParserById(table.config.headers[i].sorter);\r\n                        }\r\n                        if (!p) {\r\n\r\n                            p = detectParserForColumn(table, rows, -1, i);\r\n                        }\r\n\r\n                        if (table.config.debug) {\r\n                            parsersDebug += \"column:\" + i + \" parser:\" + p.id + \"\\n\";\r\n                        }\r\n\r\n                        list.push(p);\r\n                    }\r\n                }\r\n\r\n                if (table.config.debug) {\r\n                    log(parsersDebug);\r\n                }\r\n\r\n                return list;\r\n            };\r\n\r\n            function detectParserForColumn(table, rows, rowIndex, cellIndex) {\r\n                var l = parsers.length,\r\n                    node = false,\r\n                    nodeValue = false,\r\n                    keepLooking = true;\r\n                while (nodeValue == '' && keepLooking) {\r\n                    rowIndex++;\r\n                    if (rows[rowIndex]) {\r\n                        node = getNodeFromRowAndCellIndex(rows, rowIndex, cellIndex);\r\n                        nodeValue = trimAndGetNodeText(table.config, node);\r\n                        if (table.config.debug) {\r\n                            log('Checking if value was empty on row:' + rowIndex);\r\n                        }\r\n                    } else {\r\n                        keepLooking = false;\r\n                    }\r\n                }\r\n                for (var i = 1; i < l; i++) {\r\n                    if (parsers[i].is(nodeValue, table, node)) {\r\n                        return parsers[i];\r\n                    }\r\n                }\r\n                // 0 is always the generic parser (text)\r\n                return parsers[0];\r\n            }\r\n\r\n            function getNodeFromRowAndCellIndex(rows, rowIndex, cellIndex) {\r\n                return rows[rowIndex].cells[cellIndex];\r\n            }\r\n\r\n            function trimAndGetNodeText(config, node) {\r\n                return $.trim(getElementText(config, node));\r\n            }\r\n\r\n            function getParserById(name) {\r\n                var l = parsers.length;\r\n                for (var i = 0; i < l; i++) {\r\n                    if (parsers[i].id.toLowerCase() == name.toLowerCase()) {\r\n                        return parsers[i];\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n\r\n            /* utils */\r\n\r\n            function buildCache(table) {\r\n\r\n                if (table.config.debug) {\r\n                    var cacheTime = new Date();\r\n                }\r\n\r\n                var totalRows = (table.tBodies[0] && table.tBodies[0].rows.length) || 0,\r\n                    totalCells = (table.tBodies[0].rows[0] && table.tBodies[0].rows[0].cells.length) || 0,\r\n                    parsers = table.config.parsers,\r\n                    cache = {\r\n                        row: [],\r\n                        normalized: []\r\n                    };\r\n\r\n                for (var i = 0; i < totalRows; ++i) {\r\n\r\n                    /** Add the table data to main data array */\r\n                    var c = $(table.tBodies[0].rows[i]),\r\n                        cols = [];\r\n\r\n                    // if this is a child row, add it to the last row's children and\r\n                    // continue to the next row\r\n                    if (c.hasClass(table.config.cssChildRow)) {\r\n                        cache.row[cache.row.length - 1] = cache.row[cache.row.length - 1].add(c);\r\n                        // go to the next for loop\r\n                        continue;\r\n                    }\r\n\r\n                    cache.row.push(c);\r\n\r\n                    for (var j = 0; j < totalCells; ++j) {\r\n                        cols.push(parsers[j].format(getElementText(table.config, c[0].cells[j]), table, c[0].cells[j]));\r\n                    }\r\n\r\n                    cols.push(cache.normalized.length); // add position for rowCache\r\n                    cache.normalized.push(cols);\r\n                    cols = null;\r\n                };\r\n\r\n                if (table.config.debug) {\r\n                    benchmark(\"Building cache for \" + totalRows + \" rows:\", cacheTime);\r\n                }\r\n\r\n                return cache;\r\n            };\r\n\r\n            function getElementText(config, node) {\r\n\r\n                var text = \"\";\r\n\r\n                if (!node) return \"\";\r\n\r\n                if (!config.supportsTextContent) config.supportsTextContent = node.textContent || false;\r\n\r\n                if (config.textExtraction == \"simple\") {\r\n                    if (config.supportsTextContent) {\r\n                        text = node.textContent;\r\n                    } else {\r\n                        if (node.childNodes[0] && node.childNodes[0].hasChildNodes()) {\r\n                            text = node.childNodes[0].innerHTML;\r\n                        } else {\r\n                            text = node.innerHTML;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (typeof(config.textExtraction) == \"function\") {\r\n                        text = config.textExtraction(node);\r\n                    } else {\r\n                        text = $(node).text();\r\n                    }\r\n                }\r\n                return text;\r\n            }\r\n\r\n            function appendToTable(table, cache) {\r\n\r\n                if (table.config.debug) {\r\n                    var appendTime = new Date()\r\n                }\r\n\r\n                var c = cache,\r\n                    r = c.row,\r\n                    n = c.normalized,\r\n                    totalRows = n.length,\r\n                    checkCell = (n[0].length - 1),\r\n                    tableBody = $(table.tBodies[0]),\r\n                    rows = [];\r\n\r\n\r\n                for (var i = 0; i < totalRows; i++) {\r\n                    var pos = n[i][checkCell];\r\n\r\n                    rows.push(r[pos]);\r\n\r\n                    if (!table.config.appender) {\r\n\r\n                        //var o = ;\r\n                        var l = r[pos].length;\r\n                        for (var j = 0; j < l; j++) {\r\n                            tableBody[0].appendChild(r[pos][j]);\r\n                        }\r\n\r\n                        // \r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if (table.config.appender) {\r\n\r\n                    table.config.appender(table, rows);\r\n                }\r\n\r\n                rows = null;\r\n\r\n                if (table.config.debug) {\r\n                    benchmark(\"Rebuilt table:\", appendTime);\r\n                }\r\n\r\n                // apply table widgets\r\n                applyWidget(table);\r\n\r\n                // trigger sortend\r\n                setTimeout(function () {\r\n                    $(table).trigger(\"sortEnd\");\r\n                }, 0);\r\n\r\n            };\r\n\r\n            function buildHeaders(table) {\r\n\r\n                if (table.config.debug) {\r\n                    var time = new Date();\r\n                }\r\n\r\n                var meta = ($.metadata) ? true : false;\r\n                \r\n                var header_index = computeTableHeaderCellIndexes(table);\r\n\r\n                $tableHeaders = $(table.config.selectorHeaders, table).each(function (index) {\r\n\r\n                    this.column = header_index[this.parentNode.rowIndex + \"-\" + this.cellIndex];\r\n                    // this.column = index;\r\n                    this.order = formatSortingOrder(table.config.sortInitialOrder);\r\n                    \r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.count = this.order;\r\n\r\n                    if (checkHeaderMetadata(this) || checkHeaderOptions(table, index)) this.sortDisabled = true;\r\n\t\t\t\t\tif (checkHeaderOptionsSortingLocked(table, index)) this.order = this.lockedOrder = checkHeaderOptionsSortingLocked(table, index);\r\n\r\n                    if (!this.sortDisabled) {\r\n                        var $th = $(this).addClass(table.config.cssHeader);\r\n                        if (table.config.onRenderHeader) table.config.onRenderHeader.apply($th);\r\n                    }\r\n\r\n                    // add cell to headerList\r\n                    table.config.headerList[index] = this;\r\n                });\r\n\r\n                if (table.config.debug) {\r\n                    benchmark(\"Built headers:\", time);\r\n                    log($tableHeaders);\r\n                }\r\n\r\n                return $tableHeaders;\r\n\r\n            };\r\n\r\n            // from:\r\n            // http://www.javascripttoolbox.com/lib/table/examples.php\r\n            // http://www.javascripttoolbox.com/temp/table_cellindex.html\r\n\r\n\r\n            function computeTableHeaderCellIndexes(t) {\r\n                var matrix = [];\r\n                var lookup = {};\r\n                var thead = t.getElementsByTagName('THEAD')[0];\r\n                var trs = thead.getElementsByTagName('TR');\r\n\r\n                for (var i = 0; i < trs.length; i++) {\r\n                    var cells = trs[i].cells;\r\n                    for (var j = 0; j < cells.length; j++) {\r\n                        var c = cells[j];\r\n\r\n                        var rowIndex = c.parentNode.rowIndex;\r\n                        var cellId = rowIndex + \"-\" + c.cellIndex;\r\n                        var rowSpan = c.rowSpan || 1;\r\n                        var colSpan = c.colSpan || 1\r\n                        var firstAvailCol;\r\n                        if (typeof(matrix[rowIndex]) == \"undefined\") {\r\n                            matrix[rowIndex] = [];\r\n                        }\r\n                        // Find first available column in the first row\r\n                        for (var k = 0; k < matrix[rowIndex].length + 1; k++) {\r\n                            if (typeof(matrix[rowIndex][k]) == \"undefined\") {\r\n                                firstAvailCol = k;\r\n                                break;\r\n                            }\r\n                        }\r\n                        lookup[cellId] = firstAvailCol;\r\n                        for (var k = rowIndex; k < rowIndex + rowSpan; k++) {\r\n                            if (typeof(matrix[k]) == \"undefined\") {\r\n                                matrix[k] = [];\r\n                            }\r\n                            var matrixrow = matrix[k];\r\n                            for (var l = firstAvailCol; l < firstAvailCol + colSpan; l++) {\r\n                                matrixrow[l] = \"x\";\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return lookup;\r\n            }\r\n\r\n            function checkCellColSpan(table, rows, row) {\r\n                var arr = [],\r\n                    r = table.tHead.rows,\r\n                    c = r[row].cells;\r\n\r\n                for (var i = 0; i < c.length; i++) {\r\n                    var cell = c[i];\r\n\r\n                    if (cell.colSpan > 1) {\r\n                        arr = arr.concat(checkCellColSpan(table, headerArr, row++));\r\n                    } else {\r\n                        if (table.tHead.length == 1 || (cell.rowSpan > 1 || !r[row + 1])) {\r\n                            arr.push(cell);\r\n                        }\r\n                        // headerArr[row] = (i+row);\r\n                    }\r\n                }\r\n                return arr;\r\n            };\r\n\r\n            function checkHeaderMetadata(cell) {\r\n                if (($.metadata) && ($(cell).metadata().sorter === false)) {\r\n                    return true;\r\n                };\r\n                return false;\r\n            }\r\n\r\n            function checkHeaderOptions(table, i) {\r\n                if ((table.config.headers[i]) && (table.config.headers[i].sorter === false)) {\r\n                    return true;\r\n                };\r\n                return false;\r\n            }\r\n\t\t\t\r\n\t\t\t function checkHeaderOptionsSortingLocked(table, i) {\r\n                if ((table.config.headers[i]) && (table.config.headers[i].lockedOrder)) return table.config.headers[i].lockedOrder;\r\n                return false;\r\n            }\r\n\t\t\t\r\n            function applyWidget(table) {\r\n                var c = table.config.widgets;\r\n                var l = c.length;\r\n                for (var i = 0; i < l; i++) {\r\n\r\n                    getWidgetById(c[i]).format(table);\r\n                }\r\n\r\n            }\r\n\r\n            function getWidgetById(name) {\r\n                var l = widgets.length;\r\n                for (var i = 0; i < l; i++) {\r\n                    if (widgets[i].id.toLowerCase() == name.toLowerCase()) {\r\n                        return widgets[i];\r\n                    }\r\n                }\r\n            };\r\n\r\n            function formatSortingOrder(v) {\r\n                if (typeof(v) != \"Number\") {\r\n                    return (v.toLowerCase() == \"desc\") ? 1 : 0;\r\n                } else {\r\n                    return (v == 1) ? 1 : 0;\r\n                }\r\n            }\r\n\r\n            function isValueInArray(v, a) {\r\n                var l = a.length;\r\n                for (var i = 0; i < l; i++) {\r\n                    if (a[i][0] == v) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n\r\n            function setHeadersCss(table, $headers, list, css) {\r\n                // remove all header information\r\n                $headers.removeClass(css[0]).removeClass(css[1]);\r\n\r\n                var h = [];\r\n                $headers.each(function (offset) {\r\n                    if (!this.sortDisabled) {\r\n                        h[this.column] = $(this);\r\n                    }\r\n                });\r\n\r\n                var l = list.length;\r\n                for (var i = 0; i < l; i++) {\r\n                    h[list[i][0]].addClass(css[list[i][1]]);\r\n                }\r\n            }\r\n\r\n            function fixColumnWidth(table, $headers) {\r\n                var c = table.config;\r\n                if (c.widthFixed) {\r\n                    var colgroup = $('<colgroup>');\r\n                    $(\"tr:first td\", table.tBodies[0]).each(function () {\r\n                        colgroup.append($('<col>').css('width', $(this).width()));\r\n                    });\r\n                    $(table).prepend(colgroup);\r\n                };\r\n            }\r\n\r\n            function updateHeaderSortCount(table, sortList) {\r\n                var c = table.config,\r\n                    l = sortList.length;\r\n                for (var i = 0; i < l; i++) {\r\n                    var s = sortList[i],\r\n                        o = c.headerList[s[0]];\r\n                    o.count = s[1];\r\n                    o.count++;\r\n                }\r\n            }\r\n\r\n            /* sorting methods */\r\n\r\n            function multisort(table, sortList, cache) {\r\n\r\n                if (table.config.debug) {\r\n                    var sortTime = new Date();\r\n                }\r\n\r\n                var dynamicExp = \"var sortWrapper = function(a,b) {\",\r\n                    l = sortList.length;\r\n\r\n                // TODO: inline functions.\r\n                for (var i = 0; i < l; i++) {\r\n\r\n                    var c = sortList[i][0];\r\n                    var order = sortList[i][1];\r\n                    // var s = (getCachedSortType(table.config.parsers,c) == \"text\") ?\r\n                    // ((order == 0) ? \"sortText\" : \"sortTextDesc\") : ((order == 0) ?\r\n                    // \"sortNumeric\" : \"sortNumericDesc\");\r\n                    // var s = (table.config.parsers[c].type == \"text\") ? ((order == 0)\r\n                    // ? makeSortText(c) : makeSortTextDesc(c)) : ((order == 0) ?\r\n                    // makeSortNumeric(c) : makeSortNumericDesc(c));\r\n                    var s = (table.config.parsers[c].type == \"text\") ? ((order == 0) ? makeSortFunction(\"text\", \"asc\", c) : makeSortFunction(\"text\", \"desc\", c)) : ((order == 0) ? makeSortFunction(\"numeric\", \"asc\", c) : makeSortFunction(\"numeric\", \"desc\", c));\r\n                    var e = \"e\" + i;\r\n\r\n                    dynamicExp += \"var \" + e + \" = \" + s; // + \"(a[\" + c + \"],b[\" + c\r\n                    // + \"]); \";\r\n                    dynamicExp += \"if(\" + e + \") { return \" + e + \"; } \";\r\n                    dynamicExp += \"else { \";\r\n\r\n                }\r\n\r\n                // if value is the same keep orignal order\r\n                var orgOrderCol = cache.normalized[0].length - 1;\r\n                dynamicExp += \"return a[\" + orgOrderCol + \"]-b[\" + orgOrderCol + \"];\";\r\n\r\n                for (var i = 0; i < l; i++) {\r\n                    dynamicExp += \"}; \";\r\n                }\r\n\r\n                dynamicExp += \"return 0; \";\r\n                dynamicExp += \"}; \";\r\n\r\n                if (table.config.debug) {\r\n                    benchmark(\"Evaling expression:\" + dynamicExp, new Date());\r\n                }\r\n\r\n                eval(dynamicExp);\r\n\r\n                cache.normalized.sort(sortWrapper);\r\n\r\n                if (table.config.debug) {\r\n                    benchmark(\"Sorting on \" + sortList.toString() + \" and dir \" + order + \" time:\", sortTime);\r\n                }\r\n\r\n                return cache;\r\n            };\r\n\r\n            function makeSortFunction(type, direction, index) {\r\n                var a = \"a[\" + index + \"]\",\r\n                    b = \"b[\" + index + \"]\";\r\n                if (type == 'text' && direction == 'asc') {\r\n                    return \"(\" + a + \" == \" + b + \" ? 0 : (\" + a + \" === null ? Number.POSITIVE_INFINITY : (\" + b + \" === null ? Number.NEGATIVE_INFINITY : (\" + a + \" < \" + b + \") ? -1 : 1 )));\";\r\n                } else if (type == 'text' && direction == 'desc') {\r\n                    return \"(\" + a + \" == \" + b + \" ? 0 : (\" + a + \" === null ? Number.POSITIVE_INFINITY : (\" + b + \" === null ? Number.NEGATIVE_INFINITY : (\" + b + \" < \" + a + \") ? -1 : 1 )));\";\r\n                } else if (type == 'numeric' && direction == 'asc') {\r\n                    return \"(\" + a + \" === null && \" + b + \" === null) ? 0 :(\" + a + \" === null ? Number.POSITIVE_INFINITY : (\" + b + \" === null ? Number.NEGATIVE_INFINITY : \" + a + \" - \" + b + \"));\";\r\n                } else if (type == 'numeric' && direction == 'desc') {\r\n                    return \"(\" + a + \" === null && \" + b + \" === null) ? 0 :(\" + a + \" === null ? Number.POSITIVE_INFINITY : (\" + b + \" === null ? Number.NEGATIVE_INFINITY : \" + b + \" - \" + a + \"));\";\r\n                }\r\n            };\r\n\r\n            function makeSortText(i) {\r\n                return \"((a[\" + i + \"] < b[\" + i + \"]) ? -1 : ((a[\" + i + \"] > b[\" + i + \"]) ? 1 : 0));\";\r\n            };\r\n\r\n            function makeSortTextDesc(i) {\r\n                return \"((b[\" + i + \"] < a[\" + i + \"]) ? -1 : ((b[\" + i + \"] > a[\" + i + \"]) ? 1 : 0));\";\r\n            };\r\n\r\n            function makeSortNumeric(i) {\r\n                return \"a[\" + i + \"]-b[\" + i + \"];\";\r\n            };\r\n\r\n            function makeSortNumericDesc(i) {\r\n                return \"b[\" + i + \"]-a[\" + i + \"];\";\r\n            };\r\n\r\n            function sortText(a, b) {\r\n                if (table.config.sortLocaleCompare) return a.localeCompare(b);\r\n                return ((a < b) ? -1 : ((a > b) ? 1 : 0));\r\n            };\r\n\r\n            function sortTextDesc(a, b) {\r\n                if (table.config.sortLocaleCompare) return b.localeCompare(a);\r\n                return ((b < a) ? -1 : ((b > a) ? 1 : 0));\r\n            };\r\n\r\n            function sortNumeric(a, b) {\r\n                return a - b;\r\n            };\r\n\r\n            function sortNumericDesc(a, b) {\r\n                return b - a;\r\n            };\r\n\r\n            function getCachedSortType(parsers, i) {\r\n                return parsers[i].type;\r\n            }; /* public methods */\r\n            this.construct = function (settings) {\r\n                return this.each(function () {\r\n                    // if no thead or tbody quit.\r\n                    if (!this.tHead || !this.tBodies) return;\r\n                    // declare\r\n                    var $this, $document, $headers, cache, config, shiftDown = 0,\r\n                        sortOrder;\r\n                    // new blank config object\r\n                    this.config = {};\r\n                    // merge and extend.\r\n                    config = $.extend(this.config, $.tablesorter.defaults, settings);\r\n                    // store common expression for speed\r\n                    $this = $(this);\r\n                    // save the settings where they read\r\n                    $.data(this, \"tablesorter\", config);\r\n                    // build headers\r\n                    $headers = buildHeaders(this);\r\n                    // try to auto detect column type, and store in tables config\r\n                    this.config.parsers = buildParserCache(this, $headers);\r\n                    // build the cache for the tbody cells\r\n                    cache = buildCache(this);\r\n                    // get the css class names, could be done else where.\r\n                    var sortCSS = [config.cssDesc, config.cssAsc];\r\n                    // fixate columns if the users supplies the fixedWidth option\r\n                    fixColumnWidth(this);\r\n                    // apply event handling to headers\r\n                    // this is to big, perhaps break it out?\r\n                    $headers.click(\r\n\r\n                    function (e) {\r\n                        var totalRows = ($this[0].tBodies[0] && $this[0].tBodies[0].rows.length) || 0;\r\n                        if (!this.sortDisabled && totalRows > 0) {\r\n                            // Only call sortStart if sorting is\r\n                            // enabled.\r\n                            $this.trigger(\"sortStart\");\r\n                            // store exp, for speed\r\n                            var $cell = $(this);\r\n                            // get current column index\r\n                            var i = this.column;\r\n                            // get current column sort order\r\n                            this.order = this.count++ % 2;\r\n\t\t\t\t\t\t\t// always sort on the locked order.\r\n\t\t\t\t\t\t\tif(this.lockedOrder) this.order = this.lockedOrder;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// user only whants to sort on one\r\n                            // column\r\n                            if (!e[config.sortMultiSortKey]) {\r\n                                // flush the sort list\r\n                                config.sortList = [];\r\n                                if (config.sortForce != null) {\r\n                                    var a = config.sortForce;\r\n                                    for (var j = 0; j < a.length; j++) {\r\n                                        if (a[j][0] != i) {\r\n                                            config.sortList.push(a[j]);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                // add column to sort list\r\n                                config.sortList.push([i, this.order]);\r\n                                // multi column sorting\r\n                            } else {\r\n                                // the user has clicked on an all\r\n                                // ready sortet column.\r\n                                if (isValueInArray(i, config.sortList)) {\r\n                                    // revers the sorting direction\r\n                                    // for all tables.\r\n                                    for (var j = 0; j < config.sortList.length; j++) {\r\n                                        var s = config.sortList[j],\r\n                                            o = config.headerList[s[0]];\r\n                                        if (s[0] == i) {\r\n                                            o.count = s[1];\r\n                                            o.count++;\r\n                                            s[1] = o.count % 2;\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    // add column to sort list array\r\n                                    config.sortList.push([i, this.order]);\r\n                                }\r\n                            };\r\n                            setTimeout(function () {\r\n                                // set css for headers\r\n                                setHeadersCss($this[0], $headers, config.sortList, sortCSS);\r\n                                appendToTable(\r\n\t                                $this[0], multisort(\r\n\t                                $this[0], config.sortList, cache)\r\n\t\t\t\t\t\t\t\t);\r\n                            }, 1);\r\n                            // stop normal event by returning false\r\n                            return false;\r\n                        }\r\n                        // cancel selection\r\n                    }).mousedown(function () {\r\n                        if (config.cancelSelection) {\r\n                            this.onselectstart = function () {\r\n                                return false\r\n                            };\r\n                            return false;\r\n                        }\r\n                    });\r\n                    // apply easy methods that trigger binded events\r\n                    $this.bind(\"update\", function () {\r\n                        var me = this;\r\n                        setTimeout(function () {\r\n                            // rebuild parsers.\r\n                            me.config.parsers = buildParserCache(\r\n                            me, $headers);\r\n                            // rebuild the cache map\r\n                            cache = buildCache(me);\r\n                        }, 1);\r\n                    }).bind(\"updateCell\", function (e, cell) {\r\n                        var config = this.config;\r\n                        // get position from the dom.\r\n                        var pos = [(cell.parentNode.rowIndex - 1), cell.cellIndex];\r\n                        // update cache\r\n                        cache.normalized[pos[0]][pos[1]] = config.parsers[pos[1]].format(\r\n                        getElementText(config, cell), cell);\r\n                    }).bind(\"sorton\", function (e, list) {\r\n                        $(this).trigger(\"sortStart\");\r\n                        config.sortList = list;\r\n                        // update and store the sortlist\r\n                        var sortList = config.sortList;\r\n                        // update header count index\r\n                        updateHeaderSortCount(this, sortList);\r\n                        // set css for headers\r\n                        setHeadersCss(this, $headers, sortList, sortCSS);\r\n                        // sort the table and append it to the dom\r\n                        appendToTable(this, multisort(this, sortList, cache));\r\n                    }).bind(\"appendCache\", function () {\r\n                        appendToTable(this, cache);\r\n                    }).bind(\"applyWidgetId\", function (e, id) {\r\n                        getWidgetById(id).format(this);\r\n                    }).bind(\"applyWidgets\", function () {\r\n                        // apply widgets\r\n                        applyWidget(this);\r\n                    });\r\n                    if ($.metadata && ($(this).metadata() && $(this).metadata().sortlist)) {\r\n                        config.sortList = $(this).metadata().sortlist;\r\n                    }\r\n                    // if user has supplied a sort list to constructor.\r\n                    if (config.sortList.length > 0) {\r\n                        $this.trigger(\"sorton\", [config.sortList]);\r\n                    }\r\n                    // apply widgets\r\n                    applyWidget(this);\r\n                });\r\n            };\r\n            this.addParser = function (parser) {\r\n                var l = parsers.length,\r\n                    a = true;\r\n                for (var i = 0; i < l; i++) {\r\n                    if (parsers[i].id.toLowerCase() == parser.id.toLowerCase()) {\r\n                        a = false;\r\n                    }\r\n                }\r\n                if (a) {\r\n                    parsers.push(parser);\r\n                };\r\n            };\r\n            this.addWidget = function (widget) {\r\n                widgets.push(widget);\r\n            };\r\n            this.formatFloat = function (s) {\r\n                var i = parseFloat(s);\r\n                return (isNaN(i)) ? 0 : i;\r\n            };\r\n            this.formatInt = function (s) {\r\n                var i = parseInt(s);\r\n                return (isNaN(i)) ? 0 : i;\r\n            };\r\n            this.isDigit = function (s, config) {\r\n                // replace all an wanted chars and match.\r\n                return /^[-+]?\\d*$/.test($.trim(s.replace(/[,.']/g, '')));\r\n            };\r\n            this.clearTableBody = function (table) {\r\n                if ($.browser.msie) {\r\n                    function empty() {\r\n                        while (this.firstChild)\r\n                        this.removeChild(this.firstChild);\r\n                    }\r\n                    empty.apply(table.tBodies[0]);\r\n                } else {\r\n                    table.tBodies[0].innerHTML = \"\";\r\n                }\r\n            };\r\n        }\r\n    });\r\n\r\n    // extend plugin scope\r\n    $.fn.extend({\r\n        tablesorter: $.tablesorter.construct\r\n    });\r\n\r\n    // make shortcut\r\n    var ts = $.tablesorter;\r\n\r\n    // add default parsers\r\n    ts.addParser({\r\n        id: \"text\",\r\n        is: function (s) {\r\n            return true;\r\n        }, format: function (s) {\r\n            return $.trim(s.toLocaleLowerCase());\r\n        }, type: \"text\"\r\n    });\r\n\r\n    ts.addParser({\r\n        id: \"digit\",\r\n        is: function (s, table) {\r\n            var c = table.config;\r\n            return $.tablesorter.isDigit(s, c);\r\n        }, format: function (s) {\r\n            return $.tablesorter.formatFloat(s);\r\n        }, type: \"numeric\"\r\n    });\r\n\r\n    ts.addParser({\r\n        id: \"currency\",\r\n        is: function (s) {\r\n            return /^[£$€?.]/.test(s);\r\n        }, format: function (s) {\r\n            return $.tablesorter.formatFloat(s.replace(new RegExp(/[£$€]/g), \"\"));\r\n        }, type: \"numeric\"\r\n    });\r\n\r\n    ts.addParser({\r\n        id: \"ipAddress\",\r\n        is: function (s) {\r\n            return /^\\d{2,3}[\\.]\\d{2,3}[\\.]\\d{2,3}[\\.]\\d{2,3}$/.test(s);\r\n        }, format: function (s) {\r\n            var a = s.split(\".\"),\r\n                r = \"\",\r\n                l = a.length;\r\n            for (var i = 0; i < l; i++) {\r\n                var item = a[i];\r\n                if (item.length == 2) {\r\n                    r += \"0\" + item;\r\n                } else {\r\n                    r += item;\r\n                }\r\n            }\r\n            return $.tablesorter.formatFloat(r);\r\n        }, type: \"numeric\"\r\n    });\r\n\r\n    ts.addParser({\r\n        id: \"url\",\r\n        is: function (s) {\r\n            return /^(https?|ftp|file):\\/\\/$/.test(s);\r\n        }, format: function (s) {\r\n            return jQuery.trim(s.replace(new RegExp(/(https?|ftp|file):\\/\\//), ''));\r\n        }, type: \"text\"\r\n    });\r\n\r\n    ts.addParser({\r\n        id: \"isoDate\",\r\n        is: function (s) {\r\n            return /^\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}$/.test(s);\r\n        }, format: function (s) {\r\n            return $.tablesorter.formatFloat((s != \"\") ? new Date(s.replace(\r\n            new RegExp(/-/g), \"/\")).getTime() : \"0\");\r\n        }, type: \"numeric\"\r\n    });\r\n\r\n    ts.addParser({\r\n        id: \"percent\",\r\n        is: function (s) {\r\n            return /\\%$/.test($.trim(s));\r\n        }, format: function (s) {\r\n            return $.tablesorter.formatFloat(s.replace(new RegExp(/%/g), \"\"));\r\n        }, type: \"numeric\"\r\n    });\r\n\r\n    ts.addParser({\r\n        id: \"usLongDate\",\r\n        is: function (s) {\r\n            return s.match(new RegExp(/^[A-Za-z]{3,10}\\.? [0-9]{1,2}, ([0-9]{4}|'?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\\s(AM|PM)))$/));\r\n        }, format: function (s) {\r\n            return $.tablesorter.formatFloat(new Date(s).getTime());\r\n        }, type: \"numeric\"\r\n    });\r\n\r\n    ts.addParser({\r\n        id: \"shortDate\",\r\n        is: function (s) {\r\n            return /\\d{1,2}[\\/\\-]\\d{1,2}[\\/\\-]\\d{2,4}/.test(s);\r\n        }, format: function (s, table) {\r\n            var c = table.config;\r\n            s = s.replace(/\\-/g, \"/\");\r\n            if (c.dateFormat == \"us\") {\r\n                // reformat the string in ISO format\r\n                s = s.replace(/(\\d{1,2})[\\/\\-](\\d{1,2})[\\/\\-](\\d{4})/, \"$3/$1/$2\");\r\n            } else if (c.dateFormat == \"uk\") {\r\n                // reformat the string in ISO format\r\n                s = s.replace(/(\\d{1,2})[\\/\\-](\\d{1,2})[\\/\\-](\\d{4})/, \"$3/$2/$1\");\r\n            } else if (c.dateFormat == \"dd/mm/yy\" || c.dateFormat == \"dd-mm-yy\") {\r\n                s = s.replace(/(\\d{1,2})[\\/\\-](\\d{1,2})[\\/\\-](\\d{2})/, \"$1/$2/$3\");\r\n            }\r\n            return $.tablesorter.formatFloat(new Date(s).getTime());\r\n        }, type: \"numeric\"\r\n    });\r\n    ts.addParser({\r\n        id: \"time\",\r\n        is: function (s) {\r\n            return /^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\\s(am|pm)))$/.test(s);\r\n        }, format: function (s) {\r\n            return $.tablesorter.formatFloat(new Date(\"2000/01/01 \" + s).getTime());\r\n        }, type: \"numeric\"\r\n    });\r\n    ts.addParser({\r\n        id: \"metadata\",\r\n        is: function (s) {\r\n            return false;\r\n        }, format: function (s, table, cell) {\r\n            var c = table.config,\r\n                p = (!c.parserMetadataName) ? 'sortValue' : c.parserMetadataName;\r\n            return $(cell).metadata()[p];\r\n        }, type: \"numeric\"\r\n    });\r\n    // add default widgets\r\n    ts.addWidget({\r\n        id: \"zebra\",\r\n        format: function (table) {\r\n            if (table.config.debug) {\r\n                var time = new Date();\r\n            }\r\n            var $tr, row = -1,\r\n                odd;\r\n            // loop through the visible rows\r\n            $(\"tr:visible\", table.tBodies[0]).each(function (i) {\r\n                $tr = $(this);\r\n                // style children rows the same way the parent\r\n                // row was styled\r\n                if (!$tr.hasClass(table.config.cssChildRow)) row++;\r\n                odd = (row % 2 == 0);\r\n                $tr.removeClass(\r\n                table.config.widgetZebra.css[odd ? 0 : 1]).addClass(\r\n                table.config.widgetZebra.css[odd ? 1 : 0])\r\n            });\r\n            if (table.config.debug) {\r\n                $.tablesorter.benchmark(\"Applying Zebra widget\", time);\r\n            }\r\n        }\r\n    });\r\n})(jQuery);"]}