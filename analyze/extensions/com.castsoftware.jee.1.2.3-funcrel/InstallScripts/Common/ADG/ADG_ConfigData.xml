<?xml version='1.0' encoding='utf-8'?>
<DATA model='Central Model' version='1.0.0.20' scope='JEEScope' export='OK'><!-- File generated with CAST Metrics Compiler - 8.3.6 -->
  <DSS_METRIC_TYPES>
    <METRIC_ID>4592</METRIC_ID>
    <METRIC_NAME>Avoid hiding static Methods</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>557</SCOPE_ID>
    <PROPERTY_ID>140910</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>4593</METRIC_ID>
    <METRIC_NAME>Avoid hiding static Methods</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>4594</METRIC_ID>
    <METRIC_NAME>Avoid using 'java.io.File'</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>4595</METRIC_ID>
    <METRIC_NAME>Avoid using 'java.io.File'</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>4602</METRIC_ID>
    <METRIC_NAME>Avoid using fields (non Static final) from other Classes</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>4603</METRIC_ID>
    <METRIC_NAME>Avoid using fields (non Static final) from other Classes</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>4700</METRIC_ID>
    <METRIC_NAME>Avoid using 'Throwable.printStackTrace()' within a try catch block</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>0</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>558</SCOPE_ID>
    <PROPERTY_ID>140899</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>4701</METRIC_ID>
    <METRIC_NAME>Avoid using 'Throwable.printStackTrace()' within a try catch block</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>4702</METRIC_ID>
    <METRIC_NAME>Avoid using 'Throwable.printStackTrace()' with no argument</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>558</SCOPE_ID>
    <PROPERTY_ID>140899</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>4703</METRIC_ID>
    <METRIC_NAME>Avoid using 'Throwable.printStackTrace()' with no argument</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7144</METRIC_ID>
    <METRIC_NAME>Struts Action Artifacts should not directly use database objects</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7145</METRIC_ID>
    <METRIC_NAME>Struts Action Artifacts should not directly use database objects</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7146</METRIC_ID>
    <METRIC_NAME>JSP pages should only reference Java Objects associated to J2EE Scoped Bean</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7147</METRIC_ID>
    <METRIC_NAME>JSP pages should only reference Java Objects associated to J2EE Scoped Bean</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7150</METRIC_ID>
    <METRIC_NAME>Favor PreparedStatement or CallableStatement over Statement</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7151</METRIC_ID>
    <METRIC_NAME>Favor PreparedStatement or CallableStatement over Statement</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7210</METRIC_ID>
    <METRIC_NAME>Avoid instantiations inside loops</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7211</METRIC_ID>
    <METRIC_NAME>Avoid instantiations inside loops</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7442</METRIC_ID>
    <METRIC_NAME>Avoid to use this within constructor in multi-thread environment</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>545</SCOPE_ID>
    <PROPERTY_ID>5008</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7443</METRIC_ID>
    <METRIC_NAME>Avoid to use this within constructor in multi-thread environment</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7446</METRIC_ID>
    <METRIC_NAME>Avoid double checked locking</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>557</SCOPE_ID>
    <PROPERTY_ID>140861</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7447</METRIC_ID>
    <METRIC_NAME>Avoid double checked locking</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7706</METRIC_ID>
    <METRIC_NAME>Avoid table and column names that are too long (portability)</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>1022001</SCOPE_ID>
    <PROPERTY_ID>140927</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7707</METRIC_ID>
    <METRIC_NAME>Avoid table and column names that are too long (portability)</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7714</METRIC_ID>
    <METRIC_NAME>Do not use auto-wiring</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>529</SCOPE_ID>
    <PROPERTY_ID>140919</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7715</METRIC_ID>
    <METRIC_NAME>Do not use auto-wiring</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7730</METRIC_ID>
    <METRIC_NAME>Use declarative transaction</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>531</SCOPE_ID>
    <PROPERTY_ID>140920</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>7731</METRIC_ID>
    <METRIC_NAME>Use declarative transaction</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>8104</METRIC_ID>
    <METRIC_NAME>Close database resources ASAP</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>525</SCOPE_ID>
    <PROPERTY_ID>140384</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>8105</METRIC_ID>
    <METRIC_NAME>Close database resources ASAP</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>8214</METRIC_ID>
    <METRIC_NAME>Expired or Released Resource should not be used</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>551</SCOPE_ID>
    <PROPERTY_ID>140739</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>8215</METRIC_ID>
    <METRIC_NAME>Expired or Released Resource should not be used</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>8216</METRIC_ID>
    <METRIC_NAME>CWE-681: Avoid numerical data corruption during incompatible mutation</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>552</SCOPE_ID>
    <PROPERTY_ID>140746</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>8217</METRIC_ID>
    <METRIC_NAME>CWE-681: Avoid numerical data corruption during incompatible mutation</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>1022000</METRIC_ID>
    <METRIC_NAME>Avoid using weak encryption algorithm as DES and triple DES</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>1022000</SCOPE_ID>
    <PROPERTY_ID>140815</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>1022001</METRIC_ID>
    <METRIC_NAME>Avoid using weak encryption algorithm as DES and triple DES</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>1022002</METRIC_ID>
    <METRIC_NAME>Avoid using RSA Cryptographic algorithms without OAEP (Optimal Asymmetric Encryption Padding) </METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>1022000</SCOPE_ID>
    <PROPERTY_ID>140816</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>1022003</METRIC_ID>
    <METRIC_NAME>Avoid using RSA Cryptographic algorithms without OAEP (Optimal Asymmetric Encryption Padding) </METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>4592</METRIC_PARENT_ID>
    <METRIC_ID>4593</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>4594</METRIC_PARENT_ID>
    <METRIC_ID>4595</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DIAG_SCOPE_JAVABEST023</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>4602</METRIC_PARENT_ID>
    <METRIC_ID>4603</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DIAG_SCOPE_JAVABEST027</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>4700</METRIC_PARENT_ID>
    <METRIC_ID>4701</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>4702</METRIC_PARENT_ID>
    <METRIC_ID>4703</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>7144</METRIC_PARENT_ID>
    <METRIC_ID>7145</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DIAG_SCOPE_JSPBEST012</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>7146</METRIC_PARENT_ID>
    <METRIC_ID>7147</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DIAG_SCOPE_JSPBEST013</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>7150</METRIC_PARENT_ID>
    <METRIC_ID>7151</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DIAG_SCOPE_JAVAPERF017</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>7210</METRIC_PARENT_ID>
    <METRIC_ID>7211</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DIAG_SCOPE_JAVAEMEM005</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>7442</METRIC_PARENT_ID>
    <METRIC_ID>7443</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>7446</METRIC_PARENT_ID>
    <METRIC_ID>7447</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>7706</METRIC_PARENT_ID>
    <METRIC_ID>7707</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>7714</METRIC_PARENT_ID>
    <METRIC_ID>7715</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>7730</METRIC_PARENT_ID>
    <METRIC_ID>7731</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>8104</METRIC_PARENT_ID>
    <METRIC_ID>8105</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>8214</METRIC_PARENT_ID>
    <METRIC_ID>8215</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>8216</METRIC_PARENT_ID>
    <METRIC_ID>8217</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61001</METRIC_PARENT_ID>
    <METRIC_ID>7144</METRIC_ID>
    <METRIC_INDEX>3</METRIC_INDEX>
    <AGGREGATE_WEIGHT>7</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61001</METRIC_PARENT_ID>
    <METRIC_ID>7146</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>3</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61003</METRIC_PARENT_ID>
    <METRIC_ID>4592</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>7</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61004</METRIC_PARENT_ID>
    <METRIC_ID>4594</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61004</METRIC_PARENT_ID>
    <METRIC_ID>7706</METRIC_ID>
    <METRIC_INDEX>3</METRIC_INDEX>
    <AGGREGATE_WEIGHT>5</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61014</METRIC_PARENT_ID>
    <METRIC_ID>4702</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>6</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61018</METRIC_PARENT_ID>
    <METRIC_ID>8104</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>8</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61018</METRIC_PARENT_ID>
    <METRIC_ID>8214</METRIC_ID>
    <METRIC_INDEX>3</METRIC_INDEX>
    <AGGREGATE_WEIGHT>8</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61020</METRIC_PARENT_ID>
    <METRIC_ID>4602</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>9</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66009</METRIC_PARENT_ID>
    <METRIC_ID>7714</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>7</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66062</METRIC_PARENT_ID>
    <METRIC_ID>7150</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>9</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66064</METRIC_PARENT_ID>
    <METRIC_ID>1022000</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>9</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66064</METRIC_PARENT_ID>
    <METRIC_ID>1022002</METRIC_ID>
    <METRIC_INDEX>3</METRIC_INDEX>
    <AGGREGATE_WEIGHT>9</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66065</METRIC_PARENT_ID>
    <METRIC_ID>7442</METRIC_ID>
    <METRIC_INDEX>3</METRIC_INDEX>
    <AGGREGATE_WEIGHT>8</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66065</METRIC_PARENT_ID>
    <METRIC_ID>7446</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>9</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66066</METRIC_PARENT_ID>
    <METRIC_ID>4602</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>4</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66068</METRIC_PARENT_ID>
    <METRIC_ID>7210</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>8</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66069</METRIC_PARENT_ID>
    <METRIC_ID>7730</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>7</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66069</METRIC_PARENT_ID>
    <METRIC_ID>8216</METRIC_ID>
    <METRIC_INDEX>3</METRIC_INDEX>
    <AGGREGATE_WEIGHT>9</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>1</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>1022000</METRIC_PARENT_ID>
    <METRIC_ID>1022001</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>1022002</METRIC_PARENT_ID>
    <METRIC_ID>1022003</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4592</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4592</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid hiding static Methods</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4592</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4593</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4594</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4594</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid using 'java.io.File'</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4594</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DIA_JEE_JVALL_TOTAL</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4595</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>6</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4602</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4602</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid using fields (non Static final) from other Classes</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>11</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4602</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DIAG_JAVA_NA_ARTIFACT_TOTAL</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4603</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>3</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4700</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4700</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid using 'Throwable.printStackTrace()' within a try catch block</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4700</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4701</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4702</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4702</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid using 'Throwable.printStackTrace()' with no argument</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4702</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>4703</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7144</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7144</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Struts Action Artifacts should not directly use database objects</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>11</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7144</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DIT_STRUTS_ACTIONS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7145</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>3</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7146</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7146</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>JSP pages should only reference Java Objects associated to J2EE Scoped Bean</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>11</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7146</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DIAG_JSP_STRUTS_FILE_TOTAL</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7147</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>3</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7150</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7150</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Favor PreparedStatement or CallableStatement over Statement</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>11</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7150</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DIAG_JAVA_ANA_STATEMENT_TOTAL</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7151</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>3</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7210</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7210</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid instantiations inside loops</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7210</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DIAG_JAVA_NA_ARTIFACT_TOTAL</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7211</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>6</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7442</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7442</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid to use this within constructor in multi-thread environment</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>11</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7442</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7443</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7446</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7446</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid double checked locking</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7446</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7447</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7706</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7706</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid table and column names that are too long (portability)</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7706</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7707</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7714</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7714</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Do not use auto-wiring</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7714</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7715</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7730</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7730</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Use declarative transaction</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7730</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>7731</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8104</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8104</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Close database resources ASAP</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8104</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8105</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8214</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8214</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Expired or Released Resource should not be used</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8214</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8215</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8216</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8216</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>CWE-681: Avoid numerical data corruption during incompatible mutation</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8216</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>8217</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>1022000</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>1022000</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid using weak encryption algorithm as DES and triple DES</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>1022000</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>1022001</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>1022002</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>1022002</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid using RSA Cryptographic algorithms without OAEP (Optimal Asymmetric Encryption Padding) </METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>1022002</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>1022003</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>4592</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>4594</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>4602</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>4700</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>4702</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>7144</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>7146</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>7150</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>7210</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>7442</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>7446</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>7706</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>7714</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>7730</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>8104</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>8214</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>8216</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>1022000</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>1022002</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>140029</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>4592</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>98.0</THRESHOLD_1>
    <THRESHOLD_2>99.0</THRESHOLD_2>
    <THRESHOLD_3>99.5</THRESHOLD_3>
    <THRESHOLD_4>99.99</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>4594</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>4602</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>98.0</THRESHOLD_1>
    <THRESHOLD_2>99.0</THRESHOLD_2>
    <THRESHOLD_3>99.5</THRESHOLD_3>
    <THRESHOLD_4>99.99</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>4700</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>4702</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>7144</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>98.0</THRESHOLD_1>
    <THRESHOLD_2>99.0</THRESHOLD_2>
    <THRESHOLD_3>99.5</THRESHOLD_3>
    <THRESHOLD_4>99.99</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>7146</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>7150</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>7210</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>98.0</THRESHOLD_1>
    <THRESHOLD_2>99.0</THRESHOLD_2>
    <THRESHOLD_3>99.5</THRESHOLD_3>
    <THRESHOLD_4>99.99</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>7442</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>98.0</THRESHOLD_1>
    <THRESHOLD_2>99.0</THRESHOLD_2>
    <THRESHOLD_3>99.5</THRESHOLD_3>
    <THRESHOLD_4>99.99</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>7446</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>98.0</THRESHOLD_1>
    <THRESHOLD_2>99.0</THRESHOLD_2>
    <THRESHOLD_3>99.5</THRESHOLD_3>
    <THRESHOLD_4>99.99</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>7706</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>7714</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>7730</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>8104</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>90.0</THRESHOLD_1>
    <THRESHOLD_2>95.0</THRESHOLD_2>
    <THRESHOLD_3>99.0</THRESHOLD_3>
    <THRESHOLD_4>100.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>8214</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>90.0</THRESHOLD_1>
    <THRESHOLD_2>95.0</THRESHOLD_2>
    <THRESHOLD_3>99.0</THRESHOLD_3>
    <THRESHOLD_4>100.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>8216</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>1022000</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>1022002</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4592</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid hiding static Methods</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4592</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Hiding is all about polymorphism. This means that the OO designer expects to override methods and use polymorphism so that code calling methods through a base class will end up executing different methods depending on the instance being used. This is not the case with static methods. When static methods are called, there is no polymorphism in play. It is always the static method of the type used to reference the object used that is called. Hiding static methods is a misuse of OO practices that results in misunderstanding of what is going to be executed at runtime and thus leads to unexpected behavior, jeopardizing the stability of the application.

Except for class derives from “javax.swing.plaf.ComponentUI”
See documentation:
https://docs.oracle.com/javase/7/docs/api/javax/swing/plaf/ComponentUI.html#createUI(javax.swing.JComponent)

public static ComponentUI (https://docs.oracle.com/javase/7/docs/api/javax/swing/plaf/ComponentUI.html) createUI(JComponent (https://docs.oracle.com/javase/7/docs/api/javax/swing/JComponent.html) c)

Returns an instance of the UI delegate for the specified component. Each subclass must provide its own static createUI method that returns an instance of that UI delegate subclass. If the UI delegate subclass is stateless, it may return an instance that is shared by multiple components. If the UI delegate is stateful, then it should return a new instance per component. The default implementation of this method throws an error, as it should never be invoked.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4592</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Hiding Static Methods is not allowed. 
This Quality Rule retrieves all static methods that are redefined in subclasses i.e. "implicitly hidden". 
A Static Method MyMethod of Class MySuperClass is "implicitly hidden" in Subclass MySubClass if MySubClass contains a similar declaration of MyMethod (i.e. same signature).

Except "createUI" for class derives from  “javax.swing.plaf.ComponentUI;”</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4592</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Review the design of the Method.
Simply not override the static (class) methods.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4592</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>https://coderanch.com/wiki/659959/Overriding-Hiding
https://coderanch.com/t/380069/java/overriding-static-method</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4592</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>class Foo {
    public static void classMethod() {
        System.out.println("classMethod() in Foo");
    }
 
    public void instanceMethod() {
        System.out.println("instanceMethod() in Foo");
    }
}
 
class Bar extends Foo {
    public static void classMethod() {
        System.out.println("classMethod() in Bar");
    }
 
    public void instanceMethod() {
        System.out.println("instanceMethod() in Bar");
    }
}
  
class Test {
    public static void main(String[] args) {
        Foo f = new Bar();
        f.instanceMethod();
        f.classMethod();
    }
}

// If you run this, the output is
// instanceMethod() in Bar
// classMethod() in Foo</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4592</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>class Foo {
    public static void classMethod() {
        System.out.println("classMethod() in Foo");
    }
 
    public void instanceMethod() {
        System.out.println("instanceMethod() in Foo");
    }
}
 
class Bar extends Foo {
    //Simply not override the static (class) methods: classMethod.
 
    public void instanceMethod() {
        System.out.println("instanceMethod() in Bar");
    }
}
  
class Test {
    public static void main(String[] args) {
        Foo f = new Bar();
        f.instanceMethod();
        
        //Rather than writing:
        //f.classMethod();
        
        //It would be better coding style to write either:
        Foo.classMethod();
    }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4592</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4592</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of methods.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4592</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4594</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid using 'java.io.File'</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4594</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>For portability reasons, in Web applications or Application Server, 'java.io.File' should not be used since it means giving an absolute path and therefore being dependent on the environment where the application is deployed.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4594</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Java artifacts should not use 'java.io.File' for application deployed on a Web Server or an Application Server (when web.xml or ejb-jar.xml file are present)</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4594</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Prefer using RessourceBundle.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4594</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This report lists all java artifacts using 'java.io.File'.
It provides the following information:
 Artifact full name</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4594</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Java objects</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4602</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid using Fields (non static final) from other Classes</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4602</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>On of the fundamental concept of this rule is encapsulation:
Hiding the internals of the object protects its integrity by preventing users from setting the internal data of the component into an invalid or inconsistent state. A benefit of encapsulation is that it can reduce system complexity, and thus increases robustness, by allowing the developer to limit the interdependencies between software components.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4602</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>To respect OO encapsulation concepts, Fields should not be accessed from outside the Class without going through their accessors.
Protected fields are also considered by this rule comptation.Using protected fields is allowed by the Java language but not a good practive as it introduce a hard coupling between implementation and interfaces (abstract class here).
As per the book "Effective Java" by Joshua Bloch : "The need for protected members should be relatively rare.". Fields of an INNER class are considered as internal fields of the outer class and Fields of a Child class (By inheritance) are considered as internal fields of the outer</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4602</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This report lists all Methods directly using Fields from other Classes.
It provides the following information:
 - Method full name
 - Field full name</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4602</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of non abstract Java artifacts</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4602</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Field full name</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4700</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>DELETED: Avoid using 'Throwable.printStackTrace()' within a try catch block</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4700</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Using 'Throwable.printStackTrace()' in a catch block usually means that it is used to log the stack of errors, which has the risk of filling up the stdout or the log file.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4700</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Catch blocks should not use 'Throwable.printStackTrace()' to log the stack of errors.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4700</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This report lists all Methods using 'Throwable.printStackTrace()' in catch blocks.It provides the following information: Method full name</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4700</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of non-abstract Java artifacts</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4702</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid using 'Throwable.printStackTrace()' with no argument</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4702</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Using 'Throwable.printStackTrace()' usually means that it is used to log the stack of errors, which has the risk of filling up the stdout or the log file.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4702</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Throwable.printStackTrace(...) prints a Throwable and its stack trace to some stream. If no argument is used, the default stream System.Err will be used, which could inadvertently expose sensitive information.


This rule will report a violation when printStackTrace is used without arguments : when the stack trace is printed to the default stream.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4702</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Loggers should be used instead to print Throwables, as they have many advantages:

Users are able to easily retrieve the logs.
The format of log messages is uniform and allow users to browse the logs easily.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4702</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>http://cwe.mitre.org/data/definitions/489.html
OWASP Top 10 2017 Category A3 - Sensitive Data Exposure</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4702</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public static void main(String[] args){
    try {
        test();
    } catch (UnsupportedOperationException e) {
        System.out.println(e);
        e.printStackTrace();
    }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4702</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4702</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of non-abstract Java artifacts.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>4702</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7144</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Struts Action Artifacts should not directly use database objects</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7144</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Action artifacts should not directly use database objects. All the database access code should be encapsulated behind the business API classes, so Struts doesn't know what persistent layer you are using. This lets you use the same business API classes in other environments, and also to run unit tests against your business API outside of Struts or a HTTP environment.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7144</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>For all action class (and parent classes) that are referenced in the struts-config.xml through the tag 'action-mapping' (in struts 1.x) or in struts.xml and its included files through the tag 'action' (in struts 2.x), list artifacts that reference database access</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7144</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Use a Business Delegate to perform any business specific operations.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7144</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>http://javaboutique.internet.com/tutorials/strictly_struts/index.html</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7144</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This report lists all Action artifacts having accesses to the database.
It provides the following information:
 - Action artifact full name
 - database object used</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7144</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>The total number of artifacts of classes and parent classes that are referenced as an action in the XML configuration file.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7144</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Database object used</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7146</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>JSP pages should only reference Java Objects associated to J2EE Scoped Bean</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7146</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>In a Struts implementation, JSP pages are responsible for the presentation and must not call specific Java objects other than those associated to scoped attributes.

The consequences of combining HTML and Java code in the same JSP file are:
- no separation of technology: Java skilled people and Web designers/HTML coders must work on the same file.
- less reusable: the Java component can't be reused elsewhere in the application
- maintenance difficulties because of the lack of modularization</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7146</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>In the contex of Struts implementation, the JSP pages must reference ONLY Java objects that belong to the bean scope or Java objects of a class belonging itself to the same scope

The scope is an attribute of the bean indicating the context of objects usage.
In struts-config, the scope refers to where to create/find ActionForm objects.


All JSP pages that refers to Java methods, field of a class or the class itself that is not associated to a scoped attribute will be reported as violation.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7146</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Use taglib or change the architecture of the application so that the JSP page only rely on classes associated to scoped attributes.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7146</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>http://www.javaworld.com/javaworld/jw-11-2001/jw-1130-jsp.html

https://javapapers.com/jsp/explain-the-scope-of-jsp-objects/</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7146</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This report lists all JSP pages referencing Java objects that are not associated to J2EE Scoped Bean.
It provides the following information:
 - Page name
 - Java object name</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7146</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of JSP pages when any object of type "Struts Configuration File" is present</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7146</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Java object name</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7150</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Favor PreparedStatement or CallableStatement over Statement</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7150</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>There are two benefits to use PreparedStatement or CallableStatement over Statement:
- Performance: PreparedStatement gives better performance when compared to Statement because it is pre-parsed. CallableStatement is even more efficient but as it uses a stored procedure in the database, it is less portable,
- Security: to prevent SQL Injection Attacks.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7150</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>All references to the method java.sql.Connection.createStatement() must be avoided.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7150</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>use java.sql.Connection.prepareStatement() or java.sql.Connection.prepareCall() instead.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7150</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>http://www.theserverside.com/tt/articles/article.tss?l=JavaOne2006Day4
http://www.precisejava.com/javaperf/j2ee/JDBC.htm</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7150</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>String query = "SELECT * FROM users WHERE userid ='"+ userid + "'" + " AND password='" + password + "'";
Statement stmt = connection.createStatement();
ResultSet rs = stmt.executeQuery(query);</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7150</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>PreparedStatement stmt = connection.prepareStatement("SELECT * FROM users WHERE userid=? AND password=?");
stmt.setString(1, userid);
stmt.setString(2, password);
ResultSet rs = stmt.executeQuery();</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7150</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This report lists all methods that reference java.sql.Connection.Statement interface instances (or its sub-interface or sub-class).
It provides the following information: 
 - Method Full Name
 - The Full Name of createStatement method that has been called</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7150</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of methods that call java.sql.Connection.createStatement() or java.sql.Connection.prepareStatement() or java.sql.Connection.prepareCall()</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7150</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Full Name of createStatement method called</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7210</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid instantiations inside loops</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7210</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>One of the fundamental OO performance management principles is this: Avoid excessive object creation. This doesn't mean that you should give up the benefits of object-oriented programming by not creating any objects, but you should be wary of object creation inside of tight loops when executing performance-critical code. Object creation is expensive enough that you should avoid unnecessarily creating temporary or intermediate objects in situations where performance is an issue.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7210</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Reports all artifacts with loops (for, while, do while)  that contain object instantiations (object creation)..
Java artifacts include all methods and constructors with the following exclusions:
- the cases where the instantiation appear at the end of a return or throw statement are excluded. 
- the case where the instantiated object is one of the arguments of a call to one of the following methods :
   . java.util.Collection.add
   . java.util.Map.put
   . java.lang.StringBuilder.append
   . java.lang.StringBuilder.insert
   . java.lang.StringBuilder.replace
   . java.lang.StringBuffer.append
   . java.lang.StringBuffer.insert
   . java.lang.StringBuffer.replace
   . java.util.stream.Stream.map
   . and any method with the same name in their respective derived classes (e.g. java.util.ArrayList. add(int index, E element)), as ArrayList implements java.util.Collection and has the same name as the authorized method add).</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7210</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Redesign the loop.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7210</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public class MyLoop {
     public void printCount() {
         for (int i = 0; i &lt; 100; i++) {
             StringBuffer sb = new StringBuffer(); // VIOLATION
             sb.append("count = ");
             sb.append(i);
             System.out.println(sb);
         }
     }
 }</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7210</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public class MyLoop {
     public void printCount() {
         StringBuffer sb = new StringBuffer(); // FIXED
         for (int i = 0; i &lt; 100; i++) {
             sb.setLength(0);
             sb.append("count = ");
             sb.append(i);
             System.out.println(sb);
         }
     }
 }</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7210</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This report lists all methods that create objects in a loop.
It provides the following information:
 Method full name</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7210</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of non abstract Java Artifacts</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7442</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid to use this within Constructor in multi-thread environment</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7442</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>When making a reference to 'this' within a constructor - either directly or indirectly through inner classes - visible to another thread, the result can be unpredictable.
Moreover, testing and debugging multi-threaded programs is very difficult, because of concurrency hazard that makes difficult to reproduce the issue.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7442</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This metric will detect all cases where this is - directly or not - referenced in a constructor.
Indirect reference to this means the definition of an inner class in the constructor. It includes also the case where the constructor call the method start of a thread within a constructor (i.e. a method that inherits from java.lang.Thread.start())</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7442</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>In the cases where the reference to 'this' is visible to other thread a redesign of the class must be made to avoid it.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7442</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>https://www.ibm.com/developerworks/java/library/j-jtp0618/index.html
http://java.sun.com/docs/books/tutorial/essential/concurrency/syncmeth.html</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7442</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public class Unsafe {
  public static Unsafe anInstance;
  public static Set set = new HashSet();
  private Set mySet = new HashSet();
  private Thread thread;

  public Unsafe() {
    // Unsafe because anInstance is globally visible
    anInstance = this;

    // Unsafe because SomeOtherClass.anInstance is globally visible
    SomeOtherClass.anInstance = this;

    // Unsafe because SomeOtherClass might save the "this" reference
    // where another thread could see it
    SomeOtherClass.registerObject(this);

    // Unsafe because set is globally visible 
    set.add(this);

    // Unsafe because we are publishing a reference to mySet
    mySet.add(this);
    SomeOtherClass.someMethod(mySet);

    // Unsafe because the "this" object will be visible from the new
    // thread before the constructor completes
    // in any case, start() must not be called within the constructor
    thread = new MyThread(this);
    thread.start();
  }

  public Unsafe(Collection c) {
    // Unsafe because "c" may be visible from other threads
    c.add(this);
  }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7442</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public class Safe { 

  private Object me;
  private Set set = new HashSet();
  private Thread thread;

  public Safe() { 
    // Safe because "me" is not visible from any other thread
    me = this;

    // Safe because "set" is not visible from any other thread
    set.add(this);

    // Safe because MyThread won't start until construction is complete
    // and the constructor doesn't publish the reference
    thread = new MyThread(this);
  }

  public void start() {
    thread.start();
  }

  private class MyThread(Object o) {
    private Object theObject;

    public MyThread(Object o) { 
      this.theObject = o;
    }

    ...
  }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7442</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This report lists all constructors that involve this directly or indirectly.
It provides the following information:
  - Method full name
  - the number of occurrences of this detected in the constructor</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7442</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of constructors</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7442</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of occurrences of this</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7446</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid double checked locking</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7446</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Double checked locking is a software design pattern used to reduce locking overhead when implementing lazy initialization in a multi-thread environment. This avoid to initializing a value until the first time it is accessed.
This pattern is unsafe because there is no guarantee it will work on single or multi-processor machines.
Note also that even if this issue as been fixed in JSE 5.0 it doesn't provide performance optimization.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7446</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>For JSE 4.x and previous version, all methods that are not synchronized and that check a value of one of its field before using synchronized and then check this field again and then assign a value to this field will be reported.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7446</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>To remediate, there are two solutions depending on performance choice:
1/ synchronize the method: each call to this method will cost but the initialization will be made when needed
2/ make the field static  (Initialize-On-Demand Holder Class idiom): the field will be initialized during the initialization of the class even if not required, but each call to the method that return this field will not cost.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7446</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>https://cwe.mitre.org/data/definitions/609.html
http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html
http://www.artima.com/designtechniques/threadsafety.html
http://www-128.ibm.com/developerworks/java/library/j-dcl.html
http://www-128.ibm.com/developerworks/java/library/j-jtp03304/</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7446</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>class Foo { 
  private Helper helper = null;
  public Helper getHelper() {
    if (helper == null) {
      synchronized(this) {
        if (helper == null) {
          helper = new Helper();
        }    
      }    
    }    
    return helper;
  }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7446</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>1/ synchronized the method getHelper()
 class Foo { 
   private Helper helper = null;
   public synchronized Helper getHelper() {
     if (helper == null) 
         helper = new Helper();
     return helper;
   }
2/ declare the field as static
 class Foo { 
   private static Helper helper = new Helper();
   public Helper getHelper() {
     return helper;
   }</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7446</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7446</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of methods that are synchronized or use the synchronized keyword</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7446</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7706</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid table and column names that are too long (portability)</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7706</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>If you specify table name too long you won't be able to create it on some database. This will prevent you to use these table name unless you use a Naming Strategy to reduce the length of the table name.

To ease portability, choose table name with a length accepted by the majority of database you want to support.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7706</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Reports all entities or column defined through annotation or XML that define a table or column name length greater than 30. 
The table and column name length are parameters that can be changed at will.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7706</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Change the table name size or use a Naming Strategy to reduce the table name length.

Some facts from http://www.mssqlcity.com/Articles/Compare

                                table name length     column name length
SQL Server 2000   128                            128
ASE 12.5                  30                              30
MYSQL 4.1               64                              64
DB2 8.1                  128                            128
Oracle 9i                  30                              30</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7706</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>&lt;class name="cast.core.InputFieldValueResource" table="cast_core_input_field_value_resource"&gt;
   ...
&lt;/class&gt;</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7706</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>&lt;class name="cast.core.InputFieldValueResource" table="input_field_value_resource"&gt;
   ...
&lt;/class&gt;</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7706</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This report lists all entities or property defined through annotation or XML that define a table or column name length greater than 30.
It provides the following information:
Persistent Entity name or Persistent Property name</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7706</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of persistent entities and properties</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7714</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Do not use auto-wiring</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7714</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Auto-wiring can save you time in small applications, but in many cases, it leads to bad practices and is inflexible in large applications. Using byName seems like a good idea, but it may lead you to give your classes artificial property names so that you can take advantage of the auto-wiring functionality. The whole idea behind Spring is that you can create your classes how you like and have Spring work for you, not the other way around. You may be tempted to use byType until you realize
that you can only have one bean for each type in your BeanFactory -- a restriction that is problematic when you need to maintain beans with different configurations of the same type.

Also it will affect the performance of your application since auto-wiring is slow.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7714</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Reports all Spring Bean that use autowire attribute.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7714</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Define your wiring explicitly, and you benefit from explicit semantics and full flexibility on property naming and on how many instances of
the same type you manage.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7714</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>https://blog.marcnuri.com/field-injection-is-not-recommended/
https://howtodoinjava.com/best-practices/13-best-practices-for-writing-spring-configuration-files/
https://www.vojtechruzicka.com/field-dependency-injection-considered-harmful/
http://code.google.com/p/google-guice/wiki/SpringComparison
https://www.baeldung.com/spring-annotations-resource-inject-autowire
https://stackoverflow.com/questions/7142622/what-is-the-difference-between-inject-and-autowired-in-spring-framework-which</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7714</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>&lt;beans&gt;
   &lt;bean id="myBean" autowire="byName" class="com.cast.MyBean"/&gt; // VIOLATION
...
&lt;/beans&gt;



import org.springframework.stereotype.Component;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Component
public class ModuleManagementManager {
  private static final Logger LOGGER = LoggerFactory.getLogger(ModuleManagementManager.class);
}

import org.springframework.stereotype.Service;

import javax.enterprise.inject.Instance;
import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Provider;
import javax.inject.Qualifier;
import javax.inject.Scope;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Service
public class ModuleManagementService {

  private static final Logger LOGGER = LoggerFactory.getLogger(ModuleManagementService.class);
  
  // JSR-330 injection
  @Inject
  ModuleManagementManager moduleManagementManager = new ModuleManagementManager(); // VIOLATION
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7714</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>&lt;beans&gt;
   &lt;bean id="myBean" class="com.cast.MyBean"/&gt; // FIXED
...
&lt;/beans&gt;

@Service
public class ModuleManagementService {

    
  private ModuleManagementManager moduleManagementManager;
 
  //  Prefer setter injection over constructor injection
  @Inject  // OR @Autowired
  public void setInjectedBean() {
      moduleManagementManager = new ModuleManagementManager();   // NO VIOLATION
  }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7714</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7714</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Java classes</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7714</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7730</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Use declarative transaction</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7730</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>One of the primary advantages of an Application Server is the support of declarative transactions. Without this feature, transactions must be controlled using explicit transaction demarcation. Explicit demarcation is difficult for developers to use at best, particularly if you are new to transactional systems. In addition, explicit transaction demarcation requires that the transactional code be written within the business logic, which reduces the clarity of the code and more importantly creates inflexible distributed objects. Once transaction demarcation is "hardcoded" into the business object, changes in transaction behaviour require changes to the business logic itself.

Declarative transactions make it easier for you to create robust transactional applications. The risk to not use them is data corruption.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7730</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>The Bean Provider can choose between using programmatic transaction demarcation in the enterprise bean code (this style is called bean-managed transaction demarcation)  or  declarative transaction demarcation performed automatically by the EJB container (this style is called container-managed transaction demarcation).

Without theses features, transactions must be controlled using explicit transaction demarcation which is less recommanded as it requires that the transactional code be written within the business logic, which reduces the clarity of the code and more importantly creates inflexible distributed objects


This rule reports violation when an explicit transaction demarcation is done in project using EJB BEANS and / or Message Driven Beans

This Quality Rule reports all methods that directly (or indirectly through inheritance) reference an object of the following type:
* java.sql.Connection
* javax.transaction.UserTransaction
* javax.persistence.EntityTransaction
* org.hibernate.Transaction
* org.springframework.transaction.PlatformTransactionManager
* org.springframework.transaction.support.TransactionTemplate</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7730</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Using transaction attributes simplifies the construction of transactional applications by reducing the risks associated with improper use of transactional protocols like JTA. It is more efficient and easier to use transaction attributes than to control transactions explicitly. This can be done through EJB or Spring.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7730</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>http://docstore.mik.ua/orelly/java-ent/ebeans/ch08_02.htm</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7730</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>programmatic transaction demarcation:
sample 1:
@Stateless
@TransactionManagement(TransactionManagementType.BEAN)
public class UserServiceImpl {
   UserDAO userDAO;

   public void update(User user) throws Exception {
      InitialContext context = new InitialContext();
      //reference of javax.transaction.UserTransaction
       UserTransaction transaction = (UserTransaction)context.lookup("UserTransaction");
      try {
         //explicit transaction demarcation
         transaction.begin();// starting the transaction : violation
     .......
         transaction.commit(); // committing: violation
      } catch (Exception up) {
         transaction.rollback();
         throw up;
      }
   }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7730</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>use container-managed transaction demarcation (@Transactional Annotation or Configure Transactions with XML)
@Stateless
public class UserServiceImpl {
   UserDAO UserDAO;
   @Resource SessionContext context;

   @TransactionAttribute(TransactionAttributeType.REQUIRED)
   public void update(User user) throws Exception {
      try {
     userDAO.update(user);
      } catch (Exception up) {
         context.setRollbackOnly();
         throw up;
      }
   }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7730</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This Quality Rule reports all methods that reference programmatic transactions. It provides the following information: Method or Constructor Full Name</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>7730</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Java Methods and Constructors (including generic methods and generic constructors) if ejb-jar.xml, Spring XML or JPA XML files exists</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8104</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Close database resources ASAP</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8104</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>A frequent issue when dealing with database resource is resource leak. This mainly comes from an incorrect code that miss to close the connection in any cases. Incorrect resource management is a common source of failures in production applications, with the usual pitfalls being database connections and file descriptors remaining opened after an exception has occurred somewhere else in the code. This leads to application servers being frequently restarted when resource exhaustion occurs, because operating systems and server applications generally have an upper-bound limit for resources.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8104</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>The following methods are taken into account:
- JDBC:
   . open: java.sql.DriverManager.getConnection(String)
   . close: java.sql.Connection.close()
- JDBC:
   . open: java.sql.Connection.createStatement()
   . close: java.sql.Statement.close()
- JDBC:
   . open: java.sql.Connection.prepareStatement(...)
   . close: java.sql.PreparedStatement.close()
- JDBC:
   . open: java.sql.Connection.prepareCall(...)
   . close: java.sql.CallableStatement.close()
- JDBC:
   . open: java.sql.PreparedStatement.executeQuery()
   . close: java.sql.ResultSet.close()
- JPA:
    . open: javax.persistence.Persistence.createEntityManagerFactory(String)
    . close: javax.persistence.EntityManagerFactory.close()
- JPA:
   . open:  javax.persistence.EntityManagerFactory.createEntityManager()
   . close:  javax.persistence.EntityManager.close()
- Hibernate:
   . open: org.hibernate.SessionFactory.openSession()
   . close: org.hibernate.Session.close()
- Hibernate:
  . open: org.hibernate.cfg.Configuration.buildSessionFactory()
  . close: org.hibernate.SessionFactory.close()
- Spring:
  . open: org.springframework.orm.hibernate3.SessionFactoryUtils.getSession(...)
  . close: org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(...)</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8104</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>You can:
- close the resource in a finally block (only explicit closing is considered valid)
- or annotate this resource with @Cleanup annotation (lombok.Cleanup)
- or use the try with resource to declare the resource that must be closed (available in java 7)
- or use Spring JDBC Template that open and close the connection for you (http://static.springsource.org/spring/docs/3.2.x/spring-framework-reference/html/jdbc.html)
- or use CDI with @Dispose annotation</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8104</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>http://www.java7developer.com/blog/?p=24
http://static.springsource.org/spring/docs/3.2.x/spring-framework-reference/html/jdbc.html
http://projectlombok.org/features/Cleanup.html</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8104</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>String connectionURL = 'jdbc:mysql://localhost:3306/myDB';
Connection connection = null;
Statement st = null;
ResultSet rs = null;
try {
    Class.forName('com.mysql.jdbc.Driver').newInstance();
    connection = DriverManager.getConnection(connectionURL, 'root', 'admin');
    st = connection.createStatement();
    rs = st.executeQuery('Select * from EMPLOYEE_SALARIES');
    while (rs.next()) {
        System.out.println('EMPLOYEE_NAME/EMPLOYEE_SALARY');
        System.out.println(rs.getString(1) + '/' + rs.getString(2));
    } 
    rs.close(); 
    st.close();
    connection.close();
} catch (Exception ex) {
    ex.printStackTrace();
}  // VIOLATION, rs, st and connection must be closed in a finally</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8104</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>with finally
~~~~~~~~~~~~
String connectionURL = 'jdbc:mysql://localhost:3306/myDB';
Connection connection = null;
Statement st = null;
ResultSet rs = null;
try {
    Class.forName('com.mysql.jdbc.Driver').newInstance();
    connection = DriverManager.getConnection(connectionURL, 'root', 'admin');
    st = connection.createStatement();
    rs = st.executeQuery('Select * from EMPLOYEE_SALARIES');
    while (rs.next()) {
        System.out.println('EMPLOYEE_NAME/EMPLOYEE_SALARY');
        System.out.println(rs.getString(1) + '/' + rs.getString(2));
    }
} catch (Exception ex) {
    ex.printStackTrace();
} finally { // FIX
    try {
        if (rs != null &amp;&amp; !rs.isClosed()) {
            rs.close();
        }
        if (st != null &amp;&amp; !st.isClosed()) {
            st.close();
        }
        if (connection != null &amp;&amp; !connection.isClosed()) {
            connection.close();
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}

with Java 7
~~~~~~~~~~~~~~
String connectionURL = 'jdbc:mysql://localhost:3306/myDB';
try ( // FIX
    Connection connection =
        DriverManager.getConnection(connectionURL, 'root', 'admin');
    Statement st = connection.createStatement();
    ResultSet rs = st.executeQuery('Select * from EMPLOYEE_SALARIES');
) {
    Class.forName('com.mysql.jdbc.Driver').newInstance();
    while (rs.next())
    {
        System.out.println('EMPLOYEE_NAME/EMPLOYEE_SALARY');
        System.out.println(rs.getString(1) + '/' + rs.getString(2));
    }
}

with annotation @Cleanup
~~~~~~~~~~~~~~~~~~~~~~~~
String connectionURL = 'jdbc:mysql://localhost:3306/myDB';
@Cleanup Connection connection = null; // FIX
@Cleanup Statement st = null; // FIX
@Cleanup ResultSet rs = null; // FIX

Class.forName('com.mysql.jdbc.Driver').newInstance();
connection = DriverManager.getConnection(connectionURL, 'root', 'admin');
st = connection.createStatement();
rs = st.executeQuery('Select * from EMPLOYEE_SALARIES');
while (rs.next()) {
    System.out.println('EMPLOYEE_NAME/EMPLOYEE_SALARY');
    System.out.println(rs.getString(1) + '/' + rs.getString(2));
}

with CDI annotation
~~~~~~~~~~~~~~~~~~~~
@Produces @RequestScoped
Connection connect(User) {
   return createConnection(user.getId(), user.getPassword())
}

void close (@Disposes Connection connection) {
   connection.close();
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8104</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8104</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of methods that open a database resource in the body</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8104</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8214</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Expired or Released Resource should not be used</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8214</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>When a resource is released it might not be in an expected state, later attempts to access the resource may lead to resultant errors that may lead to a crash.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8214</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>If a released resource is subsequently reused or reallocated, then an attempt to use the original resource might allow access to sensitive data that is associated with a different user or entity.
  This rule reports all methods accessing the closed SQL connections or data streams which are not valid. The following methods are taken into account:
  
- JDBC:
   . close: java.sql.Connection.close()
   . close: java.sql.Statement.close()
   . close: java.sql.PreparedStatement.close()
   . close: java.sql.CallableStatement.close()
   . close: java.sql.ResultSet.close()
- JPA:
   . close: javax.persistence.EntityManagerFactory.close()
   . close:  javax.persistence.EntityManager.close()
- Hibernate:
    . close: org.hibernate.Session.close()
  . close: org.hibernate.SessionFactory.close()
- Spring:
    . close: org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(...)
    . close: org.springframework.orm.hibernate4.SessionFactoryUtils.closeSession(...)
    . close: org.springframework.orm.hibernate5.SessionFactoryUtils.closeSession(...)
  
-The following objects are taken into account:
- output streams
- input streams
- readers
- writers
- channel</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8214</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>You can use:
- isClosed() methods before accessing the Connection object .
- close() method should be called before closing the application.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8214</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>https://cwe.mitre.org/data/definitions/672.html
ASCSM-CWE-672: Expired or Released Resource Usage</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8214</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>String connectionUrl="jdbc:mysql://localhost:3306/MyDb";
    String userName="root";
    String userPass="root";
    DBConnectionInvalid connectionExample=new DBConnectionInvalid();
    try{
      connection=connectionExample.getConnection(connectionUrl, userName, userPass);
    }catch(Exception e){
      System.out.println(e.toString());
    }finally{
      System.out.println("Closing a connection");
      connection.close();

      connection.prepareStatement("select * from ....");
    }</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8214</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>with finally
~~~~~~~~~~~~
if(!connection.isClosed())
  connection.prepareStatement("select * from ....");
or
finally{
      System.out.println("Closing a connection");
      connection.close();
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8214</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8214</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>All the methods that have invalid access to the database resource in the body</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8214</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8216</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid numerical data corruption during incompatible mutation</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8216</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>The program could wind up using the wrong number and generate incorrect results. If the number is used to allocate resources or make a security decision, then this could introduce a vulnerability.
 - A widening conversion of an int or a long value to float, or of a long value to double, may result in loss of precision - that is, the result may lose some of the least significant bits of the value. In this case, the resulting floating-point value will be a correctly rounded version of the integer value, using IEEE 754 round-to-nearest mode</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8216</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Reports all incorrect numeric type conversions which may produce unexpected results:
- int i = (int) 33457.8f; 
- int i1 = 1 + 2+ (int)3.5
- if(integerValue == (int)floatValue)
A violation is raised if converting from one data type to another, such as long to integer in the data which can be translated in a way that produces unexpected values.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8216</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>You can use Widening Primitive Conversion to avoid loss of precision.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8216</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>https://cwe.mitre.org/data/definitions/681.html
http://www.informit.com/articles/article.aspx?p=174371</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8216</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>int i = (int) 33457.8f;
short i1 = (short)ic.readdata(); // VIOLATION if readdata returns long
int i1 = 1 + 2+ (int)3.5 // VIOLATION</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8216</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>A widening primitive conversion does not lose information about the overall magnitude of a numeric value.
  byte to short, int, long, float, or double
    short to int, long, float, or double
    char to int, long, float, or double
    int to long, float, or double
    long to float or double
    float to double
-Despite the fact that loss of precision may occur, a widening primitive conversion never results in a run-time exception</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8216</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8216</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Java artifacts that can reference an incompatible mutation which includes methods, lambdas and constructors</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>8216</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid using weak encryption algorithm as DES and triple DES</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>The Data Encryption Standard is a symmetric-key algorithm for the encryption of electronic data.
DES is now considered to be insecure for many applications. This is mainly due to the 56-bit key size being too small. In January 1999, distributed.net and the Electronic Frontier Foundation collaborated to publicly break a DES key in 22 hours and 15 minutes (see chronology).
Some analytical results demonstrate theoretical weaknesses in the cipher, Attack have been also demonstrated in practice. Even in the form of Triple DES, the believed to be insecure 
DES has been withdrawn as a standard by the National Institute of Standards and Technology. (NIST) 
</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>DES and 3DES are vulnerable to attack mainly because of time complexity and used techniques. 
   This rule is reporting violation when weak encryption algorithm like DES or Triple DES is used in the code source.
   
   This rule is compliant with 
CWE-326 - Inadequate Encryption Strength 
CWE-327 - Use of a Broken or Risky Cryptographic Algorithm 
OWASP Top 10 2013 : A6 Sensitive Data Exposure 
OWASP Top 10 2017 : A3 Sensitive Data Exposure
   </METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Federal agencies are encouraged to use the Advanced Encryption Standard, a faster and stronger algorithm approved as FIPS 197 in 2001. </METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION> https://cwe.mitre.org/data/definitions/780.html
https://cwe.mitre.org/data/definitions/327.html
https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure
</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>// Create a DES key object specification from the raw data
DESKeySpec dks = new DESKeySpec(Hex.fromString(keyString));
// Create a key factory and use it to turn the DESKeySpec into
// a SecretKey object
SecretKeyFactory keyFactory = SecretKeyFactory.getInstance("DES");
SecretKey key = keyFactory.generateSecret( dks );
Cipher cipher = Cipher.getInstance("DES/ECB/NoPadding");
// Initialize the cipher with the key
cipher.init( Cipher.ENCRYPT_MODE, key, sr );
byte[] data = Hex.fromString(plainData); 
</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION> 
Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
        cipher.init(Cipher.ENCRYPT_MODE, secretKeySpec, ivParameterSpec);
        byte[] encrypted = cipher.doFinal(clean); 
</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This rule reports the full name of the java method using weak encryption like DES or Triple DES algorithm.  
  </METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Java methods</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated Value</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid using RSA Cryptographic algorithms without OAEP (Optimal Asymmetric Encryption Padding)</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Optimal Asymmetric Encryption Padding schemes are often used with cryptographic algorithms to make the plaintext less predictable and complicate attack efforts. The OAEP scheme is often used with RSA to nullify the impact of predictable common text  
</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>The aim of this rule is to report violation when RSA encryption algorithm is used without Padding. This can be identified when literal value starting with RSA/NONE is found in source code

This rule is compliant with :

CWE-780 - Use of RSA Algorithm without OAEP
CWE-327: Use of a Broken or Risky Cryptographic Algorithm
OWASP: A3:2017-Sensitive Data Exposure

   </METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Federal agencies are encouraged to use the Advanced Encryption Standard, a faster and stronger algorithm approved as FIPS 197 in 2001. </METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>https://cwe.mitre.org/data/definitions/780.html
https://cwe.mitre.org/data/definitions/327.html
https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure
https://rdist.root.org/2009/10/06/why-rsa-encryption-padding-is-critical/</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public class TestRSA {

    public static void main(String[] args) throws Exception {

 byte[] input = new byte[100];

 Cipher cipher = Cipher.getInstance("RSA/None/NoPadding", "BC");
 KeyFactory keyFactory = KeyFactory.getInstance("RSA", "BC"); 
</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION> 
 Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding", "BC"); 
</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Java methods</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>1022002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
</DATA>