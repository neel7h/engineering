<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<BlackBox name="rt.jar" xmlns="http://tempuri.org/BlackBoxes.xsd">
    <Class mangling="java.lang.Object" visibility="public">
        <Methods>
            <Method signature="getClass()" returnType="java.lang.Class" isFinal="true" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.lang.CloneNotSupportedException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="notify()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="notifyAll()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="wait(long)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="wait(long,int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="wait()" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.lang.Throwable"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Class" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Methods>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="forName(java.lang.String)" isStatic="true" returnType="java.lang.Class" visibility="public">
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="newInstance()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.InstantiationException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="isInstance(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isAssignableFrom(java.lang.Class)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isInterface()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isArray()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isPrimitive()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getClassLoader()" returnType="java.lang.ClassLoader" visibility="public"/>
            <Method signature="getSuperclass()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getInterfaces()" returnType="[ext]java.lang.Class[]" visibility="public"/>
            <Method signature="getComponentType()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getModifiers()" returnType="[ext]int" visibility="public"/>
            <Method signature="getSigners()" returnType="[ext]java.lang.Object[]" visibility="public"/>
            <Method signature="setSigners(java.lang.Object[])" returnType="[ext]void"/>
            <Method signature="getDeclaringClass()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getClasses()" returnType="[ext]java.lang.Class[]" visibility="public"/>
            <Method signature="getFields()" returnType="[ext]java.lang.reflect.Field[]" visibility="public">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getMethods()" returnType="[ext]java.lang.reflect.Method[]" visibility="public">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getConstructors()" returnType="[ext]java.lang.reflect.Constructor[]" visibility="public">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getField(java.lang.String)" returnType="java.lang.reflect.Field" visibility="public">
                <Throw mangling="java.lang.NoSuchFieldException"/>
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getMethod(java.lang.String,java.lang.Class[])" returnType="java.lang.reflect.Method" visibility="public">
                <Throw mangling="java.lang.NoSuchMethodException"/>
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getConstructor(java.lang.Class[])" returnType="java.lang.reflect.Constructor" visibility="public">
                <Throw mangling="java.lang.NoSuchMethodException"/>
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getDeclaredClasses()" returnType="[ext]java.lang.Class[]" visibility="public">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getDeclaredFields()" returnType="[ext]java.lang.reflect.Field[]" visibility="public">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getDeclaredMethods()" returnType="[ext]java.lang.reflect.Method[]" visibility="public">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getDeclaredConstructors()" returnType="[ext]java.lang.reflect.Constructor[]" visibility="public">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getDeclaredField(java.lang.String)" returnType="java.lang.reflect.Field" visibility="public">
                <Throw mangling="java.lang.NoSuchFieldException"/>
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getDeclaredMethod(java.lang.String,java.lang.Class[])" returnType="java.lang.reflect.Method" visibility="public">
                <Throw mangling="java.lang.NoSuchMethodException"/>
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getDeclaredConstructor(java.lang.Class[])" returnType="java.lang.reflect.Constructor" visibility="public">
                <Throw mangling="java.lang.NoSuchMethodException"/>
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="getResourceAsStream(java.lang.String)" returnType="java.io.InputStream" visibility="public"/>
            <Method signature="getResource(java.lang.String)" returnType="java.net.URL" visibility="public"/>
            <Method signature="getPrimitiveClass(java.lang.String)" isStatic="true" returnType="java.lang.Class"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Thread" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields>
            <Field name="MIN_PRIORITY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NORM_PRIORITY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MAX_PRIORITY" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="currentThread()" isStatic="true" returnType="java.lang.Thread" visibility="public"/>
            <Method signature="yield()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="sleep(long)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="sleep(long,int)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.Runnable)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.ThreadGroup,java.lang.Runnable)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.ThreadGroup,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.Runnable,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="start()" returnType="[ext]void" visibility="public"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="stop()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="stop(java.lang.Throwable)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="interrupt()" returnType="[ext]void" visibility="public"/>
            <Method signature="interrupted()" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isInterrupted()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="destroy()" returnType="[ext]void" visibility="public"/>
            <Method signature="isAlive()" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="suspend()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="resume()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="setPriority(int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getPriority()" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="setName(java.lang.String)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="getThreadGroup()" returnType="java.lang.ThreadGroup" isFinal="true" visibility="public"/>
            <Method signature="activeCount()" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="enumerate(java.lang.Thread[])" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="countStackFrames()" returnType="[ext]int" visibility="public"/>
            <Method signature="join(long)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="join(long,int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="join()" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="dumpStack()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="setDaemon(boolean)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="isDaemon()" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="checkAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.CloneNotSupportedException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.InterruptedException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Throwable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMessage()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getLocalizedMessage()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="printStackTrace()" returnType="[ext]void" visibility="public"/>
            <Method signature="printStackTrace(java.io.PrintStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="printStackTrace(java.io.PrintWriter)" returnType="[ext]void" visibility="public"/>
            <Method signature="fillInStackTrace()" returnType="java.lang.Throwable" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.lang.reflect.Member" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="PUBLIC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DECLARED" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="getDeclaringClass()" returnType="java.lang.Class" isAbstract="true" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="getModifiers()" returnType="[ext]int" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.lang.reflect.Field" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.reflect.Member"/>
        <Fields/>
        <Methods>
            <Method signature="getDeclaringClass()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getModifiers()" returnType="[ext]int" visibility="public"/>
            <Method signature="getType()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="get(java.lang.Object)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="getBoolean(java.lang.Object)" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="getByte(java.lang.Object)" returnType="[ext]byte" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="getChar(java.lang.Object)" returnType="[ext]char" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="getShort(java.lang.Object)" returnType="[ext]short" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="getInt(java.lang.Object)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="getLong(java.lang.Object)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="getFloat(java.lang.Object)" returnType="[ext]float" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="getDouble(java.lang.Object)" returnType="[ext]double" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="set(java.lang.Object,java.lang.Object)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="setBoolean(java.lang.Object,boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="setByte(java.lang.Object,byte)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="setChar(java.lang.Object,char)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="setShort(java.lang.Object,short)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="setInt(java.lang.Object,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="setLong(java.lang.Object,long)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="setFloat(java.lang.Object,float)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="setDouble(java.lang.Object,double)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
            </Method>
            <Method signature="getTypeName(java.lang.Class)" isStatic="true" returnType="java.lang.String"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.reflect.Method" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.reflect.Member"/>
        <Fields/>
        <Methods>
            <Method signature="getDeclaringClass()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getModifiers()" returnType="[ext]int" visibility="public"/>
            <Method signature="getReturnType()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getParameterTypes()" returnType="[ext]java.lang.Class[]" visibility="public"/>
            <Method signature="getExceptionTypes()" returnType="[ext]java.lang.Class[]" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="invoke(java.lang.Object,java.lang.Object[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalAccessException"/>
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.reflect.InvocationTargetException"/>
            </Method>
            <Method signature="copy(java.lang.Class[])" isStatic="true" returnType="[ext]java.lang.Class[]"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.reflect.InvocationTargetException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.lang.Throwable)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.Throwable,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getTargetException()" returnType="java.lang.Throwable" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.reflect.Constructor" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.reflect.Member"/>
        <Fields/>
        <Methods>
            <Method signature="getDeclaringClass()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getModifiers()" returnType="[ext]int" visibility="public"/>
            <Method signature="getParameterTypes()" returnType="[ext]java.lang.Class[]" visibility="public"/>
            <Method signature="getExceptionTypes()" returnType="[ext]java.lang.Class[]" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="newInstance(java.lang.Object[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.InstantiationException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.reflect.InvocationTargetException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.lang.reflect.Modifier" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="PUBLIC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PRIVATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PROTECTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="STATIC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FINAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SYNCHRONIZED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VOLATILE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TRANSIENT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NATIVE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="INTERFACE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ABSTRACT" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="isPublic(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isPrivate(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isProtected(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isStatic(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isFinal(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isSynchronized(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isVolatile(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isTransient(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isNative(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isInterface(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isAbstract(int)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString(int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.reflect.Array" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="newInstance(java.lang.Class,int)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NegativeArraySizeException"/>
            </Method>
            <Method signature="newInstance(java.lang.Class,int[])" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.NegativeArraySizeException"/>
            </Method>
            <Method signature="getLength(java.lang.Object)" isStatic="true" returnType="[ext]int" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="get(java.lang.Object,int)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="getBoolean(java.lang.Object,int)" isStatic="true" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="getByte(java.lang.Object,int)" isStatic="true" returnType="[ext]byte" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="getChar(java.lang.Object,int)" isStatic="true" returnType="[ext]char" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="getShort(java.lang.Object,int)" isStatic="true" returnType="[ext]short" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="getInt(java.lang.Object,int)" isStatic="true" returnType="[ext]int" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="getLong(java.lang.Object,int)" isStatic="true" returnType="[ext]long" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="getFloat(java.lang.Object,int)" isStatic="true" returnType="[ext]float" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="getDouble(java.lang.Object,int)" isStatic="true" returnType="[ext]double" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="set(java.lang.Object,int,java.lang.Object)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="setBoolean(java.lang.Object,int,boolean)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="setByte(java.lang.Object,int,byte)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="setChar(java.lang.Object,int,char)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="setShort(java.lang.Object,int,short)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="setInt(java.lang.Object,int,int)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="setLong(java.lang.Object,int,long)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="setFloat(java.lang.Object,int,float)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
            <Method signature="setDouble(java.lang.Object,int,double)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
                <Throw mangling="java.lang.ArrayIndexOutOfBoundsException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.lang.IllegalArgumentException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.IllegalAccessException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.InstantiationException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ClassNotFoundException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.SecurityException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.NoSuchFieldException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.NoSuchMethodException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.lang.Runnable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="run()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.lang.Cloneable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
    </Interface>
    <Class mangling="java.lang.Error" extends="java.lang.Throwable" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Throwable"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.RuntimeException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Exception" extends="java.lang.Throwable" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Throwable"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.String" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(char[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(char[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[],int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[],int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[],int,int,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.UnsupportedEncodingException"/>
            </Method>
            <Method signature="+ctor(byte[],java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.UnsupportedEncodingException"/>
            </Method>
            <Method signature="+ctor(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.StringBuffer)" returnType="[ext]void" visibility="public"/>
            <Method signature="length()" returnType="[ext]int" visibility="public"/>
            <Method signature="charAt(int)" returnType="[ext]char" visibility="public"/>
            <Method signature="getChars(int,int,char[],int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getBytes(int,int,byte[],int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getBytes(java.lang.String)" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.UnsupportedEncodingException"/>
            </Method>
            <Method signature="getBytes()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equalsIgnoreCase(java.lang.String)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="compareTo(java.lang.String)" returnType="[ext]int" visibility="public"/>
            <Method signature="regionMatches(int,java.lang.String,int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="regionMatches(boolean,int,java.lang.String,int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="startsWith(java.lang.String,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="startsWith(java.lang.String)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="endsWith(java.lang.String)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="indexOf(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="indexOf(int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="lastIndexOf(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="lastIndexOf(int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="indexOf(java.lang.String)" returnType="[ext]int" visibility="public"/>
            <Method signature="indexOf(java.lang.String,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="lastIndexOf(java.lang.String)" returnType="[ext]int" visibility="public"/>
            <Method signature="lastIndexOf(java.lang.String,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="substring(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="substring(int,int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="concat(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="replace(char,char)" returnType="java.lang.String" visibility="public"/>
            <Method signature="toLowerCase(java.util.Locale)" returnType="java.lang.String" visibility="public"/>
            <Method signature="toLowerCase()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toUpperCase(java.util.Locale)" returnType="java.lang.String" visibility="public"/>
            <Method signature="toUpperCase()" returnType="java.lang.String" visibility="public"/>
            <Method signature="trim()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toCharArray()" returnType="[ext]char[]" visibility="public"/>
            <Method signature="valueOf(java.lang.Object)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="valueOf(char[])" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="valueOf(char[],int,int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="copyValueOf(char[],int,int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="copyValueOf(char[])" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="valueOf(boolean)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="valueOf(char)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="valueOf(int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="valueOf(long)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="valueOf(float)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="valueOf(double)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="intern()" returnType="java.lang.String" visibility="public"/>
            <Method signature="utfLength()" returnType="[ext]int"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Number" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="intValue()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="longValue()" returnType="[ext]long" isAbstract="true" visibility="public"/>
            <Method signature="floatValue()" returnType="[ext]float" isAbstract="true" visibility="public"/>
            <Method signature="doubleValue()" returnType="[ext]double" isAbstract="true" visibility="public"/>
            <Method signature="byteValue()" returnType="[ext]byte" visibility="public"/>
            <Method signature="shortValue()" returnType="[ext]short" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.NumberFormatException" extends="java.lang.IllegalArgumentException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IllegalArgumentException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ArithmeticException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Integer" extends="java.lang.Number" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Number"/>
        <Fields>
            <Field name="MIN_VALUE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MAX_VALUE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TYPE" type="java.lang.Class" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="digits" type="char[]" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="toString(int,int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="toHexString(int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="toOctalString(int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="toBinaryString(int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString(int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="parseInt(java.lang.String,int)" isStatic="true" returnType="[ext]int" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="parseInt(java.lang.String)" isStatic="true" returnType="[ext]int" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="valueOf(java.lang.String,int)" isStatic="true" returnType="java.lang.Integer" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="valueOf(java.lang.String)" isStatic="true" returnType="java.lang.Integer" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="byteValue()" returnType="[ext]byte" visibility="public"/>
            <Method signature="shortValue()" returnType="[ext]short" visibility="public"/>
            <Method signature="intValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="longValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="floatValue()" returnType="[ext]float" visibility="public"/>
            <Method signature="doubleValue()" returnType="[ext]double" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getInteger(java.lang.String)" isStatic="true" returnType="java.lang.Integer" visibility="public"/>
            <Method signature="getInteger(java.lang.String,int)" isStatic="true" returnType="java.lang.Integer" visibility="public"/>
            <Method signature="getInteger(java.lang.String,java.lang.Integer)" isStatic="true" returnType="java.lang.Integer" visibility="public"/>
            <Method signature="decode(java.lang.String)" isStatic="true" returnType="java.lang.Integer" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.lang.StringBuffer" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="length()" returnType="[ext]int" visibility="public"/>
            <Method signature="capacity()" returnType="[ext]int" visibility="public"/>
            <Method signature="ensureCapacity(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setLength(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="charAt(int)" returnType="[ext]char" visibility="public"/>
            <Method signature="getChars(int,int,char[],int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setCharAt(int,char)" returnType="[ext]void" visibility="public"/>
            <Method signature="append(java.lang.Object)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="append(java.lang.String)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="append(char[])" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="append(char[],int,int)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="append(boolean)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="append(char)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="append(int)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="append(long)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="append(float)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="append(double)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="insert(int,java.lang.Object)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="insert(int,java.lang.String)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="insert(int,char[])" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="insert(int,boolean)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="insert(int,char)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="insert(int,int)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="insert(int,long)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="insert(int,float)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="insert(int,double)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="reverse()" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setShared()" returnType="[ext]void" isFinal="true"/>
            <Method signature="getValue()" returnType="[ext]char[]" isFinal="true"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ClassLoader" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="loadClass(java.lang.String)" returnType="java.lang.Class" visibility="public">
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="loadClass(java.lang.String,boolean)" returnType="java.lang.Class" isAbstract="true" visibility="protected">
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="defineClass(byte[],int,int)" returnType="java.lang.Class" isFinal="true" visibility="protected"/>
            <Method signature="defineClass(java.lang.String,byte[],int,int)" returnType="java.lang.Class" isFinal="true" visibility="protected"/>
            <Method signature="resolveClass(java.lang.Class)" returnType="[ext]void" isFinal="true" visibility="protected"/>
            <Method signature="findSystemClass(java.lang.String)" returnType="java.lang.Class" isFinal="true" visibility="protected">
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="setSigners(java.lang.Class,java.lang.Object[])" returnType="[ext]void" isFinal="true" visibility="protected"/>
            <Method signature="findLoadedClass(java.lang.String)" returnType="java.lang.Class" isFinal="true" visibility="protected"/>
            <Method signature="loadClassInternal(java.lang.String,boolean)" returnType="java.lang.Class" isFinal="true">
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="getSystemResourceAsStream(java.lang.String)" isStatic="true" returnType="java.io.InputStream" isFinal="true" visibility="public"/>
            <Method signature="getSystemResource(java.lang.String)" isStatic="true" returnType="java.net.URL" isFinal="true" visibility="public"/>
            <Method signature="getResourceAsStream(java.lang.String)" returnType="java.io.InputStream" visibility="public"/>
            <Method signature="getResource(java.lang.String)" returnType="java.net.URL" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.SecurityManager" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="inCheck" type="boolean" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="getInCheck()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="getClassContext()" returnType="[ext]java.lang.Class[]" visibility="protected"/>
            <Method signature="currentClassLoader()" returnType="java.lang.ClassLoader" visibility="protected"/>
            <Method signature="currentLoadedClass()" returnType="java.lang.Class" visibility="protected"/>
            <Method signature="classDepth(java.lang.String)" returnType="[ext]int" visibility="protected"/>
            <Method signature="classLoaderDepth()" returnType="[ext]int" visibility="protected"/>
            <Method signature="inClass(java.lang.String)" returnType="[ext]boolean" visibility="protected"/>
            <Method signature="inClassLoader()" returnType="[ext]boolean" visibility="protected"/>
            <Method signature="getSecurityContext()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkCreateClassLoader()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccess(java.lang.Thread)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccess(java.lang.ThreadGroup)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkExit(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkExec(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkLink(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkWrite(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkWrite(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkDelete(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkConnect(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkConnect(java.lang.String,int,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkListen(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccept(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMulticast(java.net.InetAddress)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMulticast(java.net.InetAddress,byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPropertiesAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPropertyAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkTopLevelWindow(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkPrintJobAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSystemClipboardAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAwtEventQueueAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPackageAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPackageDefinition(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSetFactory()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMemberAccess(java.lang.Class,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSecurityAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getThreadGroup()" returnType="java.lang.ThreadGroup" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.NullSecurityManager" extends="java.lang.SecurityManager" isGeneric="false">
        <Extends mangling="java.lang.SecurityManager"/>
        <Methods>
            <Method signature="checkCreateClassLoader()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccess(java.lang.Thread)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccess(java.lang.ThreadGroup)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkExit(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkExec(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkLink(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkWrite(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkWrite(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkDelete(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkConnect(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkConnect(java.lang.String,int,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkListen(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccept(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMulticast(java.net.InetAddress)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMulticast(java.net.InetAddress,byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPropertiesAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPropertyAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPropertyAccess(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkTopLevelWindow(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkPrintJobAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSystemClipboardAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAwtEventQueueAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPackageAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPackageDefinition(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSetFactory()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMemberAccess(java.lang.Class,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSecurityAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.System" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="in" type="java.io.InputStream" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="out" type="java.io.PrintStream" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="err" type="java.io.PrintStream" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="setIn(java.io.InputStream)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="setOut(java.io.PrintStream)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="setErr(java.io.PrintStream)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="setSecurityManager(java.lang.SecurityManager)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getSecurityManager()" isStatic="true" returnType="java.lang.SecurityManager" visibility="public"/>
            <Method signature="currentTimeMillis()" isStatic="true" returnType="[ext]long" visibility="public"/>
            <Method signature="arraycopy(java.lang.Object,int,java.lang.Object,int,int)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="identityHashCode(java.lang.Object)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="getProperties()" isStatic="true" returnType="java.util.Properties" visibility="public"/>
            <Method signature="setProperties(java.util.Properties)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getProperty(java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="getProperty(java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="getenv(java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="exit(int)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="gc()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="runFinalization()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="runFinalizersOnExit(boolean)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="load(java.lang.String)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="loadLibrary(java.lang.String)" isStatic="true" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.NullPointerException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ThreadGroup" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="parent" type="java.lang.ThreadGroup"/>
            <Field name="name" type="java.lang.String"/>
            <Field name="maxPriority" type="int"/>
            <Field name="destroyed" type="boolean"/>
            <Field name="daemon" type="boolean"/>
            <Field name="vmAllowSuspension" type="boolean"/>
            <Field name="nthreads" type="int"/>
            <Field name="threads" type="java.lang.Thread[]"/>
            <Field name="ngroups" type="int"/>
            <Field name="groups" type="java.lang.ThreadGroup[]"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.ThreadGroup,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="getParent()" returnType="java.lang.ThreadGroup" isFinal="true" visibility="public"/>
            <Method signature="getMaxPriority()" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="isDaemon()" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="isDestroyed()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setDaemon(boolean)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="setMaxPriority(int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="parentOf(java.lang.ThreadGroup)" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="checkAccess()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="activeCount()" returnType="[ext]int" visibility="public"/>
            <Method signature="enumerate(java.lang.Thread[])" returnType="[ext]int" visibility="public"/>
            <Method signature="enumerate(java.lang.Thread[],boolean)" returnType="[ext]int" visibility="public"/>
            <Method signature="activeGroupCount()" returnType="[ext]int" visibility="public"/>
            <Method signature="enumerate(java.lang.ThreadGroup[])" returnType="[ext]int" visibility="public"/>
            <Method signature="enumerate(java.lang.ThreadGroup[],boolean)" returnType="[ext]int" visibility="public"/>
            <Method signature="stop()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="suspend()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="resume()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="destroy()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="add(java.lang.Thread)" returnType="[ext]void"/>
            <Method signature="remove(java.lang.Thread)" returnType="[ext]void"/>
            <Method signature="list()" returnType="[ext]void" visibility="public"/>
            <Method signature="list(java.io.PrintStream,int)" returnType="[ext]void"/>
            <Method signature="uncaughtException(java.lang.Thread,java.lang.Throwable)" returnType="[ext]void" visibility="public"/>
            <Method signature="allowThreadSuspension(boolean)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ThreadDeath" extends="java.lang.Error" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Error"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.LinkageError" extends="java.lang.Error" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Error"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.NoSuchMethodError" extends="java.lang.IncompatibleClassChangeError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IncompatibleClassChangeError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.IncompatibleClassChangeError" extends="java.lang.LinkageError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.LinkageError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.IllegalThreadStateException" extends="java.lang.IllegalArgumentException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IllegalArgumentException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Runtime" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="getRuntime()" isStatic="true" returnType="java.lang.Runtime" visibility="public"/>
            <Method signature="exit(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="runFinalizersOnExit(boolean)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="exec(java.lang.String)" returnType="java.lang.Process" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="exec(java.lang.String,java.lang.String[])" returnType="java.lang.Process" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="exec(java.lang.String[])" returnType="java.lang.Process" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="exec(java.lang.String[],java.lang.String[])" returnType="java.lang.Process" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="freeMemory()" returnType="[ext]long" visibility="public"/>
            <Method signature="totalMemory()" returnType="[ext]long" visibility="public"/>
            <Method signature="gc()" returnType="[ext]void" visibility="public"/>
            <Method signature="runFinalization()" returnType="[ext]void" visibility="public"/>
            <Method signature="traceInstructions(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="traceMethodCalls(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="load(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="loadLibrary(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocalizedInputStream(java.io.InputStream)" returnType="java.io.InputStream" visibility="public"/>
            <Method signature="getLocalizedOutputStream(java.io.OutputStream)" returnType="java.io.OutputStream" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ArrayIndexOutOfBoundsException" extends="java.lang.IndexOutOfBoundsException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IndexOutOfBoundsException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.IndexOutOfBoundsException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.InternalError" extends="java.lang.VirtualMachineError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.VirtualMachineError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.VirtualMachineError" extends="java.lang.Error" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Error"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.StringIndexOutOfBoundsException" extends="java.lang.IndexOutOfBoundsException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IndexOutOfBoundsException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Math" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="E" type="double" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PI" type="double" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="sin(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="cos(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="tan(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="asin(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="acos(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="atan(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="exp(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="log(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="sqrt(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="IEEEremainder(double,double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="ceil(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="floor(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="rint(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="atan2(double,double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="pow(double,double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="round(float)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="round(double)" isStatic="true" returnType="[ext]long" visibility="public"/>
            <Method signature="random()" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="abs(int)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="abs(long)" isStatic="true" returnType="[ext]long" visibility="public"/>
            <Method signature="abs(float)" isStatic="true" returnType="[ext]float" visibility="public"/>
            <Method signature="abs(double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="max(int,int)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="max(long,long)" isStatic="true" returnType="[ext]long" visibility="public"/>
            <Method signature="max(float,float)" isStatic="true" returnType="[ext]float" visibility="public"/>
            <Method signature="max(double,double)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="min(int,int)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="min(long,long)" isStatic="true" returnType="[ext]long" visibility="public"/>
            <Method signature="min(float,float)" isStatic="true" returnType="[ext]float" visibility="public"/>
            <Method signature="min(double,double)" isStatic="true" returnType="[ext]double" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Character" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="MIN_RADIX" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MAX_RADIX" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MIN_VALUE" type="char" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MAX_VALUE" type="char" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TYPE" type="java.lang.Class" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UNASSIGNED" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UPPERCASE_LETTER" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOWERCASE_LETTER" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TITLECASE_LETTER" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MODIFIER_LETTER" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="OTHER_LETTER" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NON_SPACING_MARK" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENCLOSING_MARK" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="COMBINING_SPACING_MARK" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DECIMAL_DIGIT_NUMBER" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LETTER_NUMBER" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="OTHER_NUMBER" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SPACE_SEPARATOR" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LINE_SEPARATOR" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PARAGRAPH_SEPARATOR" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONTROL" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FORMAT" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PRIVATE_USE" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SURROGATE" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DASH_PUNCTUATION" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="START_PUNCTUATION" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="END_PUNCTUATION" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONNECTOR_PUNCTUATION" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="OTHER_PUNCTUATION" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MATH_SYMBOL" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CURRENCY_SYMBOL" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MODIFIER_SYMBOL" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="OTHER_SYMBOL" type="byte" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="charValue()" returnType="[ext]char" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="isLowerCase(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isUpperCase(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isTitleCase(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isDigit(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isDefined(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isLetter(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isLetterOrDigit(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isJavaLetter(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isJavaLetterOrDigit(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isJavaIdentifierStart(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isJavaIdentifierPart(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isUnicodeIdentifierStart(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isUnicodeIdentifierPart(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isIdentifierIgnorable(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toLowerCase(char)" isStatic="true" returnType="[ext]char" visibility="public"/>
            <Method signature="toUpperCase(char)" isStatic="true" returnType="[ext]char" visibility="public"/>
            <Method signature="toTitleCase(char)" isStatic="true" returnType="[ext]char" visibility="public"/>
            <Method signature="digit(char,int)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="getNumericValue(char)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="isSpace(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isSpaceChar(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isWhitespace(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isISOControl(char)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getType(char)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="forDigit(int,int)" isStatic="true" returnType="[ext]char" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Long" extends="java.lang.Number" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Number"/>
        <Fields>
            <Field name="MIN_VALUE" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MAX_VALUE" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TYPE" type="java.lang.Class" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="toString(long,int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="toHexString(long)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="toOctalString(long)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="toBinaryString(long)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString(long)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="parseLong(java.lang.String,int)" isStatic="true" returnType="[ext]long" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="parseLong(java.lang.String)" isStatic="true" returnType="[ext]long" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="valueOf(java.lang.String,int)" isStatic="true" returnType="java.lang.Long" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="valueOf(java.lang.String)" isStatic="true" returnType="java.lang.Long" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="+ctor(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="byteValue()" returnType="[ext]byte" visibility="public"/>
            <Method signature="shortValue()" returnType="[ext]short" visibility="public"/>
            <Method signature="intValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="longValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="floatValue()" returnType="[ext]float" visibility="public"/>
            <Method signature="doubleValue()" returnType="[ext]double" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getLong(java.lang.String)" isStatic="true" returnType="java.lang.Long" visibility="public"/>
            <Method signature="getLong(java.lang.String,long)" isStatic="true" returnType="java.lang.Long" visibility="public"/>
            <Method signature="getLong(java.lang.String,java.lang.Long)" isStatic="true" returnType="java.lang.Long" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Float" extends="java.lang.Number" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Number"/>
        <Fields>
            <Field name="POSITIVE_INFINITY" type="float" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NEGATIVE_INFINITY" type="float" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NaN" type="float" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MAX_VALUE" type="float" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MIN_VALUE" type="float" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TYPE" type="java.lang.Class" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="toString(float)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="valueOf(java.lang.String)" isStatic="true" returnType="java.lang.Float" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="isNaN(float)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isInfinite(float)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor(float)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(double)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="isNaN()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isInfinite()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="byteValue()" returnType="[ext]byte" visibility="public"/>
            <Method signature="shortValue()" returnType="[ext]short" visibility="public"/>
            <Method signature="intValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="longValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="floatValue()" returnType="[ext]float" visibility="public"/>
            <Method signature="doubleValue()" returnType="[ext]double" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="floatToIntBits(float)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="intBitsToFloat(int)" isStatic="true" returnType="[ext]float" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Double" extends="java.lang.Number" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Number"/>
        <Fields>
            <Field name="POSITIVE_INFINITY" type="double" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NEGATIVE_INFINITY" type="double" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NaN" type="double" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MAX_VALUE" type="double" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MIN_VALUE" type="double" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TYPE" type="java.lang.Class" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="toString(double)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="valueOf(java.lang.String)" isStatic="true" returnType="java.lang.Double" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="isNaN(double)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isInfinite(double)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor(double)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="isNaN()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isInfinite()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="byteValue()" returnType="[ext]byte" visibility="public"/>
            <Method signature="shortValue()" returnType="[ext]short" visibility="public"/>
            <Method signature="intValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="longValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="floatValue()" returnType="[ext]float" visibility="public"/>
            <Method signature="doubleValue()" returnType="[ext]double" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="doubleToLongBits(double)" isStatic="true" returnType="[ext]long" visibility="public"/>
            <Method signature="longBitsToDouble(long)" isStatic="true" returnType="[ext]double" visibility="public"/>
            <Method signature="valueOf0(java.lang.String)" isStatic="true" returnType="[ext]double">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.lang.NoClassDefFoundError" extends="java.lang.LinkageError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.LinkageError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Boolean" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="TRUE" type="java.lang.Boolean" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FALSE" type="java.lang.Boolean" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TYPE" type="java.lang.Class" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="booleanValue()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="valueOf(java.lang.String)" isStatic="true" returnType="java.lang.Boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getBoolean(java.lang.String)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Byte" extends="java.lang.Number" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Number"/>
        <Fields>
            <Field name="MIN_VALUE" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MAX_VALUE" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TYPE" type="java.lang.Class" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="toString(byte)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="parseByte(java.lang.String)" isStatic="true" returnType="[ext]byte" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="parseByte(java.lang.String,int)" isStatic="true" returnType="[ext]byte" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="valueOf(java.lang.String,int)" isStatic="true" returnType="java.lang.Byte" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="valueOf(java.lang.String)" isStatic="true" returnType="java.lang.Byte" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="decode(java.lang.String)" isStatic="true" returnType="java.lang.Byte" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="+ctor(byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="byteValue()" returnType="[ext]byte" visibility="public"/>
            <Method signature="shortValue()" returnType="[ext]short" visibility="public"/>
            <Method signature="intValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="longValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="floatValue()" returnType="[ext]float" visibility="public"/>
            <Method signature="doubleValue()" returnType="[ext]double" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Short" extends="java.lang.Number" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Number"/>
        <Fields>
            <Field name="MIN_VALUE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MAX_VALUE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TYPE" type="java.lang.Class" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="toString(short)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="parseShort(java.lang.String)" isStatic="true" returnType="[ext]short" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="parseShort(java.lang.String,int)" isStatic="true" returnType="[ext]short" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="valueOf(java.lang.String,int)" isStatic="true" returnType="java.lang.Short" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="valueOf(java.lang.String)" isStatic="true" returnType="java.lang.Short" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="decode(java.lang.String)" isStatic="true" returnType="java.lang.Short" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="+ctor(short)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="byteValue()" returnType="[ext]byte" visibility="public"/>
            <Method signature="shortValue()" returnType="[ext]short" visibility="public"/>
            <Method signature="intValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="longValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="floatValue()" returnType="[ext]float" visibility="public"/>
            <Method signature="doubleValue()" returnType="[ext]double" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.FloatingDecimal" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="isExceptional" type="boolean"/>
            <Field name="isNegative" type="boolean"/>
            <Field name="decExponent" type="int"/>
            <Field name="digits" type="char[]"/>
            <Field name="nDigits" type="int"/>
            <Field name="signMask" type="long" isStatic="true" isFinal="true"/>
            <Field name="expMask" type="long" isStatic="true" isFinal="true"/>
            <Field name="fractMask" type="long" isStatic="true" isFinal="true"/>
            <Field name="expShift" type="int" isStatic="true" isFinal="true"/>
            <Field name="expBias" type="int" isStatic="true" isFinal="true"/>
            <Field name="fractHOB" type="long" isStatic="true" isFinal="true"/>
            <Field name="expOne" type="long" isStatic="true" isFinal="true"/>
            <Field name="maxSmallBinExp" type="int" isStatic="true" isFinal="true"/>
            <Field name="minSmallBinExp" type="int" isStatic="true" isFinal="true"/>
            <Field name="highbyte" type="long" isStatic="true" isFinal="true"/>
            <Field name="highbit" type="long" isStatic="true" isFinal="true"/>
            <Field name="lowbytes" type="long" isStatic="true" isFinal="true"/>
            <Field name="singleSignMask" type="int" isStatic="true" isFinal="true"/>
            <Field name="singleExpMask" type="int" isStatic="true" isFinal="true"/>
            <Field name="singleFractMask" type="int" isStatic="true" isFinal="true"/>
            <Field name="singleExpShift" type="int" isStatic="true" isFinal="true"/>
            <Field name="singleFractHOB" type="int" isStatic="true" isFinal="true"/>
            <Field name="singleExpBias" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(double)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(float)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toJavaFormatString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.FDBigInt" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="nWords" type="int"/>
            <Field name="data" type="int[]"/>
        </Fields>
        <Methods>
            <Method signature="setDebugging(boolean)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.FDBigInt)" returnType="[ext]void" visibility="public"/>
            <Method signature="lshiftMe(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="normalizeMe()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="mult(int)" returnType="java.lang.FDBigInt" visibility="public"/>
            <Method signature="mult(java.lang.FDBigInt)" returnType="java.lang.FDBigInt" visibility="public"/>
            <Method signature="add(java.lang.FDBigInt)" returnType="java.lang.FDBigInt" visibility="public"/>
            <Method signature="sub(java.lang.FDBigInt)" returnType="java.lang.FDBigInt" visibility="public"/>
            <Method signature="cmp(java.lang.FDBigInt)" returnType="[ext]int" visibility="public"/>
            <Method signature="quoRemIteration(java.lang.FDBigInt)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="longValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Process" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" isAbstract="true" visibility="public"/>
            <Method signature="getInputStream()" returnType="java.io.InputStream" isAbstract="true" visibility="public"/>
            <Method signature="getErrorStream()" returnType="java.io.InputStream" isAbstract="true" visibility="public"/>
            <Method signature="waitFor()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="exitValue()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="destroy()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.OutOfMemoryError" extends="java.lang.VirtualMachineError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.VirtualMachineError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.UnsatisfiedLinkError" extends="java.lang.LinkageError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.LinkageError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.IllegalAccessError" extends="java.lang.IncompatibleClassChangeError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IncompatibleClassChangeError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Void" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="TYPE" type="java.lang.Class" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods/>
    </Class>
    <Class mangling="java.lang.Compiler" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="compileClass(java.lang.Class)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="compileClasses(java.lang.String)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="command(java.lang.Object)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="enable()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="disable()" isStatic="true" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ArrayStoreException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ClassCastException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.NegativeArraySizeException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.IllegalMonitorStateException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ClassCircularityError" extends="java.lang.LinkageError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.LinkageError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ClassFormatError" extends="java.lang.LinkageError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.LinkageError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.ExceptionInInitializerError" extends="java.lang.LinkageError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.LinkageError"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.Throwable)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getException()" returnType="java.lang.Throwable" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.AbstractMethodError" extends="java.lang.IncompatibleClassChangeError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IncompatibleClassChangeError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.InstantiationError" extends="java.lang.IncompatibleClassChangeError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IncompatibleClassChangeError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.NoSuchFieldError" extends="java.lang.IncompatibleClassChangeError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IncompatibleClassChangeError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.VerifyError" extends="java.lang.LinkageError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.LinkageError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.StackOverflowError" extends="java.lang.VirtualMachineError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.VirtualMachineError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.UnknownError" extends="java.lang.VirtualMachineError" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.VirtualMachineError"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.Win32Process" extends="java.lang.Process" isGeneric="false">
        <Extends mangling="java.lang.Process"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String[],java.lang.String[])" returnType="[ext]void">
                <Throw mangling="java.lang.Exception"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public"/>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public"/>
            <Method signature="getErrorStream()" returnType="java.io.InputStream" visibility="public"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="public"/>
            <Method signature="exitValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="waitFor()" returnType="[ext]int" visibility="public"/>
            <Method signature="destroy()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.lang.IllegalStateException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.InputStream" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="read()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[])" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.IOException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.io.Serializable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
    </Interface>
    <Class mangling="java.io.ObjectInputStream" extends="java.io.InputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.InputStream"/>
        <Implements mangling="java.io.ObjectInput"/>
        <Implements mangling="java.io.ObjectStreamConstants"/>
        <Fields>
            <Field name="classdesc" type="java.io.ObjectStreamClass[]"/>
            <Field name="classes" type="java.lang.Class[]"/>
            <Field name="spClass" type="int"/>
            <Field name="enableResolve" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.io.StreamCorruptedException"/>
            </Method>
            <Method signature="readObject()" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.OptionalDataException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="defaultReadObject()" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
                <Throw mangling="java.io.NotActiveException"/>
            </Method>
            <Method signature="registerValidation(java.io.ObjectInputValidation,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.NotActiveException"/>
                <Throw mangling="java.io.InvalidObjectException"/>
            </Method>
            <Method signature="resolveClass(java.io.ObjectStreamClass)" returnType="java.lang.Class" visibility="protected">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="resolveObject(java.lang.Object)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="enableResolveObject(boolean)" returnType="[ext]boolean" isFinal="true" visibility="protected">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="readStreamHeader()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.io.StreamCorruptedException"/>
            </Method>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readBoolean()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readByte()" returnType="[ext]byte" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUnsignedByte()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readShort()" returnType="[ext]short" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUnsignedShort()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readChar()" returnType="[ext]char" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readInt()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readLong()" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFloat()" returnType="[ext]float" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readDouble()" returnType="[ext]double" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFully(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFully(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skipBytes(int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readLine()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUTF()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.ValidationCallback" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="priority" type="int"/>
            <Field name="callback" type="java.io.ObjectInputValidation"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.ObjectInputValidation,int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Interface mangling="java.io.ObjectInput" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.DataInput"/>
        <Methods>
            <Method signature="readObject()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.lang.ClassNotFoundException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[])" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Interface>
    <Interface mangling="java.io.ObjectStreamConstants" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="STREAM_MAGIC" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="STREAM_VERSION" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_BASE" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_NULL" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_REFERENCE" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_CLASSDESC" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_OBJECT" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_STRING" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_ARRAY" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_CLASS" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_BLOCKDATA" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_ENDBLOCKDATA" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_RESET" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_BLOCKDATALONG" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_EXCEPTION" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TC_MAX" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="baseWireHandle" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SC_WRITE_METHOD" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SC_SERIALIZABLE" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SC_EXTERNALIZABLE" type="byte" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
    </Interface>
    <Class mangling="java.io.StreamCorruptedException" extends="java.io.ObjectStreamException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ObjectStreamException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.OptionalDataException" extends="java.io.ObjectStreamException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ObjectStreamException"/>
        <Fields>
            <Field name="length" type="int" visibility="public"/>
            <Field name="eof" type="boolean" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int)" returnType="[ext]void"/>
            <Method signature="+ctor(boolean)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.io.NotActiveException" extends="java.io.ObjectStreamException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ObjectStreamException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.InvalidObjectException" extends="java.io.ObjectStreamException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ObjectStreamException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.InvalidClassException" extends="java.io.ObjectStreamException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ObjectStreamException"/>
        <Fields>
            <Field name="classname" type="java.lang.String" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMessage()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.io.DataInput" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="readFully(byte[])" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFully(byte[],int,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skipBytes(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readBoolean()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readByte()" returnType="[ext]byte" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUnsignedByte()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readShort()" returnType="[ext]short" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUnsignedShort()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readChar()" returnType="[ext]char" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readInt()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readLong()" returnType="[ext]long" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFloat()" returnType="[ext]float" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readDouble()" returnType="[ext]double" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readLine()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUTF()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.io.ObjectOutputStream" extends="java.io.OutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.OutputStream"/>
        <Implements mangling="java.io.ObjectOutput"/>
        <Implements mangling="java.io.ObjectStreamConstants"/>
        <Fields>
            <Field name="enableReplace" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeObject(java.lang.Object)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="defaultWriteObject()" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="annotateClass(java.lang.Class)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="replaceObject(java.lang.Object)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="enableReplaceObject(boolean)" returnType="[ext]boolean" isFinal="true" visibility="protected">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="writeStreamHeader()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="drain()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeBoolean(boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeByte(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeShort(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeChar(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeInt(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeLong(long)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeFloat(float)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeDouble(double)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeBytes(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeChars(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeUTF(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.Writer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="lock" type="java.lang.Object" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.lang.Object)" returnType="[ext]void" visibility="protected"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(char[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(char[],int,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(java.lang.String,int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.OutputStream" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="write(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.io.ObjectOutput" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.DataOutput"/>
        <Methods>
            <Method signature="writeObject(java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[])" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Interface>
    <Interface mangling="java.io.DataOutput" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="write(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[])" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeBoolean(boolean)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeByte(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeShort(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeChar(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeInt(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeLong(long)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeFloat(float)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeDouble(double)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeBytes(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeChars(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeUTF(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.io.FileInputStream" extends="java.io.InputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.InputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.FileNotFoundException"/>
            </Method>
            <Method signature="+ctor(java.io.File)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.FileNotFoundException"/>
            </Method>
            <Method signature="+ctor(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[])" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getFD()" returnType="java.io.FileDescriptor" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.FileNotFoundException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.UnsupportedEncodingException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.CharConversionException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.FileDescriptor" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="in" type="java.io.FileDescriptor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="out" type="java.io.FileDescriptor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="err" type="java.io.FileDescriptor" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="valid()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="sync()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.SyncFailedException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.SyncFailedException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.PrintStream" extends="java.io.FilterOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterOutputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.OutputStream,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="flush()" returnType="[ext]void" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkError()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setError()" returnType="[ext]void" visibility="protected"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(float)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(double)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(char[])" returnType="[ext]void" visibility="public"/>
            <Method signature="print(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="println()" returnType="[ext]void" visibility="public"/>
            <Method signature="println(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(float)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(double)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(char[])" returnType="[ext]void" visibility="public"/>
            <Method signature="println(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(java.lang.Object)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.FilterOutputStream" extends="java.io.OutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.OutputStream"/>
        <Fields>
            <Field name="out" type="java.io.OutputStream" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.PrintWriter" extends="java.io.Writer" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Writer"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.Writer)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.Writer,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.OutputStream,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="flush()" returnType="[ext]void" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkError()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setError()" returnType="[ext]void" visibility="protected"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(char[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(char[])" returnType="[ext]void" visibility="public"/>
            <Method signature="write(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(float)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(double)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(char[])" returnType="[ext]void" visibility="public"/>
            <Method signature="print(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="println()" returnType="[ext]void" visibility="public"/>
            <Method signature="println(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(float)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(double)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(char[])" returnType="[ext]void" visibility="public"/>
            <Method signature="println(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="println(java.lang.Object)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.File" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="separator" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="separatorChar" type="char" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="pathSeparator" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="pathSeparatorChar" type="char" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.File,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getPath()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getAbsolutePath()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getCanonicalPath()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getParent()" returnType="java.lang.String" visibility="public"/>
            <Method signature="exists()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="canWrite()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="canRead()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isFile()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isDirectory()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isAbsolute()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="lastModified()" returnType="[ext]long" visibility="public"/>
            <Method signature="length()" returnType="[ext]long" visibility="public"/>
            <Method signature="mkdir()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="renameTo(java.io.File)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mkdirs()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="list()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="list(java.io.FilenameFilter)" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="delete()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.FileOutputStream" extends="java.io.OutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.OutputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.File)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getFD()" returnType="java.io.FileDescriptor" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.BufferedInputStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="buf" type="byte[]" visibility="protected"/>
            <Field name="count" type="int" visibility="protected"/>
            <Field name="pos" type="int" visibility="protected"/>
            <Field name="markpos" type="int" visibility="protected"/>
            <Field name="marklimit" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.InputStream,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.EOFException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.FilterInputStream" extends="java.io.InputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.InputStream"/>
        <Fields>
            <Field name="in" type="java.io.InputStream" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="protected"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[])" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.BufferedOutputStream" extends="java.io.FilterOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterOutputStream"/>
        <Fields>
            <Field name="buf" type="byte[]" visibility="protected"/>
            <Field name="count" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.OutputStream,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.ObjectStreamException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.io.DataInputStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Implements mangling="java.io.DataInput"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="read(byte[])" returnType="[ext]int" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFully(byte[])" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFully(byte[],int,int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skipBytes(int)" returnType="[ext]int" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readBoolean()" returnType="[ext]boolean" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readByte()" returnType="[ext]byte" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUnsignedByte()" returnType="[ext]int" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readShort()" returnType="[ext]short" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUnsignedShort()" returnType="[ext]int" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readChar()" returnType="[ext]char" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readInt()" returnType="[ext]int" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readLong()" returnType="[ext]long" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFloat()" returnType="[ext]float" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readDouble()" returnType="[ext]double" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readLine()" returnType="java.lang.String" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUTF()" returnType="java.lang.String" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUTF(java.io.DataInput)" isStatic="true" returnType="java.lang.String" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.ObjectStreamClass" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="lookup(java.lang.Class)" isStatic="true" returnType="java.io.ObjectStreamClass" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getSerialVersionUID()" returnType="[ext]long" visibility="public"/>
            <Method signature="forClass()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor(java.lang.String,long)" returnType="[ext]void"/>
            <Method signature="setClass(java.lang.Class)" returnType="[ext]void">
                <Throw mangling="java.io.InvalidClassException"/>
            </Method>
            <Method signature="compareClassNames(java.lang.String,java.lang.String,char)" isStatic="true" returnType="[ext]boolean"/>
            <Method signature="typeEquals(java.io.ObjectStreamClass)" returnType="[ext]boolean"/>
            <Method signature="getFields()" returnType="[ext]java.io.ObjectStreamField[]"/>
            <Method signature="setSuperclass(java.io.ObjectStreamClass)" returnType="[ext]void"/>
            <Method signature="getSuperclass()" returnType="java.io.ObjectStreamClass"/>
            <Method signature="hasWriteObject()" returnType="[ext]boolean"/>
            <Method signature="hasExternalizableBlockDataMode()" returnType="[ext]boolean"/>
            <Method signature="localClassDescriptor()" returnType="java.io.ObjectStreamClass"/>
            <Method signature="isExternalizable()" returnType="[ext]boolean"/>
            <Method signature="getFieldSequence()" returnType="[ext]int[]"/>
            <Method signature="write(java.io.ObjectOutputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(java.io.ObjectInputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.ByteArrayOutputStream" extends="java.io.OutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.OutputStream"/>
        <Fields>
            <Field name="buf" type="byte[]" visibility="protected"/>
            <Field name="count" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="writeTo(java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="toByteArray()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="size()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString(java.lang.String)" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.UnsupportedEncodingException"/>
            </Method>
            <Method signature="toString(int)" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.ByteArrayInputStream" extends="java.io.InputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.InputStream"/>
        <Fields>
            <Field name="buf" type="byte[]" visibility="protected"/>
            <Field name="pos" type="int" visibility="protected"/>
            <Field name="mark" type="int" visibility="protected"/>
            <Field name="count" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public"/>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public"/>
            <Method signature="available()" returnType="[ext]int" visibility="public"/>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.WriteAbortedException" extends="java.io.ObjectStreamException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ObjectStreamException"/>
        <Fields>
            <Field name="detail" type="java.lang.Exception" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMessage()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.io.ObjectInputValidation" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="validateObject()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.InvalidObjectException"/>
            </Method>
        </Methods>
    </Interface>
    <Interface mangling="java.io.Externalizable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Methods>
            <Method signature="writeExternal(java.io.ObjectOutput)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readExternal(java.io.ObjectInput)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.io.DataOutputStream" extends="java.io.FilterOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterOutputStream"/>
        <Implements mangling="java.io.DataOutput"/>
        <Fields>
            <Field name="written" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeBoolean(boolean)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeByte(int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeShort(int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeChar(int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeInt(int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeLong(long)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeFloat(float)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeDouble(double)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeBytes(java.lang.String)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeChars(java.lang.String)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeUTF(java.lang.String)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="size()" returnType="[ext]int" isFinal="true" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.NotSerializableException" extends="java.io.ObjectStreamException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ObjectStreamException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.BufferedWriter" extends="java.io.Writer" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Writer"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.Writer)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.Writer,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="flushBuffer()" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(char[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(java.lang.String,int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="newLine()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.Reader" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="lock" type="java.lang.Object" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.lang.Object)" returnType="[ext]void" visibility="protected"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(char[])" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(char[],int,int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="ready()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.OutputStreamWriter" extends="java.io.Writer" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Writer"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.UnsupportedEncodingException"/>
            </Method>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="getEncoding()" returnType="java.lang.String" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(char[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(java.lang.String,int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flushBuffer()" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.InterruptedIOException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Fields>
            <Field name="bytesTransferred" type="int" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.io.FilenameFilter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="accept(java.io.File,java.lang.String)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.io.PushbackInputStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="buf" type="byte[]" visibility="protected"/>
            <Field name="pos" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="unread(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="unread(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="unread(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.UTFDataFormatException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.ObjectStreamField" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="name" type="java.lang.String"/>
            <Field name="type" type="char"/>
            <Field name="offset" type="int"/>
            <Field name="typeString" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,char,int,java.lang.String)" returnType="[ext]void"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
            <Method signature="isPrimitive()" returnType="[ext]boolean"/>
            <Method signature="compare(java.io.ObjectStreamField)" returnType="[ext]int"/>
            <Method signature="typeEquals(java.io.ObjectStreamField)" returnType="[ext]boolean"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.PipedInputStream" extends="java.io.InputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.InputStream"/>
        <Fields>
            <Field name="closed" type="boolean"/>
            <Field name="closedByReader" type="boolean"/>
            <Field name="connected" type="boolean"/>
            <Field name="readSide" type="java.lang.Thread"/>
            <Field name="writeSide" type="java.lang.Thread"/>
            <Field name="PIPE_SIZE" type="int" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="buffer" type="byte[]" visibility="protected"/>
            <Field name="in" type="int" visibility="protected"/>
            <Field name="out" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.PipedOutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="connect(java.io.PipedOutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="receive(int)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="receive(byte[],int,int)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="receivedLast()" returnType="[ext]void"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.PipedOutputStream" extends="java.io.OutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.OutputStream"/>
        <Fields>
            <Field name="connected" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.PipedInputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="connect(java.io.PipedInputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.SequenceInputStream" extends="java.io.InputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.InputStream"/>
        <Fields>
            <Field name="e" type="java.util.Enumeration"/>
            <Field name="in" type="java.io.InputStream"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.util.Enumeration)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.InputStream,java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="nextStream()" returnType="[ext]void" isFinal="true">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.StringBufferInputStream" extends="java.io.InputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.InputStream"/>
        <Fields>
            <Field name="buffer" type="java.lang.String" visibility="protected"/>
            <Field name="pos" type="int" visibility="protected"/>
            <Field name="count" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public"/>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public"/>
            <Method signature="available()" returnType="[ext]int" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.LineNumberInputStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="pushBack" type="int"/>
            <Field name="lineNumber" type="int"/>
            <Field name="markLineNumber" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setLineNumber(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLineNumber()" returnType="[ext]int" visibility="public"/>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.RandomAccessFile" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.DataOutput"/>
        <Implements mangling="java.io.DataInput"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.File,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getFD()" returnType="java.io.FileDescriptor" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[])" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFully(byte[])" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFully(byte[],int,int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skipBytes(int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getFilePointer()" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="seek(long)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="length()" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readBoolean()" returnType="[ext]boolean" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readByte()" returnType="[ext]byte" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUnsignedByte()" returnType="[ext]int" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readShort()" returnType="[ext]short" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUnsignedShort()" returnType="[ext]int" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readChar()" returnType="[ext]char" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readInt()" returnType="[ext]int" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readLong()" returnType="[ext]long" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFloat()" returnType="[ext]float" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readDouble()" returnType="[ext]double" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readLine()" returnType="java.lang.String" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readUTF()" returnType="java.lang.String" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeBoolean(boolean)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeByte(int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeShort(int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeChar(int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeInt(int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeLong(long)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeFloat(float)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeDouble(double)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeBytes(java.lang.String)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeChars(java.lang.String)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeUTF(java.lang.String)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.StreamTokenizer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="ttype" type="int" visibility="public"/>
            <Field name="TT_EOF" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TT_EOL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TT_NUMBER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TT_WORD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="sval" type="java.lang.String" visibility="public"/>
            <Field name="nval" type="double" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.Reader)" returnType="[ext]void" visibility="public"/>
            <Method signature="resetSyntax()" returnType="[ext]void" visibility="public"/>
            <Method signature="wordChars(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="whitespaceChars(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="ordinaryChars(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="ordinaryChar(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="commentChar(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="quoteChar(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="parseNumbers()" returnType="[ext]void" visibility="public"/>
            <Method signature="eolIsSignificant(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="slashStarComments(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="slashSlashComments(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="lowerCaseMode(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="nextToken()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="pushBack()" returnType="[ext]void" visibility="public"/>
            <Method signature="lineno()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.BufferedReader" extends="java.io.Reader" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Reader"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.Reader,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.Reader)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(char[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readLine()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="ready()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.LineNumberReader" extends="java.io.BufferedReader" isGeneric="false" visibility="public">
        <Extends mangling="java.io.BufferedReader"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.Reader)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.Reader,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setLineNumber(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLineNumber()" returnType="[ext]int" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(char[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readLine()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.CharArrayReader" extends="java.io.Reader" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Reader"/>
        <Fields>
            <Field name="buf" type="char[]" visibility="protected"/>
            <Field name="pos" type="int" visibility="protected"/>
            <Field name="markedPos" type="int" visibility="protected"/>
            <Field name="count" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(char[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(char[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(char[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="ready()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.FilterReader" extends="java.io.Reader" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Reader"/>
        <Fields>
            <Field name="in" type="java.io.Reader" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.Reader)" returnType="[ext]void" visibility="protected"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(char[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="ready()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.PushbackReader" extends="java.io.FilterReader" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterReader"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.Reader,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.Reader)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(char[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="unread(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="unread(char[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="unread(char[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="ready()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.InputStreamReader" extends="java.io.Reader" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Reader"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.InputStream,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.UnsupportedEncodingException"/>
            </Method>
            <Method signature="getEncoding()" returnType="java.lang.String" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(char[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="ready()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.FileReader" extends="java.io.InputStreamReader" isGeneric="false" visibility="public">
        <Extends mangling="java.io.InputStreamReader"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.FileNotFoundException"/>
            </Method>
            <Method signature="+ctor(java.io.File)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.FileNotFoundException"/>
            </Method>
            <Method signature="+ctor(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.PipedReader" extends="java.io.Reader" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Reader"/>
        <Fields>
            <Field name="byteSink" type="java.io.PipedInputStream"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.PipedWriter)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="connect(java.io.PipedWriter)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(char[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.StringReader" extends="java.io.Reader" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Reader"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(char[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="ready()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.CharArrayWriter" extends="java.io.Writer" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Writer"/>
        <Fields>
            <Field name="buf" type="char[]" visibility="protected"/>
            <Field name="count" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(char[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="writeTo(java.io.Writer)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="toCharArray()" returnType="[ext]char[]" visibility="public"/>
            <Method signature="size()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="flush()" returnType="[ext]void" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.FilterWriter" extends="java.io.Writer" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Writer"/>
        <Fields>
            <Field name="out" type="java.io.Writer" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.Writer)" returnType="[ext]void" visibility="protected"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(char[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(java.lang.String,int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.FileWriter" extends="java.io.OutputStreamWriter" isGeneric="false" visibility="public">
        <Extends mangling="java.io.OutputStreamWriter"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.File)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.io.PipedWriter" extends="java.io.Writer" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Writer"/>
        <Fields>
            <Field name="byteSource" type="java.io.PipedOutputStream"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.PipedReader)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="connect(java.io.PipedReader)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(char[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.io.StringWriter" extends="java.io.Writer" isGeneric="false" visibility="public">
        <Extends mangling="java.io.Writer"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="protected"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(char[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getBuffer()" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="flush()" returnType="[ext]void" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.Vector" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="elementData" type="java.lang.Object[]" visibility="protected"/>
            <Field name="elementCount" type="int" visibility="protected"/>
            <Field name="capacityIncrement" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="copyInto(java.lang.Object[])" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="trimToSize()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="ensureCapacity(int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="setSize(int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="capacity()" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="size()" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="isEmpty()" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="elements()" returnType="java.util.Enumeration" isFinal="true" visibility="public"/>
            <Method signature="contains(java.lang.Object)" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="indexOf(java.lang.Object)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="indexOf(java.lang.Object,int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="lastIndexOf(java.lang.Object)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="lastIndexOf(java.lang.Object,int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="elementAt(int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="firstElement()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="lastElement()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="setElementAt(java.lang.Object,int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="removeElementAt(int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="insertElementAt(java.lang.Object,int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="addElement(java.lang.Object)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="removeElement(java.lang.Object)" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="removeAllElements()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" isFinal="true" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.VectorEnumerator" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.Enumeration"/>
        <Fields>
            <Field name="vector" type="java.util.Vector"/>
            <Field name="count" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.util.Vector)" returnType="[ext]void"/>
            <Method signature="hasMoreElements()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="nextElement()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.util.Enumeration" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="hasMoreElements()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="nextElement()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.util.Hashtable" extends="java.util.Dictionary" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Dictionary"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int,float)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="size()" returnType="[ext]int" visibility="public"/>
            <Method signature="isEmpty()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="keys()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="elements()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="contains(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="containsKey(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="get(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="rehash()" returnType="[ext]void" visibility="protected"/>
            <Method signature="put(java.lang.Object,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="clear()" returnType="[ext]void" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.HashtableEntry" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="hash" type="int"/>
            <Field name="key" type="java.lang.Object"/>
            <Field name="value" type="java.lang.Object"/>
            <Field name="next" type="java.util.HashtableEntry"/>
        </Fields>
        <Methods>
            <Method signature="clone()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.util.HashtableEnumerator" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.Enumeration"/>
        <Fields>
            <Field name="keys" type="boolean"/>
            <Field name="index" type="int"/>
            <Field name="table" type="java.util.HashtableEntry[]"/>
            <Field name="entry" type="java.util.HashtableEntry"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.util.HashtableEntry[],boolean)" returnType="[ext]void"/>
            <Method signature="hasMoreElements()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="nextElement()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.Dictionary" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="size()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="isEmpty()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="keys()" returnType="java.util.Enumeration" isAbstract="true" visibility="public"/>
            <Method signature="elements()" returnType="java.util.Enumeration" isAbstract="true" visibility="public"/>
            <Method signature="get(java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="put(java.lang.Object,java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="remove(java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.Locale" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="ENGLISH" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FRENCH" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="GERMAN" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ITALIAN" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="JAPANESE" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KOREAN" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CHINESE" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SIMPLIFIED_CHINESE" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TRADITIONAL_CHINESE" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FRANCE" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="GERMANY" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ITALY" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="JAPAN" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KOREA" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CHINA" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PRC" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TAIWAN" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UK" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="US" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CANADA" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CANADA_FRENCH" type="java.util.Locale" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDefault()" isStatic="true" returnType="java.util.Locale" visibility="public"/>
            <Method signature="setDefault(java.util.Locale)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getLanguage()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getCountry()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getVariant()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="getISO3Language()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.util.MissingResourceException"/>
            </Method>
            <Method signature="getISO3Country()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.util.MissingResourceException"/>
            </Method>
            <Method signature="getISO2Language()" returnType="java.lang.String">
                <Throw mangling="java.util.MissingResourceException"/>
            </Method>
            <Method signature="getISO2Country()" returnType="java.lang.String">
                <Throw mangling="java.util.MissingResourceException"/>
            </Method>
            <Method signature="getDisplayLanguage()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="getDisplayLanguage(java.util.Locale)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getDisplayCountry()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="getDisplayCountry(java.util.Locale)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getDisplayVariant()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="getDisplayVariant(java.util.Locale)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getDisplayName()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="getDisplayName(java.util.Locale)" returnType="java.lang.String" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.Date" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="UTC(int,int,int,int,int,int)" isStatic="true" returnType="[ext]long" visibility="public"/>
            <Method signature="parse(java.lang.String)" isStatic="true" returnType="[ext]long" visibility="public"/>
            <Method signature="getYear()" returnType="[ext]int" visibility="public"/>
            <Method signature="setYear(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMonth()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMonth(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDate()" returnType="[ext]int" visibility="public"/>
            <Method signature="setDate(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDay()" returnType="[ext]int" visibility="public"/>
            <Method signature="getHours()" returnType="[ext]int" visibility="public"/>
            <Method signature="setHours(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMinutes()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMinutes(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSeconds()" returnType="[ext]int" visibility="public"/>
            <Method signature="setSeconds(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getTime()" returnType="[ext]long" visibility="public"/>
            <Method signature="setTime(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="before(java.util.Date)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="after(java.util.Date)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toLocaleString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toGMTString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getTimezoneOffset()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.Calendar" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="ERA" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="YEAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MONTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WEEK_OF_YEAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WEEK_OF_MONTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DAY_OF_MONTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DAY_OF_YEAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DAY_OF_WEEK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DAY_OF_WEEK_IN_MONTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="AM_PM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HOUR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HOUR_OF_DAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MINUTE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SECOND" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MILLISECOND" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ZONE_OFFSET" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DST_OFFSET" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FIELD_COUNT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SUNDAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MONDAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TUESDAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WEDNESDAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="THURSDAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FRIDAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SATURDAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="JANUARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FEBRUARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MARCH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APRIL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="JUNE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="JULY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="AUGUST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SEPTEMBER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="OCTOBER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NOVEMBER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DECEMBER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UNDECIMBER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="AM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="fields" type="int[]" visibility="protected"/>
            <Field name="isSet" type="boolean[]" visibility="protected"/>
            <Field name="stamp" type="int[]"/>
            <Field name="time" type="long" visibility="protected"/>
            <Field name="isTimeSet" type="boolean" visibility="protected"/>
            <Field name="areFieldsSet" type="boolean" visibility="protected"/>
            <Field name="areAllFieldsSet" type="boolean"/>
            <Field name="UNSET" type="int" isStatic="true" isFinal="true"/>
            <Field name="INTERNALLY_SET" type="int" isStatic="true" isFinal="true"/>
            <Field name="MINIMUM_USER_STAMP" type="int" isStatic="true" isFinal="true"/>
            <Field name="currentSerialVersion" type="int" isStatic="true" isFinal="true"/>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.util.TimeZone,java.util.Locale)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getInstance()" isStatic="true" returnType="java.util.Calendar" visibility="public"/>
            <Method signature="getInstance(java.util.TimeZone)" isStatic="true" returnType="java.util.Calendar" visibility="public"/>
            <Method signature="getInstance(java.util.Locale)" isStatic="true" returnType="java.util.Calendar" visibility="public"/>
            <Method signature="getInstance(java.util.TimeZone,java.util.Locale)" isStatic="true" returnType="java.util.Calendar" visibility="public"/>
            <Method signature="getAvailableLocales()" isStatic="true" returnType="[ext]java.util.Locale[]" visibility="public"/>
            <Method signature="computeTime()" returnType="[ext]void" isAbstract="true" visibility="protected"/>
            <Method signature="computeFields()" returnType="[ext]void" isAbstract="true" visibility="protected"/>
            <Method signature="getTime()" returnType="java.util.Date" isFinal="true" visibility="public"/>
            <Method signature="setTime(java.util.Date)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getTimeInMillis()" returnType="[ext]long" visibility="protected"/>
            <Method signature="setTimeInMillis(long)" returnType="[ext]void" visibility="protected"/>
            <Method signature="get(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="internalGet(int)" returnType="[ext]int" isFinal="true" visibility="protected"/>
            <Method signature="internalSet(int,int)" returnType="[ext]void" isFinal="true"/>
            <Method signature="set(int,int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="set(int,int,int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="set(int,int,int,int,int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="set(int,int,int,int,int,int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="clear()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="clear(int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="isSet(int)" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="complete()" returnType="[ext]void" visibility="protected"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="before(java.lang.Object)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="after(java.lang.Object)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="add(int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="roll(int,boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setTimeZone(java.util.TimeZone)" returnType="[ext]void" visibility="public"/>
            <Method signature="getTimeZone()" returnType="java.util.TimeZone" visibility="public"/>
            <Method signature="setLenient(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="isLenient()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setFirstDayOfWeek(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getFirstDayOfWeek()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMinimalDaysInFirstWeek(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMinimalDaysInFirstWeek()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMinimum(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getMaximum(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getGreatestMinimum(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getLeastMaximum(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.Stack" extends="java.util.Vector" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Vector"/>
        <Fields/>
        <Methods>
            <Method signature="push(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="pop()" returnType="[ext]void" visibility="public"/>
            <Method signature="peek()" returnType="[ext]void" visibility="public"/>
            <Method signature="empty()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="search(java.lang.Object)" returnType="[ext]int" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.ResourceBundle" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="parent" type="java.util.ResourceBundle" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="getString(java.lang.String)" returnType="java.lang.String" isFinal="true" visibility="public">
                <Throw mangling="java.util.MissingResourceException"/>
            </Method>
            <Method signature="getStringArray(java.lang.String)" returnType="[ext]java.lang.String[]" isFinal="true" visibility="public">
                <Throw mangling="java.util.MissingResourceException"/>
            </Method>
            <Method signature="getObject(java.lang.String)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.util.MissingResourceException"/>
            </Method>
            <Method signature="getBundle(java.lang.String)" isStatic="true" returnType="java.util.ResourceBundle" isFinal="true" visibility="public">
                <Throw mangling="java.util.MissingResourceException"/>
            </Method>
            <Method signature="getBundle(java.lang.String,java.util.Locale)" isStatic="true" returnType="java.util.ResourceBundle" isFinal="true" visibility="public"/>
            <Method signature="setParent(java.util.ResourceBundle)" returnType="[ext]void" visibility="protected"/>
            <Method signature="handleGetObject(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.util.MissingResourceException"/>
            </Method>
            <Method signature="getKeys()" returnType="java.util.Enumeration" isAbstract="true" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.SystemClassLoader" extends="java.lang.ClassLoader" isGeneric="false">
        <Extends mangling="java.lang.ClassLoader"/>
        <Methods>
            <Method signature="loadClass(java.lang.String,boolean)" returnType="java.lang.Class" visibility="protected">
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="getResourceAsStream(java.lang.String)" returnType="java.io.InputStream" visibility="public"/>
            <Method signature="getResource(java.lang.String)" returnType="java.net.URL" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.util.MissingResourceException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getClassName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getKey()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.TimeZone" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields/>
        <Methods>
            <Method signature="getOffset(int,int,int,int,int,int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="setRawOffset(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getRawOffset()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getID()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setID(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="useDaylightTime()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="inDaylightTime(java.util.Date)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="getTimeZone(java.lang.String)" isStatic="true" returnType="java.util.TimeZone" visibility="public"/>
            <Method signature="getAvailableIDs(int)" isStatic="true" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="getAvailableIDs()" isStatic="true" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="getDefault()" isStatic="true" returnType="java.util.TimeZone" visibility="public"/>
            <Method signature="setDefault(java.util.TimeZone)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.TimeZoneData" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="MAXIMUM_ZONES_PER_OFFSET" type="int" isStatic="true" isFinal="true"/>
            <Field name="zones" type="java.util.SimpleTimeZone[]" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="get(java.lang.String)" isStatic="true" returnType="java.util.TimeZone" isFinal="true"/>
            <Method signature="mapLongIDtoShortID(java.lang.String)" isStatic="true" returnType="java.lang.String" isFinal="true"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.util.GregorianCalendar" extends="java.util.Calendar" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Calendar"/>
        <Fields>
            <Field name="BC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="AD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.util.TimeZone)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.util.Locale)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.util.TimeZone,java.util.Locale)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="before(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="after(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setGregorianChange(java.util.Date)" returnType="[ext]void" visibility="public"/>
            <Method signature="getGregorianChange()" returnType="java.util.Date" isFinal="true" visibility="public"/>
            <Method signature="isLeapYear(int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="computeFields()" returnType="[ext]void" visibility="protected"/>
            <Method signature="inDaylightTime()" returnType="[ext]boolean"/>
            <Method signature="computeTime()" returnType="[ext]void" visibility="protected"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="add(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="roll(int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="roll(int,int)" returnType="[ext]void"/>
            <Method signature="getMinimum(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="getMaximum(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="getGreatestMinimum(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="getLeastMaximum(int)" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.SimpleTimeZone" extends="java.util.TimeZone" isGeneric="false" visibility="public">
        <Extends mangling="java.util.TimeZone"/>
        <Fields>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
            <Field name="currentSerialVersion" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,java.lang.String,int,int,int,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,java.lang.String,int,int,int,int,int,int,int,int,int)" returnType="[ext]void"/>
            <Method signature="setStartYear(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setStartRule(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setEndRule(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getOffset(int,int,int,int,int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="getRawOffset()" returnType="[ext]int" visibility="public"/>
            <Method signature="setRawOffset(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="useDaylightTime()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="inDaylightTime(java.util.Date)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.Random" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="setSeed(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="next(int)" returnType="[ext]int" visibility="protected"/>
            <Method signature="nextBytes(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="nextInt()" returnType="[ext]int" visibility="public"/>
            <Method signature="nextLong()" returnType="[ext]long" visibility="public"/>
            <Method signature="nextFloat()" returnType="[ext]float" visibility="public"/>
            <Method signature="nextDouble()" returnType="[ext]double" visibility="public"/>
            <Method signature="nextGaussian()" returnType="[ext]double" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.StringTokenizer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.Enumeration"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="hasMoreTokens()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="nextToken()" returnType="java.lang.String" visibility="public"/>
            <Method signature="nextToken(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="hasMoreElements()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="nextElement()" returnType="[ext]void" visibility="public"/>
            <Method signature="countTokens()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.Properties" extends="java.util.Hashtable" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Hashtable"/>
        <Fields>
            <Field name="defaults" type="java.util.Properties" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.util.Properties)" returnType="[ext]void" visibility="public"/>
            <Method signature="load(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="save(java.io.OutputStream,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getProperty(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getProperty(java.lang.String,java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="propertyNames()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="list(java.io.PrintStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="list(java.io.PrintWriter)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.NoSuchElementException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.EmptyStackException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.PropertyResourceBundle" extends="java.util.ResourceBundle" isGeneric="false" visibility="public">
        <Extends mangling="java.util.ResourceBundle"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="handleGetObject(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getKeys()" returnType="java.util.Enumeration" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.BitSet" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="set(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="clear(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="get(int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="and(java.util.BitSet)" returnType="[ext]void" visibility="public"/>
            <Method signature="or(java.util.BitSet)" returnType="[ext]void" visibility="public"/>
            <Method signature="xor(java.util.BitSet)" returnType="[ext]void" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="size()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.util.EventListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
    </Interface>
    <Class mangling="java.util.EventObject" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="source" type="java.lang.Object" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSource()" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.Observable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="addObserver(java.util.Observer)" returnType="[ext]void" visibility="public"/>
            <Method signature="deleteObserver(java.util.Observer)" returnType="[ext]void" visibility="public"/>
            <Method signature="notifyObservers()" returnType="[ext]void" visibility="public"/>
            <Method signature="notifyObservers(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="deleteObservers()" returnType="[ext]void" visibility="public"/>
            <Method signature="setChanged()" returnType="[ext]void" visibility="protected"/>
            <Method signature="clearChanged()" returnType="[ext]void" visibility="protected"/>
            <Method signature="hasChanged()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="countObservers()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.util.Observer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="update(java.util.Observable,java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.util.TooManyListenersException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.ListResourceBundle" extends="java.util.ResourceBundle" isGeneric="false" visibility="public">
        <Extends mangling="java.util.ResourceBundle"/>
        <Fields/>
        <Methods>
            <Method signature="handleGetObject(java.lang.String)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getKeys()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="getContents()" returnType="[ext]java.lang.Object[][]" isAbstract="true" visibility="protected"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.CRC32" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.zip.Checksum"/>
        <Fields/>
        <Methods>
            <Method signature="update(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="update(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="update(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.util.zip.Checksum" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="update(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="update(byte[],int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]long" isAbstract="true" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.util.zip.Adler32" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.zip.Checksum"/>
        <Fields/>
        <Methods>
            <Method signature="update(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="update(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="update(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.CheckedInputStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,java.util.zip.Checksum)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getChecksum()" returnType="java.util.zip.Checksum" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.CheckedOutputStream" extends="java.io.FilterOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterOutputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream,java.util.zip.Checksum)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getChecksum()" returnType="java.util.zip.Checksum" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.Inflater" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="setInput(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setInput(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="setDictionary(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setDictionary(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="getRemaining()" returnType="[ext]int" visibility="public"/>
            <Method signature="needsInput()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="needsDictionary()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="finished()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="inflate(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.util.zip.DataFormatException"/>
            </Method>
            <Method signature="inflate(byte[])" returnType="[ext]int" visibility="public">
                <Throw mangling="java.util.zip.DataFormatException"/>
            </Method>
            <Method signature="getAdler()" returnType="[ext]int" visibility="public"/>
            <Method signature="getTotalIn()" returnType="[ext]int" visibility="public"/>
            <Method signature="getTotalOut()" returnType="[ext]int" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="end()" returnType="[ext]void" visibility="public"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.DataFormatException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.InflaterInputStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="inf" type="java.util.zip.Inflater" visibility="protected"/>
            <Field name="buf" type="byte[]" visibility="protected"/>
            <Field name="len" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,java.util.zip.Inflater,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.InputStream,java.util.zip.Inflater)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="fill()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.ZipException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.Deflater" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="DEFLATED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NO_COMPRESSION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BEST_SPEED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BEST_COMPRESSION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DEFAULT_COMPRESSION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FILTERED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HUFFMAN_ONLY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DEFAULT_STRATEGY" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="setInput(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setInput(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="setDictionary(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setDictionary(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="setStrategy(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setLevel(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="needsInput()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="finish()" returnType="[ext]void" visibility="public"/>
            <Method signature="finished()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="deflate(byte[],int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="deflate(byte[])" returnType="[ext]int" visibility="public"/>
            <Method signature="getAdler()" returnType="[ext]int" visibility="public"/>
            <Method signature="getTotalIn()" returnType="[ext]int" visibility="public"/>
            <Method signature="getTotalOut()" returnType="[ext]int" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="end()" returnType="[ext]void" visibility="public"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.DeflaterOutputStream" extends="java.io.FilterOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterOutputStream"/>
        <Fields>
            <Field name="def" type="java.util.zip.Deflater" visibility="protected"/>
            <Field name="buf" type="byte[]" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream,java.util.zip.Deflater,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.OutputStream,java.util.zip.Deflater)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finish()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="deflate()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.GZIPInputStream" extends="java.util.zip.InflaterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.util.zip.InflaterInputStream"/>
        <Fields>
            <Field name="crc" type="java.util.zip.CRC32" visibility="protected"/>
            <Field name="eos" type="boolean" visibility="protected"/>
            <Field name="GZIP_MAGIC" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.GZIPOutputStream" extends="java.util.zip.DeflaterOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.util.zip.DeflaterOutputStream"/>
        <Fields>
            <Field name="crc" type="java.util.zip.CRC32" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finish()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Interface mangling="java.util.zip.ZipConstants" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="LOCSIG" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="EXTSIG" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENSIG" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENDSIG" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCHDR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="EXTHDR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENHDR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENDHDR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCVER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCFLG" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCHOW" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCTIM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCCRC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCSIZ" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCLEN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCNAM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="EXTCRC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="EXTSIZ" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="EXTLEN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENVEM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENVER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENFLG" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENHOW" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENTIM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENCRC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENSIZ" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENLEN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENNAM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENCOM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENDSK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENATT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENATX" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENOFF" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENDSUB" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENDTOT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENDSIZ" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENDOFF" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENDCOM" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
    </Interface>
    <Class mangling="java.util.zip.ZipEntry" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.zip.ZipConstants"/>
        <Fields>
            <Field name="name" type="java.lang.String"/>
            <Field name="time" type="long"/>
            <Field name="crc" type="long"/>
            <Field name="size" type="long"/>
            <Field name="method" type="int"/>
            <Field name="extra" type="byte[]"/>
            <Field name="comment" type="java.lang.String"/>
            <Field name="flag" type="int"/>
            <Field name="version" type="int"/>
            <Field name="csize" type="long"/>
            <Field name="offset" type="long"/>
            <Field name="STORED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DEFLATED" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setTime(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="getTime()" returnType="[ext]long" visibility="public"/>
            <Method signature="setSize(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSize()" returnType="[ext]long" visibility="public"/>
            <Method signature="setCrc(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="getCrc()" returnType="[ext]long" visibility="public"/>
            <Method signature="setMethod(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMethod()" returnType="[ext]int" visibility="public"/>
            <Method signature="setExtra(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="getExtra()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="setComment(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getComment()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getCompressedSize()" returnType="[ext]long" visibility="public"/>
            <Method signature="isDirectory()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.ZipInputStream" extends="java.util.zip.InflaterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.util.zip.InflaterInputStream"/>
        <Implements mangling="java.util.zip.ZipConstants"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="getNextEntry()" returnType="java.util.zip.ZipEntry" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="closeEntry()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.ZipOutputStream" extends="java.util.zip.DeflaterOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.util.zip.DeflaterOutputStream"/>
        <Implements mangling="java.util.zip.ZipConstants"/>
        <Fields>
            <Field name="STORED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DEFLATED" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="setComment(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setMethod(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setLevel(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="putNextEntry(java.util.zip.ZipEntry)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="closeEntry()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finish()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.ZipFile" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.zip.ZipConstants"/>
        <Fields>
            <Field name="raf" type="java.io.RandomAccessFile"/>
            <Field name="cenpos" type="long"/>
            <Field name="pos" type="long"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.File)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.util.zip.ZipException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getEntry(java.lang.String)" returnType="java.util.zip.ZipEntry" visibility="public"/>
            <Method signature="getInputStream(java.util.zip.ZipEntry)" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="entries()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(long,byte[],int,int)" returnType="[ext]int">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(long)" returnType="[ext]int">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="get16(byte[],int)" isStatic="true" returnType="[ext]int" isFinal="true"/>
            <Method signature="get32(byte[],int)" isStatic="true" returnType="[ext]long" isFinal="true"/>
        </Methods>
    </Class>
    <Class mangling="java.util.zip.ZipFileInputStream" extends="java.io.InputStream" isGeneric="false">
        <Extends mangling="java.io.InputStream"/>
        <Implements mangling="java.util.zip.ZipConstants"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.util.zip.ZipFile,java.util.zip.ZipEntry)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public"/>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.MessageFormat" extends="java.text.Format" isGeneric="false" visibility="public">
        <Extends mangling="java.text.Format"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setLocale(java.util.Locale)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocale()" returnType="java.util.Locale" visibility="public"/>
            <Method signature="applyPattern(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="toPattern()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setFormats(java.text.Format[])" returnType="[ext]void" visibility="public"/>
            <Method signature="setFormat(int,java.text.Format)" returnType="[ext]void" visibility="public"/>
            <Method signature="getFormats()" returnType="[ext]java.text.Format[]" visibility="public"/>
            <Method signature="format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" isFinal="true" visibility="public"/>
            <Method signature="format(java.lang.String,java.lang.Object[])" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" isFinal="true" visibility="public"/>
            <Method signature="parse(java.lang.String,java.text.ParsePosition)" returnType="[ext]java.lang.Object[]" visibility="public"/>
            <Method signature="parse(java.lang.String)" returnType="[ext]java.lang.Object[]" visibility="public">
                <Throw mangling="java.text.ParseException"/>
            </Method>
            <Method signature="parseObject(java.lang.String,java.text.ParsePosition)" returnType="[ext]void" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="getIntegerFormat(java.util.Locale)" returnType="java.text.NumberFormat"/>
        </Methods>
    </Class>
    <Class mangling="java.text.DateFormat" extends="java.text.Format" isGeneric="false" visibility="public">
        <Extends mangling="java.text.Format"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="calendar" type="java.util.Calendar" visibility="protected"/>
            <Field name="numberFormat" type="java.text.NumberFormat" visibility="protected"/>
            <Field name="ERA_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="YEAR_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MONTH_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DATE_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HOUR_OF_DAY1_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HOUR_OF_DAY0_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MINUTE_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SECOND_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MILLISECOND_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DAY_OF_WEEK_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DAY_OF_YEAR_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DAY_OF_WEEK_IN_MONTH_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WEEK_OF_YEAR_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WEEK_OF_MONTH_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="AM_PM_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HOUR1_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HOUR0_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TIMEZONE_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FULL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LONG" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MEDIUM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SHORT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DEFAULT" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" isFinal="true" visibility="public"/>
            <Method signature="format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" isAbstract="true" visibility="public"/>
            <Method signature="format(java.util.Date)" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="parse(java.lang.String)" returnType="java.util.Date" visibility="public">
                <Throw mangling="java.text.ParseException"/>
            </Method>
            <Method signature="parse(java.lang.String,java.text.ParsePosition)" returnType="java.util.Date" isAbstract="true" visibility="public"/>
            <Method signature="parseObject(java.lang.String,java.text.ParsePosition)" returnType="[ext]void" visibility="public"/>
            <Method signature="getTimeInstance()" isStatic="true" returnType="java.text.DateFormat" isFinal="true" visibility="public"/>
            <Method signature="getTimeInstance(int)" isStatic="true" returnType="java.text.DateFormat" isFinal="true" visibility="public"/>
            <Method signature="getTimeInstance(int,java.util.Locale)" isStatic="true" returnType="java.text.DateFormat" isFinal="true" visibility="public"/>
            <Method signature="getDateInstance()" isStatic="true" returnType="java.text.DateFormat" isFinal="true" visibility="public"/>
            <Method signature="getDateInstance(int)" isStatic="true" returnType="java.text.DateFormat" isFinal="true" visibility="public"/>
            <Method signature="getDateInstance(int,java.util.Locale)" isStatic="true" returnType="java.text.DateFormat" isFinal="true" visibility="public"/>
            <Method signature="getDateTimeInstance()" isStatic="true" returnType="java.text.DateFormat" isFinal="true" visibility="public"/>
            <Method signature="getDateTimeInstance(int,int)" isStatic="true" returnType="java.text.DateFormat" isFinal="true" visibility="public"/>
            <Method signature="getDateTimeInstance(int,int,java.util.Locale)" isStatic="true" returnType="java.text.DateFormat" isFinal="true" visibility="public"/>
            <Method signature="getInstance()" isStatic="true" returnType="java.text.DateFormat" isFinal="true" visibility="public"/>
            <Method signature="getAvailableLocales()" isStatic="true" returnType="[ext]java.util.Locale[]" visibility="public"/>
            <Method signature="setCalendar(java.util.Calendar)" returnType="[ext]void" visibility="public"/>
            <Method signature="getCalendar()" returnType="java.util.Calendar" visibility="public"/>
            <Method signature="setNumberFormat(java.text.NumberFormat)" returnType="[ext]void" visibility="public"/>
            <Method signature="getNumberFormat()" returnType="java.text.NumberFormat" visibility="public"/>
            <Method signature="setTimeZone(java.util.TimeZone)" returnType="[ext]void" visibility="public"/>
            <Method signature="getTimeZone()" returnType="java.util.TimeZone" visibility="public"/>
            <Method signature="setLenient(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="isLenient()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.text.Format" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Methods>
            <Method signature="format(java.lang.Object)" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" isAbstract="true" visibility="public"/>
            <Method signature="parseObject(java.lang.String,java.text.ParsePosition)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="parseObject(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.text.ParseException"/>
            </Method>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.ParseException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getErrorOffset()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.SimpleDateFormat" extends="java.text.DateFormat" isGeneric="false" visibility="public">
        <Extends mangling="java.text.DateFormat"/>
        <Fields>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
            <Field name="currentSerialVersion" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.util.Locale)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.text.DateFormatSymbols)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,java.util.Locale)" returnType="[ext]void"/>
            <Method signature="format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="parse(java.lang.String,java.text.ParsePosition)" returnType="java.util.Date" visibility="public"/>
            <Method signature="toPattern()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toLocalizedPattern()" returnType="java.lang.String" visibility="public"/>
            <Method signature="applyPattern(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="applyLocalizedPattern(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDateFormatSymbols()" returnType="java.text.DateFormatSymbols" visibility="public"/>
            <Method signature="setDateFormatSymbols(java.text.DateFormatSymbols)" returnType="[ext]void" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.DecimalFormat" extends="java.text.NumberFormat" isGeneric="false" visibility="public">
        <Extends mangling="java.text.NumberFormat"/>
        <Fields>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.text.DecimalFormatSymbols)" returnType="[ext]void" visibility="public"/>
            <Method signature="format(double,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="format(long,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="parse(java.lang.String,java.text.ParsePosition)" returnType="java.lang.Number" visibility="public"/>
            <Method signature="getDecimalFormatSymbols()" returnType="java.text.DecimalFormatSymbols" visibility="public"/>
            <Method signature="setDecimalFormatSymbols(java.text.DecimalFormatSymbols)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPositivePrefix()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setPositivePrefix(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getNegativePrefix()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setNegativePrefix(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPositiveSuffix()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setPositiveSuffix(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getNegativeSuffix()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setNegativeSuffix(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMultiplier()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMultiplier(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getGroupingSize()" returnType="[ext]int" visibility="public"/>
            <Method signature="setGroupingSize(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="isDecimalSeparatorAlwaysShown()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setDecimalSeparatorAlwaysShown(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toPattern()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toLocalizedPattern()" returnType="java.lang.String" visibility="public"/>
            <Method signature="applyPattern(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="applyLocalizedPattern(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.NumberFormat" extends="java.text.Format" isGeneric="false" visibility="public">
        <Extends mangling="java.text.Format"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="INTEGER_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FRACTION_FIELD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" isFinal="true" visibility="public"/>
            <Method signature="parseObject(java.lang.String,java.text.ParsePosition)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="format(double)" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="format(long)" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="format(double,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" isAbstract="true" visibility="public"/>
            <Method signature="format(long,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" isAbstract="true" visibility="public"/>
            <Method signature="parse(java.lang.String,java.text.ParsePosition)" returnType="java.lang.Number" isAbstract="true" visibility="public"/>
            <Method signature="parse(java.lang.String)" returnType="java.lang.Number" visibility="public">
                <Throw mangling="java.text.ParseException"/>
            </Method>
            <Method signature="isParseIntegerOnly()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setParseIntegerOnly(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getInstance()" isStatic="true" returnType="java.text.NumberFormat" isFinal="true" visibility="public"/>
            <Method signature="getInstance(java.util.Locale)" isStatic="true" returnType="java.text.NumberFormat" visibility="public"/>
            <Method signature="getNumberInstance()" isStatic="true" returnType="java.text.NumberFormat" isFinal="true" visibility="public"/>
            <Method signature="getNumberInstance(java.util.Locale)" isStatic="true" returnType="java.text.NumberFormat" visibility="public"/>
            <Method signature="getCurrencyInstance()" isStatic="true" returnType="java.text.NumberFormat" isFinal="true" visibility="public"/>
            <Method signature="getCurrencyInstance(java.util.Locale)" isStatic="true" returnType="java.text.NumberFormat" visibility="public"/>
            <Method signature="getPercentInstance()" isStatic="true" returnType="java.text.NumberFormat" isFinal="true" visibility="public"/>
            <Method signature="getPercentInstance(java.util.Locale)" isStatic="true" returnType="java.text.NumberFormat" visibility="public"/>
            <Method signature="getScientificInstance()" isStatic="true" returnType="java.text.NumberFormat" isFinal="true"/>
            <Method signature="getScientificInstance(java.util.Locale)" isStatic="true" returnType="java.text.NumberFormat"/>
            <Method signature="getAvailableLocales()" isStatic="true" returnType="[ext]java.util.Locale[]" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="isGroupingUsed()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setGroupingUsed(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMaximumIntegerDigits()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMaximumIntegerDigits(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMinimumIntegerDigits()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMinimumIntegerDigits(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMaximumFractionDigits()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMaximumFractionDigits(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMinimumFractionDigits()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMinimumFractionDigits(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.Utility" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="ESCAPE" type="char" isStatic="true" isFinal="true"/>
            <Field name="ESCAPE_BYTE" type="byte" isStatic="true" isFinal="true"/>
            <Field name="HEX_DIGIT" type="char[]" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="arrayEquals(java.lang.Object[],java.lang.Object)" isStatic="true" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="arrayEquals(int[],java.lang.Object)" isStatic="true" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="arrayEquals(double[],java.lang.Object)" isStatic="true" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="arrayEquals(java.lang.Object,java.lang.Object)" isStatic="true" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="arrayRegionMatches(java.lang.Object[],int,java.lang.Object[],int,int)" isStatic="true" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="arrayRegionMatches(int[],int,int[],int,int)" isStatic="true" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="arrayRegionMatches(double[],int,double[],int,int)" isStatic="true" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="objectEquals(java.lang.Object,java.lang.Object)" isStatic="true" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="arrayToRLEString(short[])" isStatic="true" returnType="java.lang.String" isFinal="true"/>
            <Method signature="arrayToRLEString(byte[])" isStatic="true" returnType="java.lang.String" isFinal="true"/>
            <Method signature="RLEStringToShortArray(java.lang.String)" isStatic="true" returnType="[ext]short[]" isFinal="true"/>
            <Method signature="RLEStringToByteArray(java.lang.String)" isStatic="true" returnType="[ext]byte[]" isFinal="true"/>
            <Method signature="formatForSource(java.lang.String)" isStatic="true" returnType="java.lang.String" isFinal="true"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.ChoiceFormat" extends="java.text.NumberFormat" isGeneric="false" visibility="public">
        <Extends mangling="java.text.NumberFormat"/>
        <Fields>
            <Field name="SIGN" type="long" isStatic="true" isFinal="true"/>
            <Field name="EXPONENT" type="long" isStatic="true" isFinal="true"/>
            <Field name="POSITIVEINFINITY" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="applyPattern(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="toPattern()" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(double[],java.lang.String[])" returnType="[ext]void" visibility="public"/>
            <Method signature="setChoices(double[],java.lang.String[])" returnType="[ext]void" visibility="public"/>
            <Method signature="getLimits()" returnType="[ext]double[]" visibility="public"/>
            <Method signature="getFormats()" returnType="[ext]java.lang.Object[]" visibility="public"/>
            <Method signature="format(long,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="format(double,java.lang.StringBuffer,java.text.FieldPosition)" returnType="java.lang.StringBuffer" visibility="public"/>
            <Method signature="parse(java.lang.String,java.text.ParsePosition)" returnType="java.lang.Number" visibility="public"/>
            <Method signature="nextDouble(double)" isStatic="true" returnType="[ext]double" isFinal="true" visibility="public"/>
            <Method signature="previousDouble(double)" isStatic="true" returnType="[ext]double" isFinal="true" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="nextDouble(double,boolean)" isStatic="true" returnType="[ext]double" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.FieldPosition" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="field" type="int"/>
            <Field name="endIndex" type="int"/>
            <Field name="beginIndex" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getField()" returnType="[ext]int" visibility="public"/>
            <Method signature="getBeginIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="getEndIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="setBeginIndex(int)" returnType="[ext]void"/>
            <Method signature="setEndIndex(int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.ParsePosition" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="index" type="int"/>
        </Fields>
        <Methods>
            <Method signature="getIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="setIndex(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.DateFormatSymbols" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="eras" type="java.lang.String[]"/>
            <Field name="months" type="java.lang.String[]"/>
            <Field name="shortMonths" type="java.lang.String[]"/>
            <Field name="weekdays" type="java.lang.String[]"/>
            <Field name="shortWeekdays" type="java.lang.String[]"/>
            <Field name="ampms" type="java.lang.String[]"/>
            <Field name="zoneStrings" type="java.lang.String[][]"/>
            <Field name="patternChars" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="localPatternChars" type="java.lang.String"/>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
            <Field name="millisPerHour" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.util.Locale)" returnType="[ext]void" visibility="public"/>
            <Method signature="getEras()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="setEras(java.lang.String[])" returnType="[ext]void" visibility="public"/>
            <Method signature="getMonths()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="setMonths(java.lang.String[])" returnType="[ext]void" visibility="public"/>
            <Method signature="getShortMonths()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="setShortMonths(java.lang.String[])" returnType="[ext]void" visibility="public"/>
            <Method signature="getWeekdays()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="setWeekdays(java.lang.String[])" returnType="[ext]void" visibility="public"/>
            <Method signature="getShortWeekdays()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="setShortWeekdays(java.lang.String[])" returnType="[ext]void" visibility="public"/>
            <Method signature="getAmPmStrings()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="setAmPmStrings(java.lang.String[])" returnType="[ext]void" visibility="public"/>
            <Method signature="getZoneStrings()" returnType="[ext]java.lang.String[][]" visibility="public"/>
            <Method signature="setZoneStrings(java.lang.String[][])" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocalPatternChars()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setLocalPatternChars(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getZoneIndex(java.lang.String)" returnType="[ext]int" isFinal="true"/>
        </Methods>
    </Class>
    <Class mangling="java.text.DigitList" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="MAX_COUNT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DBL_DIG" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="decimalAt" type="int" visibility="public"/>
            <Field name="count" type="int" visibility="public"/>
            <Field name="digits" type="byte[]" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="isZero()" returnType="[ext]boolean"/>
            <Method signature="clear()" returnType="[ext]void" visibility="public"/>
            <Method signature="append(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDouble()" returnType="[ext]double" isFinal="true" visibility="public"/>
            <Method signature="getLong()" returnType="[ext]long" isFinal="true" visibility="public"/>
            <Method signature="fitsIntoLong(boolean)" returnType="[ext]boolean"/>
            <Method signature="set(double,int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="set(double,int,boolean)" returnType="[ext]void" isFinal="true"/>
            <Method signature="set(long)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="set(long,int)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.DecimalFormatSymbols" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.util.Locale)" returnType="[ext]void" visibility="public"/>
            <Method signature="getZeroDigit()" returnType="[ext]char" visibility="public"/>
            <Method signature="setZeroDigit(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="getGroupingSeparator()" returnType="[ext]char" visibility="public"/>
            <Method signature="setGroupingSeparator(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDecimalSeparator()" returnType="[ext]char" visibility="public"/>
            <Method signature="setDecimalSeparator(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPerMill()" returnType="[ext]char" visibility="public"/>
            <Method signature="setPerMill(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPercent()" returnType="[ext]char" visibility="public"/>
            <Method signature="setPercent(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDigit()" returnType="[ext]char" visibility="public"/>
            <Method signature="setDigit(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPatternSeparator()" returnType="[ext]char" visibility="public"/>
            <Method signature="setPatternSeparator(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="getInfinity()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setInfinity(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getNaN()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setNaN(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMinusSign()" returnType="[ext]char" visibility="public"/>
            <Method signature="setMinusSign(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="getExponentialSymbol()" returnType="[ext]char"/>
            <Method signature="setExponentialSymbol(char)" returnType="[ext]void"/>
            <Method signature="getCurrencySymbol()" returnType="java.lang.String"/>
            <Method signature="setCurrencySymbol(java.lang.String)" returnType="[ext]void"/>
            <Method signature="getInternationalCurrencySymbol()" returnType="java.lang.String"/>
            <Method signature="setInternationalCurrencySymbol(java.lang.String)" returnType="[ext]void"/>
            <Method signature="getMonetaryDecimalSeparator()" returnType="[ext]char"/>
            <Method signature="setMonetaryDecimalSeparator(char)" returnType="[ext]void"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.TextBoundaryData" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="ASCII_END_OF_TEXT" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_HORIZONTAL_TABULATION" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_LINEFEED" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_VERTICAL_TABULATION" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_FORM_FEED" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_CARRIAGE_RETURN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_SPACE" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_EXCLAMATION_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_QUOTATION_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_NUMBER_SIGN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_DOLLAR_SIGN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_PERCENT" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_AMPERSAND" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_APOSTROPHE" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_COMMA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_FULL_STOP" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_COLON" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_SEMICOLON" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_QUESTION_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_NONBREAKING_SPACE" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_CENT_SIGN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_POUND_SIGN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ASCII_YEN_SIGN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="LATIN1_SOFTHYPHEN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="LATIN1_DEGREE_SIGN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ARABIC_PERCENT_SIGN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="ARABIC_DECIMAL_SEPARATOR" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HANGUL_CHOSEONG_LOW" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HANGUL_CHOSEONG_HIGH" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HANGUL_JUNGSEONG_LOW" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HANGUL_JUNGSEONG_HIGH" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HANGUL_JONGSEONG_LOW" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HANGUL_JONGSEONG_HIGH" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="FIGURE_SPACE" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="NONBREAKING_HYPHEN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="PUNCTUATION_HYPHENATION_POINT" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="PUNCTUATION_LINE_SEPARATOR" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="PUNCTUATION_PARAGRAPH_SEPARATOR" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="PER_MILLE_SIGN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="PER_TEN_THOUSAND_SIGN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="PRIME" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="DOUBLE_PRIME" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="TRIPLE_PRIME" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="DEGREE_CELSIUS" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="DEGREE_FAHRENHEIT" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="PUNCTUATION_IDEOGRAPHIC_COMMA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="PUNCTUATION_IDEOGRAPHIC_FULL_STOP" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="IDEOGRAPHIC_ITERATION_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_SMALL_A" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_A" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_SMALL_I" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_I" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_SMALL_U" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_U" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_SMALL_E" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_E" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_SMALL_O" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_O" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_DI" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_SMALL_TU" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_TU" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_MO" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_SMALL_YA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_YA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_SMALL_YU" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_YU" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_SMALL_YO" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_YO" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_RO" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_SMALL_WA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_WA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_LETTER_VU" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="COMBINING_KATAKANA_HIRAGANA_VOICED_SOUND_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_SEMIVOICED_SOUND_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_ITERATION_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HIRAGANA_VOICED_ITERATION_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_A" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_A" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_I" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_I" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_U" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_U" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_E" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_E" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_O" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_O" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_DI" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_TU" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_TU" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_MO" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_YA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_YA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_YU" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_YU" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_YO" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_YO" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_RO" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_WA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_WA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_VU" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_KA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_SMALL_KE" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_VA" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_LETTER_VO" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_HIRAGANA_PROLONGED_SOUND_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_ITERATION_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="KATAKANA_VOICED_ITERATION_MARK" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="UNICODE_LOW_BOUND_HAN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="UNICODE_HIGH_BOUND_HAN" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HANGUL_SYL_LOW" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="HANGUL_SYL_HIGH" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="CJK_COMPATIBILITY_F900" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="CJK_COMPATIBILITY_FA2D" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="UNICODE_ZERO_WIDTH_NON_BREAKING_SPACE" type="char" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="END_OF_STRING" type="char" isStatic="true" isFinal="true" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="forward()" returnType="java.text.WordBreakTable" isAbstract="true" visibility="public"/>
            <Method signature="backward()" returnType="java.text.WordBreakTable" isAbstract="true" visibility="public"/>
            <Method signature="map()" returnType="java.text.UnicodeClassMapping" isAbstract="true" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.WordBreakTable" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="MARK_MASK" type="byte" isStatic="true" isFinal="true"/>
            <Field name="INDEX_MASK" type="byte" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="get(int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="isMarkState(int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isEndState(int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="initialState()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.SpecialMapping" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="startChar" type="char" visibility="public"/>
            <Field name="endChar" type="char" visibility="public"/>
            <Field name="newValue" type="int" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(char,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(char,char,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.UnicodeClassMapping" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int[],java.text.SpecialMapping[],boolean[],int[])" returnType="[ext]void" visibility="public"/>
            <Method signature="mappedChar(char)" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.text.CharacterIterator" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="DONE" type="char" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="first()" returnType="[ext]char" isAbstract="true" visibility="public"/>
            <Method signature="last()" returnType="[ext]char" isAbstract="true" visibility="public"/>
            <Method signature="current()" returnType="[ext]char" isAbstract="true" visibility="public"/>
            <Method signature="next()" returnType="[ext]char" isAbstract="true" visibility="public"/>
            <Method signature="previous()" returnType="[ext]char" isAbstract="true" visibility="public"/>
            <Method signature="setIndex(int)" returnType="[ext]char" isAbstract="true" visibility="public"/>
            <Method signature="getBeginIndex()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getEndIndex()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getIndex()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.text.Collator" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="PRIMARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SECONDARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TERTIARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="IDENTICAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NO_DECOMPOSITION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CANONICAL_DECOMPOSITION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FULL_DECOMPOSITION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LESS" type="int" isStatic="true" isFinal="true"/>
            <Field name="EQUAL" type="int" isStatic="true" isFinal="true"/>
            <Field name="GREATER" type="int" isStatic="true" isFinal="true"/>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="getInstance()" isStatic="true" returnType="java.text.Collator" visibility="public"/>
            <Method signature="getInstance(java.util.Locale)" isStatic="true" returnType="java.text.Collator" visibility="public"/>
            <Method signature="compare(java.lang.String,java.lang.String)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getCollationKey(java.lang.String)" returnType="java.text.CollationKey" isAbstract="true" visibility="public"/>
            <Method signature="equals(java.lang.String,java.lang.String)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getStrength()" returnType="[ext]int" visibility="public"/>
            <Method signature="setStrength(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDecomposition()" returnType="[ext]int" visibility="public"/>
            <Method signature="setDecomposition(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getAvailableLocales()" isStatic="true" returnType="[ext]java.util.Locale[]" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.text.RuleBasedCollator" extends="java.text.Collator" isGeneric="false" visibility="public">
        <Extends mangling="java.text.Collator"/>
        <Fields>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
            <Field name="CHARINDEX" type="int" isStatic="true"/>
            <Field name="EXPANDCHARINDEX" type="int" isStatic="true"/>
            <Field name="CONTRACTCHARINDEX" type="int" isStatic="true"/>
            <Field name="UNMAPPED" type="int" isStatic="true"/>
            <Field name="PRIMARYORDERMASK" type="int" isStatic="true" isFinal="true"/>
            <Field name="SECONDARYORDERMASK" type="int" isStatic="true" isFinal="true"/>
            <Field name="TERTIARYORDERMASK" type="int" isStatic="true" isFinal="true"/>
            <Field name="PRIMARYDIFFERENCEONLY" type="int" isStatic="true" isFinal="true"/>
            <Field name="SECONDARYDIFFERENCEONLY" type="int" isStatic="true" isFinal="true"/>
            <Field name="PRIMARYORDERSHIFT" type="int" isStatic="true"/>
            <Field name="SECONDARYORDERSHIFT" type="int" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.text.ParseException"/>
            </Method>
            <Method signature="getRules()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getCollationElementIterator(java.lang.String)" returnType="java.text.CollationElementIterator" visibility="public"/>
            <Method signature="compare(java.lang.String,java.lang.String)" returnType="[ext]int" visibility="public"/>
            <Method signature="getCollationKey(java.lang.String)" returnType="java.text.CollationKey" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="getContractValues(char)" returnType="java.util.Vector"/>
            <Method signature="getContractValues(int)" returnType="java.util.Vector"/>
            <Method signature="getExpandValueList(char)" returnType="[ext]int[]" isFinal="true"/>
            <Method signature="getExpandValueList(int)" returnType="[ext]int[]" isFinal="true"/>
            <Method signature="getUnicodeOrder(char)" returnType="[ext]int" isFinal="true"/>
        </Methods>
    </Class>
    <Class mangling="java.text.CollationRules" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="DEFAULTRULES" type="java.lang.String" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.CollationKey" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="compareTo(java.text.CollationKey)" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="getSourceString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toByteArray()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.CompactIntArray" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="UNICODECOUNT" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(short[],int[])" returnType="[ext]void" visibility="public"/>
            <Method signature="elementAt(char)" returnType="[ext]int" visibility="public"/>
            <Method signature="setElementAt(char,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setElementAt(char,char,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="compact()" returnType="[ext]void" visibility="public"/>
            <Method signature="getIndexArray()" returnType="[ext]short[]" visibility="public"/>
            <Method signature="getStringArray()" returnType="[ext]int[]" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="writeArrays()" returnType="[ext]void"/>
            <Method signature="printIndex(short,short)" returnType="[ext]void"/>
            <Method signature="printPlainArray(int,int,char[])" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.MergeCollation" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="patterns" type="java.util.Vector"/>
            <Field name="lastEntry" type="java.text.PatternEntry"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.text.ParseException"/>
            </Method>
            <Method signature="getPattern()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getPattern(boolean)" returnType="java.lang.String" visibility="public"/>
            <Method signature="emitPattern()" returnType="java.lang.String" visibility="public"/>
            <Method signature="emitPattern(boolean)" returnType="java.lang.String" visibility="public"/>
            <Method signature="setPattern(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.text.ParseException"/>
            </Method>
            <Method signature="addPattern(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.text.ParseException"/>
            </Method>
            <Method signature="getCount()" returnType="[ext]int" visibility="public"/>
            <Method signature="getItemAt(int)" returnType="java.text.PatternEntry" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.CollationElementIterator" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="NULLORDER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UNMAPPEDCHARVALUE" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.text.RuleBasedCollator)" returnType="[ext]void"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="next()" returnType="[ext]int" visibility="public"/>
            <Method signature="primaryOrder(int)" isStatic="true" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="secondaryOrder(int)" isStatic="true" returnType="[ext]short" isFinal="true" visibility="public"/>
            <Method signature="tertiaryOrder(int)" isStatic="true" returnType="[ext]short" isFinal="true" visibility="public"/>
            <Method signature="isIgnorable(int)" isStatic="true" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="strengthOrder(int)" returnType="[ext]int" isFinal="true"/>
            <Method signature="setOffset(int)" returnType="[ext]void" isFinal="true"/>
            <Method signature="getOffset()" returnType="[ext]int" isFinal="true"/>
            <Method signature="setText(java.lang.String)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.DecompositionIterator" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="NULLORDER" type="char" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BASE" type="byte" isStatic="true" isFinal="true"/>
            <Field name="canonicals" type="java.text.CompactByteArray" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setDecomposition(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setText(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="next()" returnType="[ext]char" visibility="public"/>
            <Method signature="previous()" returnType="[ext]char" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="setOffset(int)" returnType="[ext]void" isFinal="true"/>
            <Method signature="getOffset()" returnType="[ext]int" isFinal="true"/>
            <Method signature="getDecomposition()" returnType="[ext]int" visibility="public"/>
            <Method signature="decompose(char,int)" isStatic="true" returnType="java.lang.String"/>
            <Method signature="decompose(java.lang.StringBuffer,int)" isStatic="true" returnType="[ext]void"/>
            <Method signature="decompose(java.lang.String,int)" isStatic="true" returnType="java.lang.String"/>
            <Method signature="getMaximumDecomposition()" isStatic="true" returnType="[ext]int"/>
        </Methods>
    </Class>
    <Class mangling="java.text.PatternEntry" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="RESET" type="int" isStatic="true" isFinal="true"/>
            <Field name="UNSET" type="int" isStatic="true" isFinal="true"/>
            <Field name="strength" type="int"/>
            <Field name="chars" type="java.lang.String"/>
            <Field name="extension" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="appendQuotedExtension(java.lang.StringBuffer)" returnType="[ext]void" visibility="public"/>
            <Method signature="appendQuotedChars(java.lang.StringBuffer)" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getStrength()" returnType="[ext]int"/>
            <Method signature="getExtension()" returnType="java.lang.String"/>
            <Method signature="getChars()" returnType="java.lang.String"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
            <Method signature="+ctor(int,java.lang.StringBuffer,java.lang.StringBuffer)" returnType="[ext]void"/>
            <Method signature="addToBuffer(java.lang.StringBuffer,boolean,boolean,java.text.PatternEntry)" returnType="[ext]void"/>
            <Method signature="getNextEntry(java.lang.String,int)" returnType="[ext]int">
                <Throw mangling="java.text.ParseException"/>
            </Method>
            <Method signature="isSpecialChar(char)" isStatic="true" returnType="[ext]boolean"/>
            <Method signature="appendQuoted(java.lang.String,java.lang.StringBuffer)" isStatic="true" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.EntryPair" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="entryName" type="java.lang.String" visibility="public"/>
            <Field name="value" type="int" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.CompactShortArray" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="UNICODECOUNT" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(short)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(short[],short[])" returnType="[ext]void" visibility="public"/>
            <Method signature="elementAt(char)" returnType="[ext]short" visibility="public"/>
            <Method signature="setElementAt(char,short)" returnType="[ext]void" visibility="public"/>
            <Method signature="setElementAt(char,char,short)" returnType="[ext]void" visibility="public"/>
            <Method signature="compact()" returnType="[ext]void" visibility="public"/>
            <Method signature="getIndexArray()" returnType="[ext]short[]" visibility="public"/>
            <Method signature="getStringArray()" returnType="[ext]short[]" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="writeArrays()" returnType="[ext]void"/>
            <Method signature="printIndex(short,short)" returnType="[ext]void"/>
            <Method signature="printPlainArray(int,int,char[])" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.CompactByteArray" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="UNICODECOUNT" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(short[],byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="elementAt(char)" returnType="[ext]byte" visibility="public"/>
            <Method signature="setElementAt(char,byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="setElementAt(char,char,byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="compact()" returnType="[ext]void" visibility="public"/>
            <Method signature="getIndexArray()" returnType="[ext]short[]" visibility="public"/>
            <Method signature="getStringArray()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="writeArrays()" returnType="[ext]void"/>
            <Method signature="printIndex(short,short)" returnType="[ext]void"/>
            <Method signature="printPlainArray(int,int,char[])" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.CompactCharArray" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="UNICODECOUNT" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(short[],char[])" returnType="[ext]void" visibility="public"/>
            <Method signature="elementAt(char)" returnType="[ext]char" visibility="public"/>
            <Method signature="setElementAt(char,char)" returnType="[ext]void" visibility="public"/>
            <Method signature="setElementAt(char,char,char)" returnType="[ext]void" visibility="public"/>
            <Method signature="compact()" returnType="[ext]void" visibility="public"/>
            <Method signature="getIndexArray()" returnType="[ext]short[]" visibility="public"/>
            <Method signature="getStringArray()" returnType="[ext]char[]" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="writeArrays()" returnType="[ext]void" visibility="public"/>
            <Method signature="printIndex(short,short)" returnType="[ext]void" visibility="public"/>
            <Method signature="printPlainArray(int,int,char[])" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.CompactStringArray" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="UNICODECOUNT" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(short[],char[],java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="elementAt(char,java.lang.StringBuffer)" returnType="[ext]void" visibility="public"/>
            <Method signature="elementAt(char)" returnType="java.lang.String" visibility="public"/>
            <Method signature="setElementAt(char,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setElementAt(char,char,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="compact()" returnType="[ext]void" visibility="public"/>
            <Method signature="getIndexArray()" returnType="[ext]short[]" visibility="public"/>
            <Method signature="getStringArray()" returnType="[ext]char[]" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="writeArrays()" returnType="[ext]void"/>
            <Method signature="printIndex(char,short)" returnType="[ext]void"/>
            <Method signature="printPlainArray(int,int,char[])" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.text.SimpleTextBoundary" extends="java.text.BreakIterator" isGeneric="false" isFinal="true">
        <Extends mangling="java.text.BreakIterator"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.text.TextBoundaryData)" returnType="[ext]void" visibility="protected"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="getText()" returnType="java.text.CharacterIterator" visibility="public"/>
            <Method signature="setText(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setText(java.text.CharacterIterator)" returnType="[ext]void" visibility="public"/>
            <Method signature="first()" returnType="[ext]int" visibility="public"/>
            <Method signature="last()" returnType="[ext]int" visibility="public"/>
            <Method signature="next(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="previous()" returnType="[ext]int" visibility="public"/>
            <Method signature="next()" returnType="[ext]int" visibility="public"/>
            <Method signature="following(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="current()" returnType="[ext]int" visibility="public"/>
            <Method signature="mappedChar(char)" returnType="[ext]int" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.text.BreakIterator" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="DONE" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="first()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="last()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="next(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="next()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="previous()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="following(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="current()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getText()" returnType="java.text.CharacterIterator" isAbstract="true" visibility="public"/>
            <Method signature="setText(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setText(java.text.CharacterIterator)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getWordInstance()" isStatic="true" returnType="java.text.BreakIterator" visibility="public"/>
            <Method signature="getWordInstance(java.util.Locale)" isStatic="true" returnType="java.text.BreakIterator" visibility="public"/>
            <Method signature="getLineInstance()" isStatic="true" returnType="java.text.BreakIterator" visibility="public"/>
            <Method signature="getLineInstance(java.util.Locale)" isStatic="true" returnType="java.text.BreakIterator" visibility="public"/>
            <Method signature="getCharacterInstance()" isStatic="true" returnType="java.text.BreakIterator" visibility="public"/>
            <Method signature="getCharacterInstance(java.util.Locale)" isStatic="true" returnType="java.text.BreakIterator" visibility="public"/>
            <Method signature="getSentenceInstance()" isStatic="true" returnType="java.text.BreakIterator" visibility="public"/>
            <Method signature="getSentenceInstance(java.util.Locale)" isStatic="true" returnType="java.text.BreakIterator" visibility="public"/>
            <Method signature="getAvailableLocales()" isStatic="true" returnType="[ext]java.util.Locale[]" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.StringCharacterIterator" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.text.CharacterIterator"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="first()" returnType="[ext]char" visibility="public"/>
            <Method signature="last()" returnType="[ext]char" visibility="public"/>
            <Method signature="setIndex(int)" returnType="[ext]char" visibility="public"/>
            <Method signature="current()" returnType="[ext]char" visibility="public"/>
            <Method signature="next()" returnType="[ext]char" visibility="public"/>
            <Method signature="previous()" returnType="[ext]char" visibility="public"/>
            <Method signature="getBeginIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="getEndIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="getIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.math.BigInteger" extends="java.lang.Number" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Number"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="+ctor(int,byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="+ctor(int,java.util.Random)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="+ctor(int,int,java.util.Random)" returnType="[ext]void" visibility="public"/>
            <Method signature="valueOf(long)" isStatic="true" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="add(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
            </Method>
            <Method signature="subtract(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="multiply(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="divide(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
            </Method>
            <Method signature="remainder(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
            </Method>
            <Method signature="divideAndRemainder(java.math.BigInteger)" returnType="[ext]java.math.BigInteger[]" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
            </Method>
            <Method signature="pow(int)" returnType="java.math.BigInteger" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
            </Method>
            <Method signature="gcd(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="abs()" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="negate()" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="signum()" returnType="[ext]int" visibility="public"/>
            <Method signature="mod(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="modPow(java.math.BigInteger,java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="modInverse(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
            </Method>
            <Method signature="shiftLeft(int)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="shiftRight(int)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="and(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="or(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="xor(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="not()" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="andNot(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="testBit(int)" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
            </Method>
            <Method signature="setBit(int)" returnType="java.math.BigInteger" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
            </Method>
            <Method signature="clearBit(int)" returnType="java.math.BigInteger" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
            </Method>
            <Method signature="flipBit(int)" returnType="java.math.BigInteger" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
            </Method>
            <Method signature="getLowestSetBit()" returnType="[ext]int" visibility="public"/>
            <Method signature="bitLength()" returnType="[ext]int" visibility="public"/>
            <Method signature="bitCount()" returnType="[ext]int" visibility="public"/>
            <Method signature="isProbablePrime(int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="compareTo(java.math.BigInteger)" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="min(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="max(java.math.BigInteger)" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toByteArray()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="intValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="longValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="floatValue()" returnType="[ext]float" visibility="public"/>
            <Method signature="doubleValue()" returnType="[ext]double" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.math.BigDecimal" extends="java.lang.Number" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Number"/>
        <Fields>
            <Field name="ROUND_UP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ROUND_DOWN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ROUND_CEILING" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ROUND_FLOOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ROUND_HALF_UP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ROUND_HALF_DOWN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ROUND_HALF_EVEN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ROUND_UNNECESSARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="+ctor(double)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="+ctor(java.math.BigInteger)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.math.BigInteger,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="valueOf(long,int)" isStatic="true" returnType="java.math.BigDecimal" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="valueOf(long)" isStatic="true" returnType="java.math.BigDecimal" visibility="public"/>
            <Method signature="add(java.math.BigDecimal)" returnType="java.math.BigDecimal" visibility="public"/>
            <Method signature="subtract(java.math.BigDecimal)" returnType="java.math.BigDecimal" visibility="public"/>
            <Method signature="multiply(java.math.BigDecimal)" returnType="java.math.BigDecimal" visibility="public"/>
            <Method signature="divide(java.math.BigDecimal,int,int)" returnType="java.math.BigDecimal" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="divide(java.math.BigDecimal,int)" returnType="java.math.BigDecimal" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="abs()" returnType="java.math.BigDecimal" visibility="public"/>
            <Method signature="negate()" returnType="java.math.BigDecimal" visibility="public"/>
            <Method signature="signum()" returnType="[ext]int" visibility="public"/>
            <Method signature="scale()" returnType="[ext]int" visibility="public"/>
            <Method signature="setScale(int,int)" returnType="java.math.BigDecimal" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="setScale(int)" returnType="java.math.BigDecimal" visibility="public">
                <Throw mangling="java.lang.ArithmeticException"/>
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="movePointLeft(int)" returnType="java.math.BigDecimal" visibility="public"/>
            <Method signature="movePointRight(int)" returnType="java.math.BigDecimal" visibility="public"/>
            <Method signature="compareTo(java.math.BigDecimal)" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="min(java.math.BigDecimal)" returnType="java.math.BigDecimal" visibility="public"/>
            <Method signature="max(java.math.BigDecimal)" returnType="java.math.BigDecimal" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toBigInteger()" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="intValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="longValue()" returnType="[ext]long" visibility="public"/>
            <Method signature="floatValue()" returnType="[ext]float" visibility="public"/>
            <Method signature="doubleValue()" returnType="[ext]double" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.URL" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="handler" type="java.net.URLStreamHandler"/>
            <Field name="factory" type="java.net.URLStreamHandlerFactory" isStatic="true"/>
            <Field name="handlers" type="java.util.Hashtable" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String,int,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
            </Method>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
            </Method>
            <Method signature="+ctor(java.net.URL,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
            </Method>
            <Method signature="set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="getProtocol()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHost()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getFile()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getRef()" returnType="java.lang.String" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="hostsEqual(java.lang.String,java.lang.String)" returnType="[ext]boolean"/>
            <Method signature="sameFile(java.net.URL)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toExternalForm()" returnType="java.lang.String" visibility="public"/>
            <Method signature="openConnection()" returnType="java.net.URLConnection" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="openStream()" returnType="java.io.InputStream" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getContent()" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getURLStreamHandler(java.lang.String)" isStatic="true" returnType="java.net.URLStreamHandler"/>
        </Methods>
    </Class>
    <Class mangling="java.net.MalformedURLException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.InetAddress" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="hostName" type="java.lang.String"/>
            <Field name="address" type="int"/>
            <Field name="family" type="int"/>
            <Field name="addressCache" type="java.util.Hashtable" isStatic="true"/>
            <Field name="unknownAddress" type="java.net.InetAddress" isStatic="true"/>
            <Field name="anyLocalAddress" type="java.net.InetAddress" isStatic="true"/>
            <Field name="localHost" type="java.net.InetAddress" isStatic="true"/>
            <Field name="unknown_array" type="java.net.InetAddress[]" isStatic="true"/>
            <Field name="impl" type="java.net.InetAddressImpl" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
            <Method signature="+ctor(java.lang.String,byte[])" returnType="[ext]void"/>
            <Method signature="isMulticastAddress()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getHostName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getAddress()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="getHostAddress()" returnType="java.lang.String" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getByName(java.lang.String)" isStatic="true" returnType="java.net.InetAddress" visibility="public">
                <Throw mangling="java.net.UnknownHostException"/>
            </Method>
            <Method signature="getAllByName(java.lang.String)" isStatic="true" returnType="[ext]java.net.InetAddress[]" visibility="public">
                <Throw mangling="java.net.UnknownHostException"/>
            </Method>
            <Method signature="getLocalHost()" isStatic="true" returnType="java.net.InetAddress" visibility="public">
                <Throw mangling="java.net.UnknownHostException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.net.InetAddressImpl" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getLocalHostName()" returnType="java.lang.String">
                <Throw mangling="java.net.UnknownHostException"/>
            </Method>
            <Method signature="makeAnyLocalAddress(java.net.InetAddress)" returnType="[ext]void"/>
            <Method signature="lookupAllHostAddr(java.lang.String)" returnType="[ext]byte[][]">
                <Throw mangling="java.net.UnknownHostException"/>
            </Method>
            <Method signature="getHostByAddr(int)" returnType="java.lang.String">
                <Throw mangling="java.net.UnknownHostException"/>
            </Method>
            <Method signature="getInetFamily()" returnType="[ext]int"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.net.UnknownHostException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.URLStreamHandler" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="parseURL(java.net.URL,java.lang.String,int,int)" returnType="[ext]void" visibility="protected"/>
            <Method signature="toExternalForm(java.net.URL)" returnType="java.lang.String" visibility="protected"/>
            <Method signature="setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.net.URLStreamHandlerFactory" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="createURLStreamHandler(java.lang.String)" returnType="java.net.URLStreamHandler" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.net.URLConnection" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="url" type="java.net.URL" visibility="protected"/>
            <Field name="doInput" type="boolean" visibility="protected"/>
            <Field name="doOutput" type="boolean" visibility="protected"/>
            <Field name="allowUserInteraction" type="boolean" visibility="protected"/>
            <Field name="useCaches" type="boolean" visibility="protected"/>
            <Field name="ifModifiedSince" type="long" visibility="protected"/>
            <Field name="connected" type="boolean" visibility="protected"/>
            <Field name="factory" type="java.net.ContentHandlerFactory" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="getFileNameMap()" isStatic="true" returnType="java.net.FileNameMap" visibility="public"/>
            <Method signature="setFileNameMap(java.net.FileNameMap)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="connect()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getURL()" returnType="java.net.URL" visibility="public"/>
            <Method signature="getContentLength()" returnType="[ext]int" visibility="public"/>
            <Method signature="getContentType()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getContentEncoding()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getExpiration()" returnType="[ext]long" visibility="public"/>
            <Method signature="getDate()" returnType="[ext]long" visibility="public"/>
            <Method signature="getLastModified()" returnType="[ext]long" visibility="public"/>
            <Method signature="getHeaderField(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHeaderFieldInt(java.lang.String,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="getHeaderFieldDate(java.lang.String,long)" returnType="[ext]long" visibility="public"/>
            <Method signature="getHeaderFieldKey(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHeaderField(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getContent()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setDoInput(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDoInput()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setDoOutput(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDoOutput()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setAllowUserInteraction(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getAllowUserInteraction()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setDefaultAllowUserInteraction(boolean)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getDefaultAllowUserInteraction()" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setUseCaches(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getUseCaches()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setIfModifiedSince(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="getIfModifiedSince()" returnType="[ext]long" visibility="public"/>
            <Method signature="getDefaultUseCaches()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setDefaultUseCaches(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setRequestProperty(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getRequestProperty(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="setDefaultRequestProperty(java.lang.String,java.lang.String)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getDefaultRequestProperty(java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="setContentHandlerFactory(java.net.ContentHandlerFactory)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getContentHandler()" returnType="java.net.ContentHandler">
                <Throw mangling="java.net.UnknownServiceException"/>
            </Method>
            <Method signature="guessContentTypeFromName(java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="protected"/>
            <Method signature="guessContentTypeFromStream(java.io.InputStream)" isStatic="true" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.net.UnknownContentHandler" extends="java.net.ContentHandler" isGeneric="false">
        <Extends mangling="java.net.ContentHandler"/>
        <Methods>
            <Method signature="getContent(java.net.URLConnection)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.net.UnknownServiceException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.net.FileNameMap" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getContentTypeFor(java.lang.String)" returnType="java.lang.String" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.net.ContentHandlerFactory" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="createContentHandler(java.lang.String)" returnType="java.net.ContentHandler" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.net.ContentHandler" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getContent(java.net.URLConnection)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.net.SocketOptions" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="TCP_NODELAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SO_BINDADDR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SO_REUSEADDR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="IP_MULTICAST_IF" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SO_LINGER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SO_TIMEOUT" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="setOption(int,java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getOption(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.net.SocketException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.ServerSocket" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(int,int,java.net.InetAddress)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInetAddress()" returnType="java.net.InetAddress" visibility="public"/>
            <Method signature="getLocalPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="accept()" returnType="java.net.Socket" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="implAccept(java.net.Socket)" returnType="[ext]void" isFinal="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setSoTimeout(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getSoTimeout()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setSocketFactory(java.net.SocketImplFactory)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.net.SocketImpl" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.net.SocketOptions"/>
        <Fields>
            <Field name="fd" type="java.io.FileDescriptor" visibility="protected"/>
            <Field name="address" type="java.net.InetAddress" visibility="protected"/>
            <Field name="port" type="int" visibility="protected"/>
            <Field name="localport" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="create(boolean)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="connect(java.lang.String,int)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="connect(java.net.InetAddress,int)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="bind(java.net.InetAddress,int)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="listen(int)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="accept(java.net.SocketImpl)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getFileDescriptor()" returnType="java.io.FileDescriptor" visibility="protected"/>
            <Method signature="getInetAddress()" returnType="java.net.InetAddress" visibility="protected"/>
            <Method signature="getPort()" returnType="[ext]int" visibility="protected"/>
            <Method signature="getLocalPort()" returnType="[ext]int" visibility="protected"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="setOption(int,java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getOption(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
        </Methods>
    </Class>
    <Interface mangling="java.net.SocketImplFactory" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="createSocketImpl()" returnType="java.net.SocketImpl" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.net.PlainSocketImpl" extends="java.net.SocketImpl" isGeneric="false">
        <Extends mangling="java.net.SocketImpl"/>
        <Fields>
            <Field name="timeout" type="int"/>
            <Field name="socksServerProp" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="socksPortProp" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="socksDefaultPortStr" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="create(boolean)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="connect(java.lang.String,int)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.net.UnknownHostException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="connect(java.net.InetAddress,int)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setOption(int,java.lang.Object)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getOption(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="bind(java.net.InetAddress,int)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="listen(int)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="accept(java.net.SocketImpl)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.net.Socket" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="impl" type="java.net.SocketImpl"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.net.SocketImpl)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.UnknownHostException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.net.InetAddress,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,int,java.net.InetAddress,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.net.InetAddress,int,java.net.InetAddress,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,int,boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.net.InetAddress,int,boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInetAddress()" returnType="java.net.InetAddress" visibility="public"/>
            <Method signature="getLocalAddress()" returnType="java.net.InetAddress" visibility="public"/>
            <Method signature="getPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="getLocalPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setTcpNoDelay(boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getTcpNoDelay()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="setSoLinger(boolean,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getSoLinger()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="setSoTimeout(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getSoTimeout()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setSocketImplFactory(java.net.SocketImplFactory)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.net.ProtocolException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.SocketInputStream" extends="java.io.FileInputStream" isGeneric="false">
        <Extends mangling="java.io.FileInputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.net.SocketImpl)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[])" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.net.SocketOutputStream" extends="java.io.FileOutputStream" isGeneric="false">
        <Extends mangling="java.io.FileOutputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.net.SocketImpl)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.net.DatagramPacket" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="buf" type="byte[]"/>
            <Field name="length" type="int"/>
            <Field name="address" type="java.net.InetAddress"/>
            <Field name="port" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(byte[],int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[],int,java.net.InetAddress,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getAddress()" returnType="java.net.InetAddress" visibility="public"/>
            <Method signature="getPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="getData()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="getLength()" returnType="[ext]int" visibility="public"/>
            <Method signature="setAddress(java.net.InetAddress)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPort(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setData(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="setLength(int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.DatagramSocket" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="impl" type="java.net.DatagramSocketImpl"/>
            <Field name="implClass" type="java.lang.Class" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="+ctor(int,java.net.InetAddress)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="create(int,java.net.InetAddress)" returnType="[ext]void">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="send(java.net.DatagramPacket)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="receive(java.net.DatagramPacket)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getLocalAddress()" returnType="java.net.InetAddress" visibility="public"/>
            <Method signature="getLocalPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="setSoTimeout(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getSoTimeout()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.DatagramSocketImpl" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.net.SocketOptions"/>
        <Fields>
            <Field name="localPort" type="int" visibility="protected"/>
            <Field name="fd" type="java.io.FileDescriptor" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="create()" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="bind(int,java.net.InetAddress)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="send(java.net.DatagramPacket)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="peek(java.net.InetAddress)" returnType="[ext]int" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="receive(java.net.DatagramPacket)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setTTL(byte)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getTTL()" returnType="[ext]byte" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="join(java.net.InetAddress)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="leave(java.net.InetAddress)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" isAbstract="true" visibility="protected"/>
            <Method signature="getLocalPort()" returnType="[ext]int" visibility="protected"/>
            <Method signature="getFileDescriptor()" returnType="java.io.FileDescriptor" visibility="protected"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="setOption(int,java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getOption(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.net.PlainDatagramSocketImpl" extends="java.net.DatagramSocketImpl" isGeneric="false">
        <Extends mangling="java.net.DatagramSocketImpl"/>
        <Fields/>
        <Methods>
            <Method signature="create()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="bind(int,java.net.InetAddress)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="send(java.net.DatagramPacket)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="peek(java.net.InetAddress)" returnType="[ext]int" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="receive(java.net.DatagramPacket)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setTTL(byte)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getTTL()" returnType="[ext]byte" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="join(java.net.InetAddress)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="leave(java.net.InetAddress)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="protected"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected"/>
            <Method signature="setOption(int,java.lang.Object)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getOption(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.net.MulticastSocket" extends="java.net.DatagramSocket" isGeneric="false" visibility="public">
        <Extends mangling="java.net.DatagramSocket"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="create(int,java.net.InetAddress)" returnType="[ext]void">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="setTTL(byte)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getTTL()" returnType="[ext]byte" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="joinGroup(java.net.InetAddress)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="leaveGroup(java.net.InetAddress)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setInterface(java.net.InetAddress)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getInterface()" returnType="java.net.InetAddress" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="send(java.net.DatagramPacket,byte)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.net.BindException" extends="java.net.SocketException" isGeneric="false" visibility="public">
        <Extends mangling="java.net.SocketException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.ConnectException" extends="java.net.SocketException" isGeneric="false" visibility="public">
        <Extends mangling="java.net.SocketException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.URLEncoder" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="dontNeedEncoding" type="java.util.BitSet" isStatic="true"/>
            <Field name="caseDiff" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="encode(java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.NoRouteToHostException" extends="java.net.SocketException" isGeneric="false" visibility="public">
        <Extends mangling="java.net.SocketException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.net.HttpURLConnection" extends="java.net.URLConnection" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLConnection"/>
        <Fields>
            <Field name="method" type="java.lang.String" visibility="protected"/>
            <Field name="responseCode" type="int" visibility="protected"/>
            <Field name="responseMessage" type="java.lang.String" visibility="protected"/>
            <Field name="HTTP_OK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_CREATED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_ACCEPTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_NOT_AUTHORITATIVE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_NO_CONTENT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_RESET" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_PARTIAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_MULT_CHOICE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_MOVED_PERM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_MOVED_TEMP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_SEE_OTHER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_NOT_MODIFIED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_USE_PROXY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_BAD_REQUEST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_UNAUTHORIZED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_PAYMENT_REQUIRED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_FORBIDDEN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_NOT_FOUND" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_BAD_METHOD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_NOT_ACCEPTABLE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_PROXY_AUTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_CLIENT_TIMEOUT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_CONFLICT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_GONE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_LENGTH_REQUIRED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_PRECON_FAILED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_ENTITY_TOO_LARGE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_REQ_TOO_LONG" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_UNSUPPORTED_TYPE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_SERVER_ERROR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_INTERNAL_ERROR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_BAD_GATEWAY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_UNAVAILABLE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_GATEWAY_TIMEOUT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HTTP_VERSION" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="protected"/>
            <Method signature="setFollowRedirects(boolean)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getFollowRedirects()" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setRequestMethod(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.ProtocolException"/>
            </Method>
            <Method signature="getRequestMethod()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getResponseCode()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getResponseMessage()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="disconnect()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="usingProxy()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.MessageDigest" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getInstance(java.lang.String)" isStatic="true" returnType="java.security.MessageDigest" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="getInstance(java.lang.String,java.lang.String)" isStatic="true" returnType="java.security.MessageDigest" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.NoSuchProviderException"/>
            </Method>
            <Method signature="update(byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="update(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="update(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="digest()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="digest(byte[])" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="isEqual(byte[],byte[])" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="getAlgorithm()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="engineUpdate(byte)" returnType="[ext]void" isAbstract="true" visibility="protected"/>
            <Method signature="engineUpdate(byte[],int,int)" returnType="[ext]void" isAbstract="true" visibility="protected"/>
            <Method signature="engineDigest()" returnType="[ext]byte[]" isAbstract="true" visibility="protected"/>
            <Method signature="engineReset()" returnType="[ext]void" isAbstract="true" visibility="protected"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.CloneNotSupportedException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.security.NoSuchAlgorithmException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.NoSuchProviderException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.DigestOutputStream" extends="java.io.FilterOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterOutputStream"/>
        <Fields>
            <Field name="digest" type="java.security.MessageDigest" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream,java.security.MessageDigest)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMessageDigest()" returnType="java.security.MessageDigest" visibility="public"/>
            <Method signature="setMessageDigest(java.security.MessageDigest)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="on(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.Security" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="debug" type="boolean" isStatic="true"/>
            <Field name="error" type="boolean" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="securityPropFile(java.lang.String)" isStatic="true" returnType="java.io.File"/>
            <Method signature="getProviderProperty(java.lang.String)" isStatic="true" returnType="java.lang.String"/>
            <Method signature="getStandardName(java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String"/>
            <Method signature="getAlgorithmProperty(java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="getPublicKeyClassName(java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String"/>
            <Method signature="getPrivateKeyClassName(java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String"/>
            <Method signature="getEngineClassName(java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="insertProviderAt(java.security.Provider,int)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="addProvider(java.security.Provider)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="removeProvider(java.lang.String)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getProviders()" isStatic="true" returnType="[ext]java.security.Provider[]" visibility="public"/>
            <Method signature="getProvider(java.lang.String)" isStatic="true" returnType="java.security.Provider" visibility="public"/>
            <Method signature="getImpl(java.lang.String,java.lang.String,java.lang.String)" isStatic="true" returnType="[ext]void">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.NoSuchProviderException"/>
            </Method>
            <Method signature="getProperty(java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="setProperty(java.lang.String,java.lang.String)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="error(java.lang.String)" isStatic="true" returnType="[ext]void"/>
            <Method signature="error(java.lang.String,java.lang.Throwable)" isStatic="true" returnType="[ext]void"/>
            <Method signature="debug(java.lang.String)" isStatic="true" returnType="[ext]void"/>
            <Method signature="debug(java.lang.String,java.lang.Throwable)" isStatic="true" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.security.Provider" extends="java.util.Properties" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Properties"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,double,java.lang.String)" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getVersion()" returnType="[ext]double" visibility="public"/>
            <Method signature="getInfo()" returnType="java.lang.String" visibility="public"/>
            <Method signature="loadProvider(java.lang.String)" isStatic="true" returnType="java.security.Provider"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.security.Certificate" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getGuarantor()" returnType="java.security.Principal" isAbstract="true" visibility="public"/>
            <Method signature="getPrincipal()" returnType="java.security.Principal" isAbstract="true" visibility="public"/>
            <Method signature="getPublicKey()" returnType="java.security.PublicKey" isAbstract="true" visibility="public"/>
            <Method signature="encode(java.io.OutputStream)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.security.KeyException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="decode(java.io.InputStream)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.security.KeyException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getFormat()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="toString(boolean)" returnType="java.lang.String" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.security.KeyException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.security.Principal" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.security.PublicKey" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.Key"/>
    </Interface>
    <Interface mangling="java.security.Key" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Methods>
            <Method signature="getAlgorithm()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="getFormat()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="getEncoded()" returnType="[ext]byte[]" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.security.DigestException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.DigestInputStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="digest" type="java.security.MessageDigest" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,java.security.MessageDigest)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMessageDigest()" returnType="java.security.MessageDigest" visibility="public"/>
            <Method signature="setMessageDigest(java.security.MessageDigest)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="on(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.Identity" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.Principal"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="info" type="java.lang.String"/>
            <Field name="scope" type="java.security.IdentityScope"/>
            <Field name="certificates" type="java.util.Vector"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.lang.String,java.security.IdentityScope)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="getScope()" returnType="java.security.IdentityScope" isFinal="true" visibility="public"/>
            <Method signature="getPublicKey()" returnType="java.security.PublicKey" visibility="public"/>
            <Method signature="setPublicKey(java.security.PublicKey)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="setInfo(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getInfo()" returnType="java.lang.String" visibility="public"/>
            <Method signature="addCertificate(java.security.Certificate)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="removeCertificate(java.security.Certificate)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="certificates()" returnType="[ext]java.security.Certificate[]" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="identityEquals(java.security.Identity)" returnType="[ext]boolean" visibility="protected"/>
            <Method signature="fullName()" returnType="java.lang.String"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString(boolean)" returnType="java.lang.String" visibility="public"/>
            <Method signature="printKeys()" returnType="java.lang.String"/>
            <Method signature="printCertificates()" returnType="java.lang.String"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="check(java.lang.String)" returnType="[ext]void"/>
            <Method signature="staticCheck(java.lang.String)" isStatic="true" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.security.KeyManagementException" extends="java.security.KeyException" isGeneric="false" visibility="public">
        <Extends mangling="java.security.KeyException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.IdentityScope" extends="java.security.Identity" isGeneric="false" visibility="public">
        <Extends mangling="java.security.Identity"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.security.IdentityScope)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="getSystemScope()" isStatic="true" returnType="java.security.IdentityScope" visibility="public"/>
            <Method signature="setSystemScope(java.security.IdentityScope)" isStatic="true" returnType="[ext]void" visibility="protected"/>
            <Method signature="size()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getIdentity(java.lang.String)" returnType="java.security.Identity" isAbstract="true" visibility="public"/>
            <Method signature="getIdentity(java.security.Principal)" returnType="java.security.Identity" visibility="public"/>
            <Method signature="getIdentity(java.security.PublicKey)" returnType="java.security.Identity" isAbstract="true" visibility="public"/>
            <Method signature="addIdentity(java.security.Identity)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="removeIdentity(java.security.Identity)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="identities()" returnType="java.util.Enumeration" isAbstract="true" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.security.acl.Acl" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.acl.Owner"/>
        <Methods>
            <Method signature="setName(java.security.Principal,java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.security.acl.NotOwnerException"/>
            </Method>
            <Method signature="getName()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="addEntry(java.security.Principal,java.security.acl.AclEntry)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.security.acl.NotOwnerException"/>
            </Method>
            <Method signature="removeEntry(java.security.Principal,java.security.acl.AclEntry)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.security.acl.NotOwnerException"/>
            </Method>
            <Method signature="getPermissions(java.security.Principal)" returnType="java.util.Enumeration" isAbstract="true" visibility="public"/>
            <Method signature="entries()" returnType="java.util.Enumeration" isAbstract="true" visibility="public"/>
            <Method signature="checkPermission(java.security.Principal,java.security.acl.Permission)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.security.acl.Owner" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="addOwner(java.security.Principal,java.security.Principal)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.security.acl.NotOwnerException"/>
            </Method>
            <Method signature="deleteOwner(java.security.Principal,java.security.Principal)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.security.acl.NotOwnerException"/>
                <Throw mangling="java.security.acl.LastOwnerException"/>
            </Method>
            <Method signature="isOwner(java.security.Principal)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.security.acl.NotOwnerException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.acl.LastOwnerException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.security.acl.AclEntry" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Methods>
            <Method signature="setPrincipal(java.security.Principal)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="getPrincipal()" returnType="java.security.Principal" isAbstract="true" visibility="public"/>
            <Method signature="setNegativePermissions()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="isNegative()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="addPermission(java.security.acl.Permission)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="removePermission(java.security.acl.Permission)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="checkPermission(java.security.acl.Permission)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="permissions()" returnType="java.util.Enumeration" isAbstract="true" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.security.acl.Permission" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.security.acl.AclNotFoundException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.security.acl.Group" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.Principal"/>
        <Methods>
            <Method signature="addMember(java.security.Principal)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="removeMember(java.security.Principal)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="isMember(java.security.Principal)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="members()" returnType="java.util.Enumeration" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.security.InvalidKeyException" extends="java.security.KeyException" isGeneric="false" visibility="public">
        <Extends mangling="java.security.KeyException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.InvalidParameterException" extends="java.lang.IllegalArgumentException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IllegalArgumentException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.KeyPairGenerator" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getAlgorithm()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getInstance(java.lang.String)" isStatic="true" returnType="java.security.KeyPairGenerator" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="getInstance(java.lang.String,java.lang.String)" isStatic="true" returnType="java.security.KeyPairGenerator" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.NoSuchProviderException"/>
            </Method>
            <Method signature="initialize(int,java.security.SecureRandom)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="initialize(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="generateKeyPair()" returnType="java.security.KeyPair" isAbstract="true" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.SecureRandom" extends="java.util.Random" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Random"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="setSeed(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="setSeed(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="nextBytes(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="next(int)" returnType="[ext]int" isFinal="true" visibility="protected"/>
            <Method signature="getSeed(int)" isStatic="true" returnType="[ext]byte[]" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.KeyPair" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.security.PublicKey,java.security.PrivateKey)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPublic()" returnType="java.security.PublicKey" visibility="public"/>
            <Method signature="getPrivate()" returnType="java.security.PrivateKey" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.SeedGenerator" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields>
            <Field name="seedGroup" type="java.lang.ThreadGroup"/>
        </Fields>
        <Methods>
            <Method signature="run()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getByte()" isStatic="true" returnType="[ext]byte" visibility="public"/>
            <Method signature="getSystemEntropy()" isStatic="true" returnType="[ext]byte[]"/>
        </Methods>
    </Class>
    <Class mangling="java.security.SeedGenerator$BogusThread" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields/>
        <Methods>
            <Method signature="run()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="+ctor(java.security.SeedGenerator)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Interface mangling="java.security.PrivateKey" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.Key"/>
    </Interface>
    <Class mangling="java.security.ProviderException" extends="java.lang.RuntimeException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.RuntimeException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.Signature" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="UNINITIALIZED" type="int" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="SIGN" type="int" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="VERIFY" type="int" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="state" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getInstance(java.lang.String)" isStatic="true" returnType="java.security.Signature" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="getInstance(java.lang.String,java.lang.String)" isStatic="true" returnType="java.security.Signature" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.NoSuchProviderException"/>
            </Method>
            <Method signature="initVerify(java.security.PublicKey)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="initSign(java.security.PrivateKey)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="sign()" returnType="[ext]byte[]" isFinal="true" visibility="public">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="verify(byte[])" returnType="[ext]boolean" isFinal="true" visibility="public">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="update(byte)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="update(byte[])" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="update(byte[],int,int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="getAlgorithm()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setParameter(java.lang.String,java.lang.Object)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
            <Method signature="getParameter(java.lang.String)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
            <Method signature="engineInitVerify(java.security.PublicKey)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="engineInitSign(java.security.PrivateKey)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="engineUpdate(byte)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="engineUpdate(byte[],int,int)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="engineSign()" returnType="[ext]byte[]" isAbstract="true" visibility="protected">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="engineVerify(byte[])" returnType="[ext]boolean" isAbstract="true" visibility="protected">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="engineSetParameter(java.lang.String,java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
            <Method signature="engineGetParameter(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
            <Method signature="clone()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.CloneNotSupportedException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.security.SignatureException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.security.Signer" extends="java.security.Identity" isGeneric="false" visibility="public">
        <Extends mangling="java.security.Identity"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.security.IdentityScope)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="getPrivateKey()" returnType="java.security.PrivateKey" visibility="public"/>
            <Method signature="setKeyPair(java.security.KeyPair)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.security.InvalidParameterException"/>
                <Throw mangling="java.security.KeyException"/>
            </Method>
            <Method signature="printKeys()" returnType="java.lang.String"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.security.interfaces.DSAKey" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getParams()" returnType="java.security.interfaces.DSAParams" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.security.interfaces.DSAParams" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getP()" returnType="java.math.BigInteger" isAbstract="true" visibility="public"/>
            <Method signature="getQ()" returnType="java.math.BigInteger" isAbstract="true" visibility="public"/>
            <Method signature="getG()" returnType="java.math.BigInteger" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.security.interfaces.DSAKeyPairGenerator" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="initialize(java.security.interfaces.DSAParams,java.security.SecureRandom)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
            <Method signature="initialize(int,boolean,java.security.SecureRandom)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
        </Methods>
    </Interface>
    <Interface mangling="java.security.interfaces.DSAPrivateKey" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.interfaces.DSAKey"/>
        <Implements mangling="java.security.PrivateKey"/>
        <Methods>
            <Method signature="getX()" returnType="java.math.BigInteger" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.security.interfaces.DSAPublicKey" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.interfaces.DSAKey"/>
        <Implements mangling="java.security.PublicKey"/>
        <Methods>
            <Method signature="getY()" returnType="java.math.BigInteger" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.Toolkit" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="createButton(java.awt.Button)" returnType="java.awt.peer.ButtonPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createTextField(java.awt.TextField)" returnType="java.awt.peer.TextFieldPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createLabel(java.awt.Label)" returnType="java.awt.peer.LabelPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createList(java.awt.List)" returnType="java.awt.peer.ListPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createCheckbox(java.awt.Checkbox)" returnType="java.awt.peer.CheckboxPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createScrollbar(java.awt.Scrollbar)" returnType="java.awt.peer.ScrollbarPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createScrollPane(java.awt.ScrollPane)" returnType="java.awt.peer.ScrollPanePeer" isAbstract="true" visibility="protected"/>
            <Method signature="createTextArea(java.awt.TextArea)" returnType="java.awt.peer.TextAreaPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createChoice(java.awt.Choice)" returnType="java.awt.peer.ChoicePeer" isAbstract="true" visibility="protected"/>
            <Method signature="createFrame(java.awt.Frame)" returnType="java.awt.peer.FramePeer" isAbstract="true" visibility="protected"/>
            <Method signature="createCanvas(java.awt.Canvas)" returnType="java.awt.peer.CanvasPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createPanel(java.awt.Panel)" returnType="java.awt.peer.PanelPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createWindow(java.awt.Window)" returnType="java.awt.peer.WindowPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createDialog(java.awt.Dialog)" returnType="java.awt.peer.DialogPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createMenuBar(java.awt.MenuBar)" returnType="java.awt.peer.MenuBarPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createMenu(java.awt.Menu)" returnType="java.awt.peer.MenuPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createPopupMenu(java.awt.PopupMenu)" returnType="java.awt.peer.PopupMenuPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createMenuItem(java.awt.MenuItem)" returnType="java.awt.peer.MenuItemPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createFileDialog(java.awt.FileDialog)" returnType="java.awt.peer.FileDialogPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createCheckboxMenuItem(java.awt.CheckboxMenuItem)" returnType="java.awt.peer.CheckboxMenuItemPeer" isAbstract="true" visibility="protected"/>
            <Method signature="createComponent(java.awt.Component)" returnType="java.awt.peer.LightweightPeer" visibility="protected"/>
            <Method signature="getFontPeer(java.lang.String,int)" returnType="java.awt.peer.FontPeer" isAbstract="true" visibility="protected"/>
            <Method signature="loadSystemColors(int[])" returnType="[ext]void" visibility="protected"/>
            <Method signature="getScreenSize()" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="getScreenResolution()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getColorModel()" returnType="java.awt.image.ColorModel" isAbstract="true" visibility="public"/>
            <Method signature="getFontList()" returnType="[ext]java.lang.String[]" isAbstract="true" visibility="public"/>
            <Method signature="getFontMetrics(java.awt.Font)" returnType="java.awt.FontMetrics" isAbstract="true" visibility="public"/>
            <Method signature="sync()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getDefaultToolkit()" isStatic="true" returnType="java.awt.Toolkit" visibility="public"/>
            <Method signature="getImage(java.lang.String)" returnType="java.awt.Image" isAbstract="true" visibility="public"/>
            <Method signature="getImage(java.net.URL)" returnType="java.awt.Image" isAbstract="true" visibility="public"/>
            <Method signature="prepareImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="checkImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="createImage(java.awt.image.ImageProducer)" returnType="java.awt.Image" isAbstract="true" visibility="public"/>
            <Method signature="createImage(byte[])" returnType="java.awt.Image" visibility="public"/>
            <Method signature="createImage(byte[],int,int)" returnType="java.awt.Image" isAbstract="true" visibility="public"/>
            <Method signature="getPrintJob(java.awt.Frame,java.lang.String,java.util.Properties)" returnType="java.awt.PrintJob" isAbstract="true" visibility="public"/>
            <Method signature="beep()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getSystemClipboard()" returnType="java.awt.datatransfer.Clipboard" isAbstract="true" visibility="public"/>
            <Method signature="getMenuShortcutKeyMask()" returnType="[ext]int" visibility="public"/>
            <Method signature="getNativeContainer(java.awt.Component)" isStatic="true" returnType="java.awt.Container" visibility="protected"/>
            <Method signature="getProperty(java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="getSystemEventQueue()" returnType="java.awt.EventQueue" isFinal="true" visibility="public"/>
            <Method signature="getSystemEventQueueImpl()" returnType="java.awt.EventQueue" isAbstract="true" visibility="protected"/>
            <Method signature="getEventQueue()" isStatic="true" returnType="java.awt.EventQueue"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.LightweightPeer" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.LightweightPeer"/>
        <Methods>
            <Method signature="+ctor(java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="isFocusTraversable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setVisible(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="show()" returnType="[ext]void" visibility="public"/>
            <Method signature="hide()" returnType="[ext]void" visibility="public"/>
            <Method signature="setEnabled(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="enable()" returnType="[ext]void" visibility="public"/>
            <Method signature="disable()" returnType="[ext]void" visibility="public"/>
            <Method signature="paint(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="repaint(long,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="setBounds(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reshape(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="handleEvent(java.awt.Event)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="handleEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPreferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getToolkit()" returnType="java.awt.Toolkit" visibility="public"/>
            <Method signature="getColorModel()" returnType="java.awt.image.ColorModel" visibility="public"/>
            <Method signature="getGraphics()" returnType="java.awt.Graphics" visibility="public"/>
            <Method signature="getFontMetrics(java.awt.Font)" returnType="java.awt.FontMetrics" visibility="public"/>
            <Method signature="dispose()" returnType="[ext]void" visibility="public"/>
            <Method signature="setForeground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="setBackground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="setFont(java.awt.Font)" returnType="[ext]void" visibility="public"/>
            <Method signature="setCursor(java.awt.Cursor)" returnType="[ext]void" visibility="public"/>
            <Method signature="requestFocus()" returnType="[ext]void" visibility="public"/>
            <Method signature="createImage(java.awt.image.ImageProducer)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="createImage(int,int)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="prepareImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]int" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getLocationOnScreen()" returnType="java.awt.Point" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.image.ImageObserver" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="WIDTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HEIGHT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PROPERTIES" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SOMEBITS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FRAMEBITS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ALLBITS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ERROR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ABORT" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="imageUpdate(java.awt.Image,int,int,int,int,int)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.image.ImageProducer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="addConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="isConsumer(java.awt.image.ImageConsumer)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="removeConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="startProduction(java.awt.image.ImageConsumer)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="requestTopDownLeftRightResend(java.awt.image.ImageConsumer)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.image.ImageFilter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.image.ImageConsumer"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="consumer" type="java.awt.image.ImageConsumer" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="getFilterInstance(java.awt.image.ImageConsumer)" returnType="java.awt.image.ImageFilter" visibility="public"/>
            <Method signature="setDimensions(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setProperties(java.util.Hashtable)" returnType="[ext]void" visibility="public"/>
            <Method signature="setColorModel(java.awt.image.ColorModel)" returnType="[ext]void" visibility="public"/>
            <Method signature="setHints(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="imageComplete(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="resendTopDownLeftRight(java.awt.image.ImageProducer)" returnType="[ext]void" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.image.ImageConsumer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="RANDOMPIXELORDER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TOPDOWNLEFTRIGHT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="COMPLETESCANLINES" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SINGLEPASS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SINGLEFRAME" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="IMAGEERROR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SINGLEFRAMEDONE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="STATICIMAGEDONE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="IMAGEABORTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="setDimensions(int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setProperties(java.util.Hashtable)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setColorModel(java.awt.image.ColorModel)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setHints(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="imageComplete(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.image.FilteredImageSource" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.image.ImageProducer"/>
        <Fields>
            <Field name="src" type="java.awt.image.ImageProducer"/>
            <Field name="filter" type="java.awt.image.ImageFilter"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.image.ImageProducer,java.awt.image.ImageFilter)" returnType="[ext]void" visibility="public"/>
            <Method signature="addConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="isConsumer(java.awt.image.ImageConsumer)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="removeConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="startProduction(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="requestTopDownLeftRightResend(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.image.ColorModel" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="pixel_bits" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="getRGBdefault()" isStatic="true" returnType="java.awt.image.ColorModel" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPixelSize()" returnType="[ext]int" visibility="public"/>
            <Method signature="getRed(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getGreen(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getBlue(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getAlpha(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getRGB(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.image.AreaAveragingScaleFilter" extends="java.awt.image.ReplicateScaleFilter" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.image.ReplicateScaleFilter"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setHints(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.image.ReplicateScaleFilter" extends="java.awt.image.ImageFilter" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.image.ImageFilter"/>
        <Fields>
            <Field name="srcWidth" type="int" visibility="protected"/>
            <Field name="srcHeight" type="int" visibility="protected"/>
            <Field name="destWidth" type="int" visibility="protected"/>
            <Field name="destHeight" type="int" visibility="protected"/>
            <Field name="srcrows" type="int[]" visibility="protected"/>
            <Field name="srccols" type="int[]" visibility="protected"/>
            <Field name="outpixbuf" type="java.lang.Object" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setProperties(java.util.Hashtable)" returnType="[ext]void" visibility="public"/>
            <Method signature="setDimensions(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.image.DirectColorModel" extends="java.awt.image.ColorModel" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.image.ColorModel"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getRedMask()" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getGreenMask()" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getBlueMask()" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getAlphaMask()" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getRed(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getGreen(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getBlue(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getAlpha(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getRGB(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.image.IndexColorModel" extends="java.awt.image.ColorModel" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.image.ColorModel"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int,int,byte[],byte[],byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,byte[],byte[],byte[],int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,byte[],byte[],byte[],byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,byte[],int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,byte[],int,boolean,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMapSize()" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getTransparentPixel()" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getReds(byte[])" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getGreens(byte[])" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getBlues(byte[])" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getAlphas(byte[])" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getRed(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getGreen(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getBlue(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getAlpha(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="getRGB(int)" returnType="[ext]int" isFinal="true" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.image.CropImageFilter" extends="java.awt.image.ImageFilter" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.image.ImageFilter"/>
        <Fields>
            <Field name="cropX" type="int"/>
            <Field name="cropY" type="int"/>
            <Field name="cropW" type="int"/>
            <Field name="cropH" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setProperties(java.util.Hashtable)" returnType="[ext]void" visibility="public"/>
            <Method signature="setDimensions(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.image.MemoryImageSource" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.image.ImageProducer"/>
        <Fields>
            <Field name="width" type="int"/>
            <Field name="height" type="int"/>
            <Field name="model" type="java.awt.image.ColorModel"/>
            <Field name="pixels" type="java.lang.Object"/>
            <Field name="pixeloffset" type="int"/>
            <Field name="pixelscan" type="int"/>
            <Field name="properties" type="java.util.Hashtable"/>
            <Field name="theConsumers" type="java.util.Vector"/>
            <Field name="animating" type="boolean"/>
            <Field name="fullbuffers" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,int,java.awt.image.ColorModel,byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,java.awt.image.ColorModel,byte[],int,int,java.util.Hashtable)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,java.awt.image.ColorModel,int[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,java.awt.image.ColorModel,int[],int,int,java.util.Hashtable)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int[],int,int,java.util.Hashtable)" returnType="[ext]void" visibility="public"/>
            <Method signature="addConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="isConsumer(java.awt.image.ImageConsumer)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="removeConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="startProduction(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="requestTopDownLeftRightResend(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="setAnimated(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setFullBufferUpdates(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="newPixels()" returnType="[ext]void" visibility="public"/>
            <Method signature="newPixels(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="newPixels(int,int,int,int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="newPixels(byte[],java.awt.image.ColorModel,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="newPixels(int[],java.awt.image.ColorModel,int,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.image.PixelGrabber" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.image.ImageConsumer"/>
        <Fields>
            <Field name="producer" type="java.awt.image.ImageProducer"/>
            <Field name="dstX" type="int"/>
            <Field name="dstY" type="int"/>
            <Field name="dstW" type="int"/>
            <Field name="dstH" type="int"/>
            <Field name="imageModel" type="java.awt.image.ColorModel"/>
            <Field name="bytePixels" type="byte[]"/>
            <Field name="intPixels" type="int[]"/>
            <Field name="dstOff" type="int"/>
            <Field name="dstScan" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Image,int,int,int,int,int[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.image.ImageProducer,int,int,int,int,int[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Image,int,int,int,int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="startGrabbing()" returnType="[ext]void" visibility="public"/>
            <Method signature="abortGrabbing()" returnType="[ext]void" visibility="public"/>
            <Method signature="grabPixels()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="grabPixels(long)" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="getStatus()" returnType="[ext]int" visibility="public"/>
            <Method signature="getWidth()" returnType="[ext]int" visibility="public"/>
            <Method signature="getHeight()" returnType="[ext]int" visibility="public"/>
            <Method signature="getPixels()" returnType="[ext]void" visibility="public"/>
            <Method signature="getColorModel()" returnType="java.awt.image.ColorModel" visibility="public"/>
            <Method signature="setDimensions(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setHints(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setProperties(java.util.Hashtable)" returnType="[ext]void" visibility="public"/>
            <Method signature="setColorModel(java.awt.image.ColorModel)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="imageComplete(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="status()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.image.RGBImageFilter" extends="java.awt.image.ImageFilter" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.image.ImageFilter"/>
        <Fields>
            <Field name="origmodel" type="java.awt.image.ColorModel" visibility="protected"/>
            <Field name="newmodel" type="java.awt.image.ColorModel" visibility="protected"/>
            <Field name="canFilterIndexColorModel" type="boolean" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="setColorModel(java.awt.image.ColorModel)" returnType="[ext]void" visibility="public"/>
            <Method signature="substituteColorModel(java.awt.image.ColorModel,java.awt.image.ColorModel)" returnType="[ext]void" visibility="public"/>
            <Method signature="filterIndexColorModel(java.awt.image.IndexColorModel)" returnType="java.awt.image.IndexColorModel" visibility="public"/>
            <Method signature="filterRGBPixels(int,int,int,int,int[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="filterRGB(int,int,int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Image" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="UndefinedProperty" type="java.lang.Object" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCALE_DEFAULT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCALE_FAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCALE_SMOOTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCALE_REPLICATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCALE_AREA_AVERAGING" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="getWidth(java.awt.image.ImageObserver)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getHeight(java.awt.image.ImageObserver)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getSource()" returnType="java.awt.image.ImageProducer" isAbstract="true" visibility="public"/>
            <Method signature="getGraphics()" returnType="java.awt.Graphics" isAbstract="true" visibility="public"/>
            <Method signature="getProperty(java.lang.String,java.awt.image.ImageObserver)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getScaledInstance(int,int,int)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="flush()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Rectangle" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.Shape"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="x" type="int" visibility="public"/>
            <Field name="y" type="int" visibility="public"/>
            <Field name="width" type="int" visibility="public"/>
            <Field name="height" type="int" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Rectangle)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Point,java.awt.Dimension)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Point)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Dimension)" returnType="[ext]void" visibility="public"/>
            <Method signature="getBounds()" returnType="java.awt.Rectangle" visibility="public"/>
            <Method signature="setBounds(java.awt.Rectangle)" returnType="[ext]void" visibility="public"/>
            <Method signature="setBounds(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reshape(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocation()" returnType="java.awt.Point" visibility="public"/>
            <Method signature="setLocation(java.awt.Point)" returnType="[ext]void" visibility="public"/>
            <Method signature="setLocation(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="move(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="translate(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="setSize(java.awt.Dimension)" returnType="[ext]void" visibility="public"/>
            <Method signature="setSize(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="resize(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="contains(java.awt.Point)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="contains(int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="inside(int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="intersects(java.awt.Rectangle)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="intersection(java.awt.Rectangle)" returnType="java.awt.Rectangle" visibility="public"/>
            <Method signature="union(java.awt.Rectangle)" returnType="java.awt.Rectangle" visibility="public"/>
            <Method signature="add(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.awt.Point)" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.awt.Rectangle)" returnType="[ext]void" visibility="public"/>
            <Method signature="grow(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="isEmpty()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.Shape" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getBounds()" returnType="java.awt.Rectangle" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.datatransfer.Clipboard" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="name" type="java.lang.String"/>
            <Field name="owner" type="java.awt.datatransfer.ClipboardOwner" visibility="protected"/>
            <Field name="contents" type="java.awt.datatransfer.Transferable" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setContents(java.awt.datatransfer.Transferable,java.awt.datatransfer.ClipboardOwner)" returnType="[ext]void" visibility="public"/>
            <Method signature="getContents(java.lang.Object)" returnType="java.awt.datatransfer.Transferable" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.datatransfer.ClipboardOwner" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="lostOwnership(java.awt.datatransfer.Clipboard,java.awt.datatransfer.Transferable)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.datatransfer.Transferable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getTransferDataFlavors()" returnType="[ext]java.awt.datatransfer.DataFlavor[]" isAbstract="true" visibility="public"/>
            <Method signature="isDataFlavorSupported(java.awt.datatransfer.DataFlavor)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="getTransferData(java.awt.datatransfer.DataFlavor)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.awt.datatransfer.UnsupportedFlavorException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.awt.datatransfer.UnsupportedFlavorException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.awt.datatransfer.DataFlavor)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.datatransfer.DataFlavor" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="ioInputStreamClass" type="java.lang.Class" isStatic="true"/>
            <Field name="stringFlavor" type="java.awt.datatransfer.DataFlavor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="plainTextFlavor" type="java.awt.datatransfer.DataFlavor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="serializedObjectMimeType" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="atom" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.Class,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMimeType()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getRepresentationClass()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getHumanPresentableName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setHumanPresentableName(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.awt.datatransfer.DataFlavor)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isMimeTypeEqual(java.lang.String)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isMimeTypeEqual(java.awt.datatransfer.DataFlavor)" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="normalizeMimeTypeParameter(java.lang.String,java.lang.String)" returnType="java.lang.String" visibility="protected"/>
            <Method signature="normalizeMimeType(java.lang.String)" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.datatransfer.StringSelection" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.datatransfer.Transferable"/>
        <Implements mangling="java.awt.datatransfer.ClipboardOwner"/>
        <Fields>
            <Field name="STRING" type="int" isStatic="true" isFinal="true"/>
            <Field name="PLAIN_TEXT" type="int" isStatic="true" isFinal="true"/>
            <Field name="flavors" type="java.awt.datatransfer.DataFlavor[]"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getTransferDataFlavors()" returnType="[ext]java.awt.datatransfer.DataFlavor[]" visibility="public"/>
            <Method signature="isDataFlavorSupported(java.awt.datatransfer.DataFlavor)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getTransferData(java.awt.datatransfer.DataFlavor)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.awt.datatransfer.UnsupportedFlavorException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="lostOwnership(java.awt.datatransfer.Clipboard,java.awt.datatransfer.Transferable)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.peer.LightweightPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
    </Interface>
    <Interface mangling="java.awt.peer.ComponentPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="setVisible(boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setEnabled(boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="paint(java.awt.Graphics)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="repaint(long,int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="print(java.awt.Graphics)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setBounds(int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="handleEvent(java.awt.AWTEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getLocationOnScreen()" returnType="java.awt.Point" isAbstract="true" visibility="public"/>
            <Method signature="getPreferredSize()" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="getColorModel()" returnType="java.awt.image.ColorModel" isAbstract="true" visibility="public"/>
            <Method signature="getToolkit()" returnType="java.awt.Toolkit" isAbstract="true" visibility="public"/>
            <Method signature="getGraphics()" returnType="java.awt.Graphics" isAbstract="true" visibility="public"/>
            <Method signature="getFontMetrics(java.awt.Font)" returnType="java.awt.FontMetrics" isAbstract="true" visibility="public"/>
            <Method signature="dispose()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setForeground(java.awt.Color)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setBackground(java.awt.Color)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setFont(java.awt.Font)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setCursor(java.awt.Cursor)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="requestFocus()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="isFocusTraversable()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="createImage(java.awt.image.ImageProducer)" returnType="java.awt.Image" isAbstract="true" visibility="public"/>
            <Method signature="createImage(int,int)" returnType="java.awt.Image" isAbstract="true" visibility="public"/>
            <Method signature="prepareImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="checkImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="show()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="hide()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="enable()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="disable()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="reshape(int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.ButtonPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
        <Methods>
            <Method signature="setLabel(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.TextFieldPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.TextComponentPeer"/>
        <Methods>
            <Method signature="setEchoChar(char)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getPreferredSize(int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="getMinimumSize(int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="setEchoCharacter(char)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="preferredSize(int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="minimumSize(int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.TextComponentPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
        <Methods>
            <Method signature="setEditable(boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getText()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="setText(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getSelectionStart()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getSelectionEnd()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="select(int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setCaretPosition(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getCaretPosition()" returnType="[ext]int" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.LabelPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
        <Methods>
            <Method signature="setText(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setAlignment(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.FontPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
    </Interface>
    <Interface mangling="java.awt.peer.ListPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
        <Methods>
            <Method signature="getSelectedIndexes()" returnType="[ext]int[]" isAbstract="true" visibility="public"/>
            <Method signature="add(java.lang.String,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="delItems(int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="removeAll()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="select(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="deselect(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="makeVisible(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setMultipleMode(boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getPreferredSize(int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="getMinimumSize(int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="addItem(java.lang.String,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="clear()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setMultipleSelections(boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="preferredSize(int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="minimumSize(int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.CheckboxPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
        <Methods>
            <Method signature="setState(boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setCheckboxGroup(java.awt.CheckboxGroup)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setLabel(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.ScrollbarPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
        <Methods>
            <Method signature="setValues(int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setLineIncrement(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setPageIncrement(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.ScrollPanePeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ContainerPeer"/>
        <Methods>
            <Method signature="getHScrollbarHeight()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getVScrollbarWidth()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="setScrollPosition(int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="childResized(int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setUnitIncrement(java.awt.Adjustable,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setValue(java.awt.Adjustable,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.ContainerPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
        <Methods>
            <Method signature="getInsets()" returnType="java.awt.Insets" isAbstract="true" visibility="public"/>
            <Method signature="beginValidate()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="endValidate()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="insets()" returnType="java.awt.Insets" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.ActiveEvent" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="dispatch()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.TextAreaPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.TextComponentPeer"/>
        <Methods>
            <Method signature="insert(java.lang.String,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="replaceRange(java.lang.String,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getPreferredSize(int,int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="getMinimumSize(int,int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="insertText(java.lang.String,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="replaceText(java.lang.String,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="preferredSize(int,int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="minimumSize(int,int)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.ChoicePeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
        <Methods>
            <Method signature="add(java.lang.String,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="remove(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="select(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="addItem(java.lang.String,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.FramePeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.WindowPeer"/>
        <Methods>
            <Method signature="setTitle(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setIconImage(java.awt.Image)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setMenuBar(java.awt.MenuBar)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setResizable(boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.WindowPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ContainerPeer"/>
        <Methods>
            <Method signature="toFront()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="toBack()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.CanvasPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
    </Interface>
    <Interface mangling="java.awt.peer.PanelPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.ContainerPeer"/>
    </Interface>
    <Interface mangling="java.awt.peer.DialogPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.WindowPeer"/>
        <Methods>
            <Method signature="setTitle(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setResizable(boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.MenuBarPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.MenuComponentPeer"/>
        <Methods>
            <Method signature="addMenu(java.awt.Menu)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="delMenu(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="addHelpMenu(java.awt.Menu)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.MenuPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.MenuItemPeer"/>
        <Methods>
            <Method signature="addSeparator()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="addItem(java.awt.MenuItem)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="delItem(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.MenuItemPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.MenuComponentPeer"/>
        <Methods>
            <Method signature="setLabel(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setEnabled(boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="enable()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="disable()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.MenuComponentPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="dispose()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.PopupMenuPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.MenuPeer"/>
        <Methods>
            <Method signature="show(java.awt.Event)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.FileDialogPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.DialogPeer"/>
        <Methods>
            <Method signature="setFile(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setDirectory(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setFilenameFilter(java.io.FilenameFilter)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.peer.CheckboxMenuItemPeer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.MenuItemPeer"/>
        <Methods>
            <Method signature="setState(boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.Button" extends="java.awt.Component" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Component"/>
        <Fields>
            <Field name="label" type="java.lang.String"/>
            <Field name="actionCommand" type="java.lang.String"/>
            <Field name="actionListener" type="java.awt.event.ActionListener"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getLabel()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setLabel(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setActionCommand(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getActionCommand()" returnType="java.lang.String" visibility="public"/>
            <Method signature="addActionListener(java.awt.event.ActionListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeActionListener(java.awt.event.ActionListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processActionEvent(java.awt.event.ActionEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Component" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.image.ImageObserver"/>
        <Implements mangling="java.awt.MenuContainer"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="peer" type="java.awt.peer.ComponentPeer"/>
            <Field name="parent" type="java.awt.Container"/>
            <Field name="x" type="int"/>
            <Field name="y" type="int"/>
            <Field name="width" type="int"/>
            <Field name="height" type="int"/>
            <Field name="foreground" type="java.awt.Color"/>
            <Field name="background" type="java.awt.Color"/>
            <Field name="font" type="java.awt.Font"/>
            <Field name="cursor" type="java.awt.Cursor"/>
            <Field name="locale" type="java.util.Locale"/>
            <Field name="visible" type="boolean"/>
            <Field name="enabled" type="boolean"/>
            <Field name="valid" type="boolean"/>
            <Field name="popups" type="java.util.Vector"/>
            <Field name="LOCK" type="java.lang.Object" isStatic="true" isFinal="true"/>
            <Field name="minSize" type="java.awt.Dimension"/>
            <Field name="prefSize" type="java.awt.Dimension"/>
            <Field name="newEventsOnly" type="boolean"/>
            <Field name="componentListener" type="java.awt.event.ComponentListener"/>
            <Field name="focusListener" type="java.awt.event.FocusListener"/>
            <Field name="keyListener" type="java.awt.event.KeyListener"/>
            <Field name="mouseListener" type="java.awt.event.MouseListener"/>
            <Field name="mouseMotionListener" type="java.awt.event.MouseMotionListener"/>
            <Field name="actionListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="adjustmentListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="componentListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="containerListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="focusListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="itemListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="keyListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="mouseListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="mouseMotionListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="textListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="windowListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="eventMask" type="long"/>
            <Field name="isInc" type="boolean" isStatic="true"/>
            <Field name="incRate" type="int" isStatic="true"/>
            <Field name="TOP_ALIGNMENT" type="float" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENTER_ALIGNMENT" type="float" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BOTTOM_ALIGNMENT" type="float" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LEFT_ALIGNMENT" type="float" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="RIGHT_ALIGNMENT" type="float" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setName(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getParent()" returnType="java.awt.Container" visibility="public"/>
            <Method signature="getPeer()" returnType="java.awt.peer.ComponentPeer" visibility="public"/>
            <Method signature="getTreeLock()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getToolkit()" returnType="java.awt.Toolkit" visibility="public"/>
            <Method signature="isValid()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isVisible()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isShowing()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isEnabled()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setEnabled(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="enable()" returnType="[ext]void" visibility="public"/>
            <Method signature="enable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="disable()" returnType="[ext]void" visibility="public"/>
            <Method signature="setVisible(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="show()" returnType="[ext]void" visibility="public"/>
            <Method signature="show(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="hide()" returnType="[ext]void" visibility="public"/>
            <Method signature="getForeground()" returnType="java.awt.Color" visibility="public"/>
            <Method signature="setForeground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="getBackground()" returnType="java.awt.Color" visibility="public"/>
            <Method signature="setBackground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="getFont()" returnType="java.awt.Font" visibility="public"/>
            <Method signature="setFont(java.awt.Font)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocale()" returnType="java.util.Locale" visibility="public"/>
            <Method signature="setLocale(java.util.Locale)" returnType="[ext]void" visibility="public"/>
            <Method signature="getColorModel()" returnType="java.awt.image.ColorModel" visibility="public"/>
            <Method signature="getLocation()" returnType="java.awt.Point" visibility="public"/>
            <Method signature="getLocationOnScreen()" returnType="java.awt.Point" visibility="public"/>
            <Method signature="location()" returnType="java.awt.Point" visibility="public"/>
            <Method signature="setLocation(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="move(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setLocation(java.awt.Point)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="size()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="setSize(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="resize(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setSize(java.awt.Dimension)" returnType="[ext]void" visibility="public"/>
            <Method signature="resize(java.awt.Dimension)" returnType="[ext]void" visibility="public"/>
            <Method signature="getBounds()" returnType="java.awt.Rectangle" visibility="public"/>
            <Method signature="bounds()" returnType="java.awt.Rectangle" visibility="public"/>
            <Method signature="setBounds(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reshape(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setBounds(java.awt.Rectangle)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPreferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMaximumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getAlignmentX()" returnType="[ext]float" visibility="public"/>
            <Method signature="getAlignmentY()" returnType="[ext]float" visibility="public"/>
            <Method signature="doLayout()" returnType="[ext]void" visibility="public"/>
            <Method signature="layout()" returnType="[ext]void" visibility="public"/>
            <Method signature="validate()" returnType="[ext]void" visibility="public"/>
            <Method signature="invalidate()" returnType="[ext]void" visibility="public"/>
            <Method signature="getGraphics()" returnType="java.awt.Graphics" visibility="public"/>
            <Method signature="getFontMetrics(java.awt.Font)" returnType="java.awt.FontMetrics" visibility="public"/>
            <Method signature="setCursor(java.awt.Cursor)" returnType="[ext]void" visibility="public"/>
            <Method signature="getCursor()" returnType="java.awt.Cursor" visibility="public"/>
            <Method signature="paint(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="update(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="paintAll(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="repaint()" returnType="[ext]void" visibility="public"/>
            <Method signature="repaint(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="repaint(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="repaint(long,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="printAll(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="lightweightPrint(java.awt.Graphics)" returnType="[ext]void"/>
            <Method signature="imageUpdate(java.awt.Image,int,int,int,int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="createImage(java.awt.image.ImageProducer)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="createImage(int,int)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="prepareImage(java.awt.Image,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="prepareImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkImage(java.awt.Image,java.awt.image.ImageObserver)" returnType="[ext]int" visibility="public"/>
            <Method signature="checkImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]int" visibility="public"/>
            <Method signature="contains(int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="inside(int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="contains(java.awt.Point)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getComponentAt(int,int)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="locate(int,int)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="getComponentAt(java.awt.Point)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="deliverEvent(java.awt.Event)" returnType="[ext]void" visibility="public"/>
            <Method signature="dispatchEvent(java.awt.AWTEvent)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="dispatchEventImpl(java.awt.AWTEvent)" returnType="[ext]void"/>
            <Method signature="areInputMethodsEnabled()" returnType="[ext]boolean"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="postEvent(java.awt.Event)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="addComponentListener(java.awt.event.ComponentListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeComponentListener(java.awt.event.ComponentListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="addFocusListener(java.awt.event.FocusListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeFocusListener(java.awt.event.FocusListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="addKeyListener(java.awt.event.KeyListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeKeyListener(java.awt.event.KeyListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="addMouseListener(java.awt.event.MouseListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeMouseListener(java.awt.event.MouseListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="addMouseMotionListener(java.awt.event.MouseMotionListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeMouseMotionListener(java.awt.event.MouseMotionListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="getInputContext()" returnType="sun.awt.im.InputContext"/>
            <Method signature="enableEvents(long)" returnType="[ext]void" isFinal="true" visibility="protected"/>
            <Method signature="disableEvents(long)" returnType="[ext]void" isFinal="true" visibility="protected"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processComponentEvent(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processFocusEvent(java.awt.event.FocusEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processKeyEvent(java.awt.event.KeyEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processMouseEvent(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processMouseMotionEvent(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="postsOldMouseEvents()" returnType="[ext]boolean"/>
            <Method signature="handleEvent(java.awt.Event)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mouseDown(java.awt.Event,int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mouseDrag(java.awt.Event,int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mouseUp(java.awt.Event,int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mouseMove(java.awt.Event,int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mouseEnter(java.awt.Event,int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mouseExit(java.awt.Event,int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="keyDown(java.awt.Event,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="keyUp(java.awt.Event,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="action(java.awt.Event,java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="removeNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="gotFocus(java.awt.Event,java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="lostFocus(java.awt.Event,java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isFocusTraversable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="requestFocus()" returnType="[ext]void" visibility="public"/>
            <Method signature="transferFocus()" returnType="[ext]void" visibility="public"/>
            <Method signature="nextFocus()" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.awt.PopupMenu)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.awt.MenuComponent)" returnType="[ext]void" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="list()" returnType="[ext]void" visibility="public"/>
            <Method signature="list(java.io.PrintStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="list(java.io.PrintStream,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="list(java.io.PrintWriter)" returnType="[ext]void" visibility="public"/>
            <Method signature="list(java.io.PrintWriter,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getNativeContainer()" returnType="java.awt.Container"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Component$NativeInLightFixer" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.ComponentListener"/>
        <Implements mangling="java.awt.event.ContainerListener"/>
        <Fields>
            <Field name="lightParents" type="java.util.Vector"/>
            <Field name="nativeHost" type="java.awt.Container"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="componentResized(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentMoved(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentShown(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentHidden(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentAdded(java.awt.event.ContainerEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentRemoved(java.awt.event.ContainerEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeReferences()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.AWTEvent" extends="java.util.EventObject" isGeneric="false" visibility="public">
        <Extends mangling="java.util.EventObject"/>
        <Fields>
            <Field name="id" type="int" visibility="protected"/>
            <Field name="consumed" type="boolean" visibility="protected"/>
            <Field name="COMPONENT_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONTAINER_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FOCUS_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KEY_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_MOTION_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ACTION_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ADJUSTMENT_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ITEM_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TEXT_EVENT_MASK" type="long" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="RESERVED_ID_MAX" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Event)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.Object,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getID()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="consume()" returnType="[ext]void" visibility="protected"/>
            <Method signature="isConsumed()" returnType="[ext]boolean" visibility="protected"/>
            <Method signature="convertToOld()" returnType="java.awt.Event"/>
            <Method signature="setSource(java.lang.Object)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.FocusEvent" extends="java.awt.event.ComponentEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.event.ComponentEvent"/>
        <Fields>
            <Field name="FOCUS_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FOCUS_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FOCUS_GAINED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FOCUS_LOST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="temporary" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Component,int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Component,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="isTemporary()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.ComponentEvent" extends="java.awt.AWTEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.AWTEvent"/>
        <Fields>
            <Field name="COMPONENT_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="COMPONENT_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="COMPONENT_MOVED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="COMPONENT_RESIZED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="COMPONENT_SHOWN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="COMPONENT_HIDDEN" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Component,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getComponent()" returnType="java.awt.Component" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.event.ComponentListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="componentResized(java.awt.event.ComponentEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="componentMoved(java.awt.event.ComponentEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="componentShown(java.awt.event.ComponentEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="componentHidden(java.awt.event.ComponentEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.event.ContainerListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="componentAdded(java.awt.event.ContainerEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="componentRemoved(java.awt.event.ContainerEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.event.AdjustmentListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="adjustmentValueChanged(java.awt.event.AdjustmentEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.event.ActionEvent" extends="java.awt.AWTEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.AWTEvent"/>
        <Fields>
            <Field name="SHIFT_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CTRL_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="META_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ALT_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ACTION_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ACTION_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ACTION_PERFORMED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="actionCommand" type="java.lang.String"/>
            <Field name="modifiers" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.Object,int,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.Object,int,java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getActionCommand()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getModifiers()" returnType="[ext]int" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.KeyEvent" extends="java.awt.event.InputEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.event.InputEvent"/>
        <Fields>
            <Field name="KEY_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KEY_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KEY_TYPED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KEY_PRESSED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KEY_RELEASED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_ENTER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_BACK_SPACE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_TAB" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_CANCEL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_CLEAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_SHIFT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_CONTROL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_ALT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_PAUSE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_CAPS_LOCK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_ESCAPE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_SPACE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_PAGE_UP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_PAGE_DOWN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_END" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_HOME" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_LEFT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_UP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_RIGHT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_DOWN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_COMMA" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_PERIOD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_SLASH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_0" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_1" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_2" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_3" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_4" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_5" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_6" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_7" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_8" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_9" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_SEMICOLON" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_EQUALS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_A" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_B" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_C" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_D" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_E" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_G" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_H" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_I" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_J" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_K" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_L" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_M" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_N" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_O" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_P" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_Q" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_R" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_S" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_T" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_U" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_V" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_W" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_X" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_Y" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_Z" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_OPEN_BRACKET" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_BACK_SLASH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_CLOSE_BRACKET" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUMPAD0" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUMPAD1" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUMPAD2" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUMPAD3" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUMPAD4" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUMPAD5" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUMPAD6" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUMPAD7" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUMPAD8" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUMPAD9" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_MULTIPLY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_ADD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_SEPARATER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_SUBTRACT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_DECIMAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_DIVIDE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F1" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F2" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F3" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F4" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F5" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F6" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F7" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F8" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F9" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F10" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F11" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_F12" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_DELETE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NUM_LOCK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_SCROLL_LOCK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_PRINTSCREEN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_INSERT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_HELP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_META" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_BACK_QUOTE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_QUOTE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_FINAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_CONVERT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_NONCONVERT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_ACCEPT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_MODECHANGE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_KANA" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_KANJI" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VK_UNDEFINED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CHAR_UNDEFINED" type="char" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="keyCode" type="int"/>
            <Field name="keyChar" type="char"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Component,int,long,int,int,char)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Component,int,long,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getKeyCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="setKeyCode(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setKeyChar(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="setModifiers(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getKeyChar()" returnType="[ext]char" visibility="public"/>
            <Method signature="getKeyText(int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="getKeyModifiersText(int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="isActionKey()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.InputEvent" extends="java.awt.event.ComponentEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.event.ComponentEvent"/>
        <Fields>
            <Field name="SHIFT_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CTRL_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="META_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ALT_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BUTTON1_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BUTTON2_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BUTTON3_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="when" type="long"/>
            <Field name="modifiers" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Component,int,long,int)" returnType="[ext]void"/>
            <Method signature="isShiftDown()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isControlDown()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isMetaDown()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isAltDown()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getWhen()" returnType="[ext]long" visibility="public"/>
            <Method signature="getModifiers()" returnType="[ext]int" visibility="public"/>
            <Method signature="consume()" returnType="[ext]void" visibility="public"/>
            <Method signature="isConsumed()" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.MouseEvent" extends="java.awt.event.InputEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.event.InputEvent"/>
        <Fields>
            <Field name="MOUSE_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_CLICKED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_PRESSED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_RELEASED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_MOVED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_ENTERED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_EXITED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_DRAGGED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="x" type="int"/>
            <Field name="y" type="int"/>
            <Field name="clickCount" type="int"/>
            <Field name="popupTrigger" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Component,int,long,int,int,int,int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getX()" returnType="[ext]int" visibility="public"/>
            <Method signature="getY()" returnType="[ext]int" visibility="public"/>
            <Method signature="getPoint()" returnType="java.awt.Point" visibility="public"/>
            <Method signature="translatePoint(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getClickCount()" returnType="[ext]int" visibility="public"/>
            <Method signature="isPopupTrigger()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.PaintEvent" extends="java.awt.event.ComponentEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.event.ComponentEvent"/>
        <Fields>
            <Field name="PAINT_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PAINT_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PAINT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UPDATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="updateRect" type="java.awt.Rectangle"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Component,int,java.awt.Rectangle)" returnType="[ext]void" visibility="public"/>
            <Method signature="getUpdateRect()" returnType="java.awt.Rectangle" visibility="public"/>
            <Method signature="setUpdateRect(java.awt.Rectangle)" returnType="[ext]void" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.WindowEvent" extends="java.awt.event.ComponentEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.event.ComponentEvent"/>
        <Fields>
            <Field name="WINDOW_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_OPENED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_CLOSING" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_CLOSED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_ICONIFIED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_DEICONIFIED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_ACTIVATED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_DEACTIVATED" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Window,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getWindow()" returnType="java.awt.Window" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.event.FocusListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="focusGained(java.awt.event.FocusEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="focusLost(java.awt.event.FocusEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.event.KeyListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="keyTyped(java.awt.event.KeyEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="keyPressed(java.awt.event.KeyEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="keyReleased(java.awt.event.KeyEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.event.MouseListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="mouseClicked(java.awt.event.MouseEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="mousePressed(java.awt.event.MouseEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="mouseReleased(java.awt.event.MouseEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="mouseEntered(java.awt.event.MouseEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="mouseExited(java.awt.event.MouseEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.event.MouseMotionListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="mouseDragged(java.awt.event.MouseEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="mouseMoved(java.awt.event.MouseEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.event.WindowListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="windowOpened(java.awt.event.WindowEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="windowClosing(java.awt.event.WindowEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="windowClosed(java.awt.event.WindowEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="windowIconified(java.awt.event.WindowEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="windowDeiconified(java.awt.event.WindowEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="windowActivated(java.awt.event.WindowEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="windowDeactivated(java.awt.event.WindowEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.event.ActionListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="actionPerformed(java.awt.event.ActionEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.event.ItemListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="itemStateChanged(java.awt.event.ItemEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.awt.event.TextListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="textValueChanged(java.awt.event.TextEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.event.ItemEvent" extends="java.awt.AWTEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.AWTEvent"/>
        <Fields>
            <Field name="ITEM_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ITEM_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ITEM_STATE_CHANGED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SELECTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DESELECTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="item" type="java.lang.Object"/>
            <Field name="stateChange" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.ItemSelectable,int,java.lang.Object,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getItemSelectable()" returnType="java.awt.ItemSelectable" visibility="public"/>
            <Method signature="getItem()" returnType="[ext]void" visibility="public"/>
            <Method signature="getStateChange()" returnType="[ext]int" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.AdjustmentEvent" extends="java.awt.AWTEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.AWTEvent"/>
        <Fields>
            <Field name="ADJUSTMENT_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ADJUSTMENT_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ADJUSTMENT_VALUE_CHANGED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UNIT_INCREMENT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UNIT_DECREMENT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BLOCK_DECREMENT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BLOCK_INCREMENT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TRACK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="adjustable" type="java.awt.Adjustable"/>
            <Field name="value" type="int"/>
            <Field name="adjustmentType" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Adjustable,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getAdjustable()" returnType="java.awt.Adjustable" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="getAdjustmentType()" returnType="[ext]int" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.TextEvent" extends="java.awt.AWTEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.AWTEvent"/>
        <Fields>
            <Field name="TEXT_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TEXT_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TEXT_VALUE_CHANGED" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.Object,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.ContainerEvent" extends="java.awt.event.ComponentEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.event.ComponentEvent"/>
        <Fields>
            <Field name="CONTAINER_FIRST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONTAINER_LAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="COMPONENT_ADDED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="COMPONENT_REMOVED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="child" type="java.awt.Component"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Component,int,java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="getContainer()" returnType="java.awt.Container" visibility="public"/>
            <Method signature="getChild()" returnType="java.awt.Component" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.ComponentAdapter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.ComponentListener"/>
        <Methods>
            <Method signature="componentResized(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentMoved(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentShown(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentHidden(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.ContainerAdapter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.ContainerListener"/>
        <Methods>
            <Method signature="componentAdded(java.awt.event.ContainerEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentRemoved(java.awt.event.ContainerEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.FocusAdapter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.FocusListener"/>
        <Methods>
            <Method signature="focusGained(java.awt.event.FocusEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="focusLost(java.awt.event.FocusEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.KeyAdapter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.KeyListener"/>
        <Methods>
            <Method signature="keyTyped(java.awt.event.KeyEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="keyPressed(java.awt.event.KeyEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="keyReleased(java.awt.event.KeyEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.MouseAdapter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.MouseListener"/>
        <Methods>
            <Method signature="mouseClicked(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mousePressed(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mouseReleased(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mouseEntered(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mouseExited(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.MouseMotionAdapter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.MouseMotionListener"/>
        <Methods>
            <Method signature="mouseDragged(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mouseMoved(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.event.WindowAdapter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.WindowListener"/>
        <Methods>
            <Method signature="windowOpened(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowClosing(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowClosed(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowIconified(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowDeiconified(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowActivated(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowDeactivated(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Event" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="SHIFT_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CTRL_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="META_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ALT_MASK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HOME" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="END" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PGUP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PGDN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DOWN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LEFT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="RIGHT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F1" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F2" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F3" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F4" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F5" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F6" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F7" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F8" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F9" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F10" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F11" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="F12" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PRINT_SCREEN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLL_LOCK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CAPS_LOCK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NUM_LOCK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PAUSE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="INSERT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENTER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BACK_SPACE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TAB" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ESCAPE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DELETE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_DESTROY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_EXPOSE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_ICONIFY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_DEICONIFY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_MOVED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KEY_PRESS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KEY_RELEASE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KEY_ACTION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="KEY_ACTION_RELEASE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_DOWN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_UP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_MOVE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_ENTER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_EXIT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOUSE_DRAG" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLL_LINE_UP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLL_LINE_DOWN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLL_PAGE_UP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLL_PAGE_DOWN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLL_ABSOLUTE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLL_BEGIN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLL_END" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LIST_SELECT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LIST_DESELECT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ACTION_EVENT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOAD_FILE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SAVE_FILE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="GOT_FOCUS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOST_FOCUS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="target" type="java.lang.Object" visibility="public"/>
            <Field name="when" type="long" visibility="public"/>
            <Field name="id" type="int" visibility="public"/>
            <Field name="x" type="int" visibility="public"/>
            <Field name="y" type="int" visibility="public"/>
            <Field name="key" type="int" visibility="public"/>
            <Field name="modifiers" type="int" visibility="public"/>
            <Field name="clickCount" type="int" visibility="public"/>
            <Field name="arg" type="java.lang.Object" visibility="public"/>
            <Field name="evt" type="java.awt.Event" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.Object,long,int,int,int,int,int,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.Object,long,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.Object,int,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="translate(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="shiftDown()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="controlDown()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="metaDown()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="consume()" returnType="[ext]void"/>
            <Method signature="isConsumed()" returnType="[ext]boolean"/>
            <Method signature="getOldEventKey(java.awt.event.KeyEvent)" isStatic="true" returnType="[ext]int"/>
            <Method signature="getKeyEventChar()" returnType="[ext]char"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.AWTException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.MenuContainer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getFont()" returnType="java.awt.Font" isAbstract="true" visibility="public"/>
            <Method signature="remove(java.awt.MenuComponent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="postEvent(java.awt.Event)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.Dimension" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="width" type="int" visibility="public"/>
            <Field name="height" type="int" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Dimension)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="setSize(java.awt.Dimension)" returnType="[ext]void" visibility="public"/>
            <Method signature="setSize(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.TextField" extends="java.awt.TextComponent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.TextComponent"/>
        <Fields>
            <Field name="columns" type="int"/>
            <Field name="echoChar" type="char"/>
            <Field name="actionListener" type="java.awt.event.ActionListener"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getEchoChar()" returnType="[ext]char" visibility="public"/>
            <Method signature="setEchoChar(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="setEchoCharacter(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="echoCharIsSet()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getColumns()" returnType="[ext]int" visibility="public"/>
            <Method signature="setColumns(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPreferredSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getPreferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="addActionListener(java.awt.event.ActionListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeActionListener(java.awt.event.ActionListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processActionEvent(java.awt.event.ActionEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.TextComponent" extends="java.awt.Component" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Component"/>
        <Fields>
            <Field name="text" type="java.lang.String"/>
            <Field name="editable" type="boolean"/>
            <Field name="selectionStart" type="int"/>
            <Field name="selectionEnd" type="int"/>
            <Field name="textListener" type="java.awt.event.TextListener" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
            <Method signature="areInputMethodsEnabled()" returnType="[ext]boolean"/>
            <Method signature="removeNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="setText(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getText()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getSelectedText()" returnType="java.lang.String" visibility="public"/>
            <Method signature="isEditable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setEditable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSelectionStart()" returnType="[ext]int" visibility="public"/>
            <Method signature="setSelectionStart(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSelectionEnd()" returnType="[ext]int" visibility="public"/>
            <Method signature="setSelectionEnd(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="select(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="selectAll()" returnType="[ext]void" visibility="public"/>
            <Method signature="setCaretPosition(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getCaretPosition()" returnType="[ext]int" visibility="public"/>
            <Method signature="addTextListener(java.awt.event.TextListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeTextListener(java.awt.event.TextListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processTextEvent(java.awt.event.TextEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Color" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="white" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="lightGray" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="gray" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="darkGray" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="black" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="red" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="pink" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="orange" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="yellow" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="green" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="magenta" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="cyan" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="blue" type="java.awt.Color" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="value" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(float,float,float)" returnType="[ext]void" visibility="public"/>
            <Method signature="getRed()" returnType="[ext]int" visibility="public"/>
            <Method signature="getGreen()" returnType="[ext]int" visibility="public"/>
            <Method signature="getBlue()" returnType="[ext]int" visibility="public"/>
            <Method signature="getRGB()" returnType="[ext]int" visibility="public"/>
            <Method signature="brighter()" returnType="java.awt.Color" visibility="public"/>
            <Method signature="darker()" returnType="java.awt.Color" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="decode(java.lang.String)" isStatic="true" returnType="java.awt.Color" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="getColor(java.lang.String)" isStatic="true" returnType="java.awt.Color" visibility="public"/>
            <Method signature="getColor(java.lang.String,java.awt.Color)" isStatic="true" returnType="java.awt.Color" visibility="public"/>
            <Method signature="getColor(java.lang.String,int)" isStatic="true" returnType="java.awt.Color" visibility="public"/>
            <Method signature="HSBtoRGB(float,float,float)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="RGBtoHSB(int,int,int,float[])" isStatic="true" returnType="[ext]float[]" visibility="public"/>
            <Method signature="getHSBColor(float,float,float)" isStatic="true" returnType="java.awt.Color" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Font" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="PLAIN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BOLD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ITALIC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="name" type="java.lang.String" visibility="protected"/>
            <Field name="style" type="int" visibility="protected"/>
            <Field name="size" type="int" visibility="protected"/>
            <Field name="peer" type="java.awt.peer.FontPeer"/>
        </Fields>
        <Methods>
            <Method signature="getPeer()" returnType="java.awt.peer.FontPeer" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getFamily()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getStyle()" returnType="[ext]int" visibility="public"/>
            <Method signature="getSize()" returnType="[ext]int" visibility="public"/>
            <Method signature="isPlain()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isBold()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isItalic()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getFont(java.lang.String)" isStatic="true" returnType="java.awt.Font" visibility="public"/>
            <Method signature="decode(java.lang.String)" isStatic="true" returnType="java.awt.Font" visibility="public"/>
            <Method signature="getFont(java.lang.String,java.awt.Font)" isStatic="true" returnType="java.awt.Font" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Label" extends="java.awt.Component" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Component"/>
        <Fields>
            <Field name="LEFT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENTER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="RIGHT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="text" type="java.lang.String"/>
            <Field name="alignment" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getAlignment()" returnType="[ext]int" visibility="public"/>
            <Method signature="setAlignment(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getText()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setText(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.List" extends="java.awt.Component" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Component"/>
        <Implements mangling="java.awt.ItemSelectable"/>
        <Fields>
            <Field name="items" type="java.util.Vector"/>
            <Field name="rows" type="int"/>
            <Field name="multipleMode" type="boolean"/>
            <Field name="selected" type="int[]"/>
            <Field name="visibleIndex" type="int"/>
            <Field name="actionListener" type="java.awt.event.ActionListener"/>
            <Field name="itemListener" type="java.awt.event.ItemListener"/>
            <Field name="DEFAULT_VISIBLE_ROWS" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="removeNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getItemCount()" returnType="[ext]int" visibility="public"/>
            <Method signature="countItems()" returnType="[ext]int" visibility="public"/>
            <Method signature="getItem(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getItems()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="add(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="addItem(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addItem(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="replaceItem(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeAll()" returnType="[ext]void" visibility="public"/>
            <Method signature="clear()" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="delItem(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSelectedIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="getSelectedIndexes()" returnType="[ext]int[]" visibility="public"/>
            <Method signature="getSelectedItem()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getSelectedItems()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="getSelectedObjects()" returnType="[ext]java.lang.Object[]" visibility="public"/>
            <Method signature="select(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="deselect(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="isIndexSelected(int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isSelected(int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getRows()" returnType="[ext]int" visibility="public"/>
            <Method signature="isMultipleMode()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="allowsMultipleSelections()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setMultipleMode(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setMultipleSelections(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getVisibleIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="makeVisible(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPreferredSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getPreferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="addItemListener(java.awt.event.ItemListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeItemListener(java.awt.event.ItemListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="addActionListener(java.awt.event.ActionListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeActionListener(java.awt.event.ActionListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processItemEvent(java.awt.event.ItemEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processActionEvent(java.awt.event.ActionEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
            <Method signature="delItems(int,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.ItemSelectable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getSelectedObjects()" returnType="[ext]java.lang.Object[]" isAbstract="true" visibility="public"/>
            <Method signature="addItemListener(java.awt.event.ItemListener)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="removeItemListener(java.awt.event.ItemListener)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.Checkbox" extends="java.awt.Component" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Component"/>
        <Implements mangling="java.awt.ItemSelectable"/>
        <Fields>
            <Field name="label" type="java.lang.String"/>
            <Field name="state" type="boolean"/>
            <Field name="group" type="java.awt.CheckboxGroup"/>
            <Field name="itemListener" type="java.awt.event.ItemListener"/>
        </Fields>
        <Methods>
            <Method signature="setStateInternal(boolean)" returnType="[ext]void"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,boolean,java.awt.CheckboxGroup)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.awt.CheckboxGroup,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getLabel()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setLabel(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getState()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setState(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSelectedObjects()" returnType="[ext]java.lang.Object[]" visibility="public"/>
            <Method signature="getCheckboxGroup()" returnType="java.awt.CheckboxGroup" visibility="public"/>
            <Method signature="setCheckboxGroup(java.awt.CheckboxGroup)" returnType="[ext]void" visibility="public"/>
            <Method signature="addItemListener(java.awt.event.ItemListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeItemListener(java.awt.event.ItemListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processItemEvent(java.awt.event.ItemEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Scrollbar" extends="java.awt.Component" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Component"/>
        <Implements mangling="java.awt.Adjustable"/>
        <Fields>
            <Field name="HORIZONTAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VERTICAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="value" type="int"/>
            <Field name="maximum" type="int"/>
            <Field name="minimum" type="int"/>
            <Field name="visibleAmount" type="int"/>
            <Field name="orientation" type="int"/>
            <Field name="lineIncrement" type="int"/>
            <Field name="pageIncrement" type="int"/>
            <Field name="adjustmentListener" type="java.awt.event.AdjustmentListener"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getOrientation()" returnType="[ext]int" visibility="public"/>
            <Method signature="setOrientation(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="setValue(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMinimum()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMinimum(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMaximum()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMaximum(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getVisibleAmount()" returnType="[ext]int" visibility="public"/>
            <Method signature="getVisible()" returnType="[ext]int" visibility="public"/>
            <Method signature="setVisibleAmount(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setUnitIncrement(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setLineIncrement(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getUnitIncrement()" returnType="[ext]int" visibility="public"/>
            <Method signature="getLineIncrement()" returnType="[ext]int" visibility="public"/>
            <Method signature="setBlockIncrement(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPageIncrement(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getBlockIncrement()" returnType="[ext]int" visibility="public"/>
            <Method signature="getPageIncrement()" returnType="[ext]int" visibility="public"/>
            <Method signature="setValues(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addAdjustmentListener(java.awt.event.AdjustmentListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeAdjustmentListener(java.awt.event.AdjustmentListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processAdjustmentEvent(java.awt.event.AdjustmentEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.Adjustable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="HORIZONTAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VERTICAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="getOrientation()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="setMinimum(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getMinimum()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="setMaximum(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getMaximum()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="setUnitIncrement(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getUnitIncrement()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="setBlockIncrement(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getBlockIncrement()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="setVisibleAmount(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getVisibleAmount()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="setValue(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="addAdjustmentListener(java.awt.event.AdjustmentListener)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="removeAdjustmentListener(java.awt.event.AdjustmentListener)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.Point" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="x" type="int" visibility="public"/>
            <Field name="y" type="int" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Point)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocation()" returnType="java.awt.Point" visibility="public"/>
            <Method signature="setLocation(java.awt.Point)" returnType="[ext]void" visibility="public"/>
            <Method signature="setLocation(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="move(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="translate(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.ScrollPane" extends="java.awt.Container" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Container"/>
        <Fields>
            <Field name="SCROLLBARS_AS_NEEDED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLLBARS_ALWAYS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLLBARS_NEVER" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addImpl(java.awt.Component,java.lang.Object,int)" returnType="[ext]void" isFinal="true" visibility="protected"/>
            <Method signature="getScrollbarDisplayPolicy()" returnType="[ext]int" visibility="public"/>
            <Method signature="getViewportSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getHScrollbarHeight()" returnType="[ext]int" visibility="public"/>
            <Method signature="getVScrollbarWidth()" returnType="[ext]int" visibility="public"/>
            <Method signature="getVAdjustable()" returnType="java.awt.Adjustable" visibility="public"/>
            <Method signature="getHAdjustable()" returnType="java.awt.Adjustable" visibility="public"/>
            <Method signature="setScrollPosition(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setScrollPosition(java.awt.Point)" returnType="[ext]void" visibility="public"/>
            <Method signature="getScrollPosition()" returnType="java.awt.Point" visibility="public"/>
            <Method signature="setLayout(java.awt.LayoutManager)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="doLayout()" returnType="[ext]void" visibility="public"/>
            <Method signature="calculateChildSize()" returnType="java.awt.Dimension"/>
            <Method signature="layout()" returnType="[ext]void" visibility="public"/>
            <Method signature="printComponents(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.ScrollPane$PeerFixer" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.AdjustmentListener"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.awt.ScrollPane,java.awt.ScrollPane)" returnType="[ext]void"/>
            <Method signature="adjustmentValueChanged(java.awt.event.AdjustmentEvent)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.ScrollPaneAdjustable" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.Adjustable"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.awt.ScrollPane,java.awt.event.AdjustmentListener,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setSpan(int,int,int)" returnType="[ext]void"/>
            <Method signature="getOrientation()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMinimum(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMinimum()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMaximum(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMaximum()" returnType="[ext]int" visibility="public"/>
            <Method signature="setUnitIncrement(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getUnitIncrement()" returnType="[ext]int" visibility="public"/>
            <Method signature="setBlockIncrement(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getBlockIncrement()" returnType="[ext]int" visibility="public"/>
            <Method signature="setVisibleAmount(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getVisibleAmount()" returnType="[ext]int" visibility="public"/>
            <Method signature="setValue(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]int" visibility="public"/>
            <Method signature="addAdjustmentListener(java.awt.event.AdjustmentListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeAdjustmentListener(java.awt.event.AdjustmentListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Container" extends="java.awt.Component" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Component"/>
        <Fields>
            <Field name="ncomponents" type="int"/>
            <Field name="component" type="java.awt.Component[]"/>
            <Field name="layoutMgr" type="java.awt.LayoutManager"/>
            <Field name="containerListener" type="java.awt.event.ContainerListener"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="getComponentCount()" returnType="[ext]int" visibility="public"/>
            <Method signature="countComponents()" returnType="[ext]int" visibility="public"/>
            <Method signature="getComponent(int)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="getComponents()" returnType="[ext]java.awt.Component[]" visibility="public"/>
            <Method signature="getInsets()" returnType="java.awt.Insets" visibility="public"/>
            <Method signature="insets()" returnType="java.awt.Insets" visibility="public"/>
            <Method signature="add(java.awt.Component)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="add(java.lang.String,java.awt.Component)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="add(java.awt.Component,int)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="add(java.awt.Component,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.awt.Component,java.lang.Object,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addImpl(java.awt.Component,java.lang.Object,int)" returnType="[ext]void" visibility="protected"/>
            <Method signature="remove(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeAll()" returnType="[ext]void" visibility="public"/>
            <Method signature="getLayout()" returnType="java.awt.LayoutManager" visibility="public"/>
            <Method signature="setLayout(java.awt.LayoutManager)" returnType="[ext]void" visibility="public"/>
            <Method signature="doLayout()" returnType="[ext]void" visibility="public"/>
            <Method signature="layout()" returnType="[ext]void" visibility="public"/>
            <Method signature="invalidate()" returnType="[ext]void" visibility="public"/>
            <Method signature="validate()" returnType="[ext]void" visibility="public"/>
            <Method signature="validateTree()" returnType="[ext]void" visibility="protected"/>
            <Method signature="getPreferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMaximumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getAlignmentX()" returnType="[ext]float" visibility="public"/>
            <Method signature="getAlignmentY()" returnType="[ext]float" visibility="public"/>
            <Method signature="paint(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="update(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="paintComponents(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="printComponents(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="lightweightPrint(java.awt.Graphics)" returnType="[ext]void"/>
            <Method signature="addContainerListener(java.awt.event.ContainerListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeContainerListener(java.awt.event.ContainerListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processContainerEvent(java.awt.event.ContainerEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="dispatchEventImpl(java.awt.AWTEvent)" returnType="[ext]void"/>
            <Method signature="dispatchEventToSelf(java.awt.AWTEvent)" returnType="[ext]void"/>
            <Method signature="getMouseEventTarget(int,int,boolean)" returnType="java.awt.Component"/>
            <Method signature="setCursor(java.awt.Cursor)" returnType="[ext]void" visibility="public"/>
            <Method signature="updateCursor(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="getCursorTarget(int,int)" returnType="java.awt.Component"/>
            <Method signature="proxyEnableEvents(long)" returnType="[ext]void"/>
            <Method signature="getWindow()" returnType="java.awt.Window"/>
            <Method signature="proxyRequestFocus(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="deliverEvent(java.awt.Event)" returnType="[ext]void" visibility="public"/>
            <Method signature="getComponentAt(int,int)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="locate(int,int)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="getComponentAt(java.awt.Point)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="removeNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="isAncestorOf(java.awt.Component)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
            <Method signature="list(java.io.PrintStream,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="list(java.io.PrintWriter,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setFocusOwner(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="preProcessKeyEvent(java.awt.event.KeyEvent)" returnType="[ext]void"/>
            <Method signature="postProcessKeyEvent(java.awt.event.KeyEvent)" returnType="[ext]void"/>
            <Method signature="transferFocus(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="postsOldMouseEvents()" returnType="[ext]boolean"/>
            <Method signature="nextFocus(java.awt.Component)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.LightweightDispatcher" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Implements mangling="java.awt.EventQueueListener"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.awt.Container)" returnType="[ext]void"/>
            <Method signature="dispose()" returnType="[ext]void"/>
            <Method signature="enableEvents(long)" returnType="[ext]void"/>
            <Method signature="setFocusRequest(java.awt.Component)" returnType="[ext]boolean"/>
            <Method signature="dispatchEvent(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="eventPosted(java.awt.AWTEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="retargetMouseEvent(java.awt.Component,int,java.awt.event.MouseEvent)" returnType="[ext]void"/>
            <Method signature="updateCursor(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="getCursorOn()" returnType="java.awt.Component"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.LightweightDispatcher$TrackEnterExitEvent" extends="java.awt.AWTEvent" isGeneric="false">
        <Extends mangling="java.awt.AWTEvent"/>
        <Implements mangling="java.awt.peer.ActiveEvent"/>
        <Fields>
            <Field name="srcEvent" type="java.awt.event.MouseEvent"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.LightweightDispatcher,java.awt.Component,java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="dispatch()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.TextArea" extends="java.awt.TextComponent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.TextComponent"/>
        <Fields>
            <Field name="rows" type="int"/>
            <Field name="columns" type="int"/>
            <Field name="SCROLLBARS_BOTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLLBARS_VERTICAL_ONLY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLLBARS_HORIZONTAL_ONLY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLLBARS_NONE" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="insert(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="insertText(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="append(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="appendText(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="replaceRange(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="replaceText(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getRows()" returnType="[ext]int" visibility="public"/>
            <Method signature="setRows(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getColumns()" returnType="[ext]int" visibility="public"/>
            <Method signature="setColumns(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getScrollbarVisibility()" returnType="[ext]int" visibility="public"/>
            <Method signature="getPreferredSize(int,int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize(int,int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getPreferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize(int,int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize(int,int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Choice" extends="java.awt.Component" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Component"/>
        <Implements mangling="java.awt.ItemSelectable"/>
        <Fields>
            <Field name="pItems" type="java.util.Vector"/>
            <Field name="selectedIndex" type="int"/>
            <Field name="itemListener" type="java.awt.event.ItemListener"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getItemCount()" returnType="[ext]int" visibility="public"/>
            <Method signature="countItems()" returnType="[ext]int" visibility="public"/>
            <Method signature="getItem(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="add(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="addItem(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="insert(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeAll()" returnType="[ext]void" visibility="public"/>
            <Method signature="getSelectedItem()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getSelectedObjects()" returnType="[ext]java.lang.Object[]" visibility="public"/>
            <Method signature="getSelectedIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="select(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="select(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="addItemListener(java.awt.event.ItemListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeItemListener(java.awt.event.ItemListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processItemEvent(java.awt.event.ItemEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Frame" extends="java.awt.Window" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Window"/>
        <Implements mangling="java.awt.MenuContainer"/>
        <Fields>
            <Field name="DEFAULT_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CROSSHAIR_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TEXT_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WAIT_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SW_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SE_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NW_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NE_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="N_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="S_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="W_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="E_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HAND_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOVE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="title" type="java.lang.String"/>
            <Field name="icon" type="java.awt.Image"/>
            <Field name="menuBar" type="java.awt.MenuBar"/>
            <Field name="resizable" type="boolean"/>
            <Field name="mbManagement" type="boolean"/>
            <Field name="ownedWindows" type="java.util.Vector"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addOwnedWindow(java.awt.Window)" returnType="java.awt.Window"/>
            <Method signature="removeOwnedWindow(java.awt.Window)" returnType="[ext]void"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getTitle()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setTitle(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getIconImage()" returnType="java.awt.Image" visibility="public"/>
            <Method signature="setIconImage(java.awt.Image)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMenuBar()" returnType="java.awt.MenuBar" visibility="public"/>
            <Method signature="setMenuBar(java.awt.MenuBar)" returnType="[ext]void" visibility="public"/>
            <Method signature="isResizable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setResizable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.awt.MenuComponent)" returnType="[ext]void" visibility="public"/>
            <Method signature="dispose()" returnType="[ext]void" visibility="public"/>
            <Method signature="postProcessKeyEvent(java.awt.event.KeyEvent)" returnType="[ext]void"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
            <Method signature="setCursor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getCursorType()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Window" extends="java.awt.Container" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Container"/>
        <Fields>
            <Field name="warningString" type="java.lang.String"/>
            <Field name="OPENED" type="int" isStatic="true" isFinal="true"/>
            <Field name="state" type="int"/>
            <Field name="windowListener" type="java.awt.event.WindowListener"/>
            <Field name="inputContext" type="sun.awt.im.InputContext"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="+ctor(java.awt.Frame)" returnType="[ext]void" visibility="public"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="pack()" returnType="[ext]void" visibility="public"/>
            <Method signature="show()" returnType="[ext]void" visibility="public"/>
            <Method signature="postWindowEvent(int)" returnType="[ext]void"/>
            <Method signature="dispose()" returnType="[ext]void" visibility="public"/>
            <Method signature="toFront()" returnType="[ext]void" visibility="public"/>
            <Method signature="toBack()" returnType="[ext]void" visibility="public"/>
            <Method signature="getToolkit()" returnType="java.awt.Toolkit" visibility="public"/>
            <Method signature="getWarningString()" returnType="java.lang.String" isFinal="true" visibility="public"/>
            <Method signature="getLocale()" returnType="java.util.Locale" visibility="public"/>
            <Method signature="getInputContext()" returnType="sun.awt.im.InputContext"/>
            <Method signature="setCursor(java.awt.Cursor)" returnType="[ext]void" visibility="public"/>
            <Method signature="addWindowListener(java.awt.event.WindowListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeWindowListener(java.awt.event.WindowListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processWindowEvent(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="preProcessKeyEvent(java.awt.event.KeyEvent)" returnType="[ext]void"/>
            <Method signature="postProcessKeyEvent(java.awt.event.KeyEvent)" returnType="[ext]void"/>
            <Method signature="setFocusOwner(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="transferFocus(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="isActive()" returnType="[ext]boolean"/>
            <Method signature="getFocusOwner()" returnType="java.awt.Component" visibility="public"/>
            <Method signature="nextFocus(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="dispatchEventImpl(java.awt.AWTEvent)" returnType="[ext]void"/>
            <Method signature="postEvent(java.awt.Event)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isShowing()" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.FocusManager" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="focusRoot" type="java.awt.Container"/>
            <Field name="focusOwner" type="java.awt.Component"/>
            <Field name="serialVersionUID" type="long" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Container)" returnType="[ext]void"/>
            <Method signature="activateFocus()" returnType="[ext]void"/>
            <Method signature="setFocusOwner(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="getFocusOwner()" returnType="java.awt.Component"/>
            <Method signature="focusNext()" returnType="[ext]boolean"/>
            <Method signature="focusNext(java.awt.Component)" returnType="[ext]boolean"/>
            <Method signature="focusPrevious()" returnType="[ext]boolean"/>
            <Method signature="focusPrevious(java.awt.Component)" returnType="[ext]boolean"/>
            <Method signature="assignFocus(java.awt.Component)" returnType="[ext]boolean"/>
            <Method signature="assignFocus(java.awt.Component,boolean)" returnType="[ext]boolean"/>
            <Method signature="focusForward(java.awt.Container)" returnType="[ext]boolean"/>
            <Method signature="focusBackward(java.awt.Container)" returnType="[ext]boolean"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Canvas" extends="java.awt.Component" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Component"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="paint(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="postsOldMouseEvents()" returnType="[ext]boolean"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Panel" extends="java.awt.Container" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Container"/>
        <Fields>
            <Field name="panelLayout" type="java.awt.LayoutManager" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.LayoutManager)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Dialog" extends="java.awt.Window" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Window"/>
        <Fields>
            <Field name="resizable" type="boolean"/>
            <Field name="modal" type="boolean"/>
            <Field name="title" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Frame)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Frame,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Frame,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Frame,java.lang.String,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="isModal()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setModal(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getTitle()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setTitle(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="show()" returnType="[ext]void" visibility="public"/>
            <Method signature="isResizable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setResizable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Menu" extends="java.awt.MenuItem" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.MenuItem"/>
        <Implements mangling="java.awt.MenuContainer"/>
        <Fields>
            <Field name="items" type="java.util.Vector"/>
            <Field name="tearOff" type="boolean"/>
            <Field name="isHelpMenu" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="removeNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="isTearOff()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getItemCount()" returnType="[ext]int" visibility="public"/>
            <Method signature="countItems()" returnType="[ext]int" visibility="public"/>
            <Method signature="getItem(int)" returnType="java.awt.MenuItem" visibility="public"/>
            <Method signature="add(java.awt.MenuItem)" returnType="java.awt.MenuItem" visibility="public"/>
            <Method signature="add(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="insert(java.awt.MenuItem,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="insert(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addSeparator()" returnType="[ext]void" visibility="public"/>
            <Method signature="insertSeparator(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.awt.MenuComponent)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeAll()" returnType="[ext]void" visibility="public"/>
            <Method signature="handleShortcut(java.awt.event.KeyEvent)" returnType="[ext]boolean"/>
            <Method signature="getShortcutMenuItem(java.awt.MenuShortcut)" returnType="java.awt.MenuItem"/>
            <Method signature="shortcuts()" returnType="java.util.Enumeration"/>
            <Method signature="deleteShortcut(java.awt.MenuShortcut)" returnType="[ext]void"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.MenuItem" extends="java.awt.MenuComponent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.MenuComponent"/>
        <Fields>
            <Field name="enabled" type="boolean"/>
            <Field name="label" type="java.lang.String"/>
            <Field name="actionCommand" type="java.lang.String"/>
            <Field name="eventMask" type="long"/>
            <Field name="actionListener" type="java.awt.event.ActionListener"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.awt.MenuShortcut)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getLabel()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setLabel(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="isEnabled()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setEnabled(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="enable()" returnType="[ext]void" visibility="public"/>
            <Method signature="enable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="disable()" returnType="[ext]void" visibility="public"/>
            <Method signature="getShortcut()" returnType="java.awt.MenuShortcut" visibility="public"/>
            <Method signature="setShortcut(java.awt.MenuShortcut)" returnType="[ext]void" visibility="public"/>
            <Method signature="deleteShortcut()" returnType="[ext]void" visibility="public"/>
            <Method signature="deleteShortcut(java.awt.MenuShortcut)" returnType="[ext]void"/>
            <Method signature="handleShortcut(java.awt.event.KeyEvent)" returnType="[ext]boolean"/>
            <Method signature="getShortcutMenuItem(java.awt.MenuShortcut)" returnType="java.awt.MenuItem"/>
            <Method signature="enableEvents(long)" returnType="[ext]void" isFinal="true" visibility="protected"/>
            <Method signature="disableEvents(long)" returnType="[ext]void" isFinal="true" visibility="protected"/>
            <Method signature="setActionCommand(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getActionCommand()" returnType="java.lang.String" visibility="public"/>
            <Method signature="addActionListener(java.awt.event.ActionListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeActionListener(java.awt.event.ActionListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processActionEvent(java.awt.event.ActionEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.MenuComponent" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="peer" type="java.awt.peer.MenuComponentPeer"/>
            <Field name="parent" type="java.awt.MenuContainer"/>
            <Field name="font" type="java.awt.Font"/>
            <Field name="newEventsOnly" type="boolean"/>
            <Field name="actionListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="itemListenerK" type="java.lang.String" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setName(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getParent()" returnType="java.awt.MenuContainer" visibility="public"/>
            <Method signature="getPeer()" returnType="java.awt.peer.MenuComponentPeer" visibility="public"/>
            <Method signature="getFont()" returnType="java.awt.Font" visibility="public"/>
            <Method signature="setFont(java.awt.Font)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="postEvent(java.awt.Event)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="dispatchEvent(java.awt.AWTEvent)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="dispatchEventImpl(java.awt.AWTEvent)" returnType="[ext]void"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getTreeLock()" returnType="[ext]void" isFinal="true" visibility="protected"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.MenuBar" extends="java.awt.MenuComponent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.MenuComponent"/>
        <Implements mangling="java.awt.MenuContainer"/>
        <Fields>
            <Field name="menus" type="java.util.Vector"/>
            <Field name="helpMenu" type="java.awt.Menu"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="removeNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getHelpMenu()" returnType="java.awt.Menu" visibility="public"/>
            <Method signature="setHelpMenu(java.awt.Menu)" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.awt.Menu)" returnType="java.awt.Menu" visibility="public"/>
            <Method signature="remove(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.awt.MenuComponent)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMenuCount()" returnType="[ext]int" visibility="public"/>
            <Method signature="countMenus()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMenu(int)" returnType="java.awt.Menu" visibility="public"/>
            <Method signature="shortcuts()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="getShortcutMenuItem(java.awt.MenuShortcut)" returnType="java.awt.MenuItem" visibility="public"/>
            <Method signature="handleShortcut(java.awt.event.KeyEvent)" returnType="[ext]boolean"/>
            <Method signature="deleteShortcut(java.awt.MenuShortcut)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.PopupMenu" extends="java.awt.Menu" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Menu"/>
        <Fields>
            <Field name="nameCounter" type="int" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="show(java.awt.Component,int,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.FileDialog" extends="java.awt.Dialog" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Dialog"/>
        <Fields>
            <Field name="LOAD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SAVE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="mode" type="int"/>
            <Field name="dir" type="java.lang.String"/>
            <Field name="file" type="java.lang.String"/>
            <Field name="filter" type="java.io.FilenameFilter"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Frame)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Frame,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Frame,java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getMode()" returnType="[ext]int" visibility="public"/>
            <Method signature="setMode(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDirectory()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setDirectory(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getFile()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setFile(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getFilenameFilter()" returnType="java.io.FilenameFilter" visibility="public"/>
            <Method signature="setFilenameFilter(java.io.FilenameFilter)" returnType="[ext]void" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
            <Method signature="postsOldMouseEvents()" returnType="[ext]boolean"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.CheckboxMenuItem" extends="java.awt.MenuItem" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.MenuItem"/>
        <Implements mangling="java.awt.ItemSelectable"/>
        <Fields>
            <Field name="state" type="boolean"/>
            <Field name="itemListener" type="java.awt.event.ItemListener"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="constructComponentName()" returnType="java.lang.String"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getState()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setState(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSelectedObjects()" returnType="[ext]java.lang.Object[]" visibility="public"/>
            <Method signature="addItemListener(java.awt.event.ItemListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeItemListener(java.awt.event.ItemListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="eventEnabled(java.awt.AWTEvent)" returnType="[ext]boolean"/>
            <Method signature="processEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="processItemEvent(java.awt.event.ItemEvent)" returnType="[ext]void" visibility="protected"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.FontMetrics" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="font" type="java.awt.Font" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Font)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getFont()" returnType="java.awt.Font" visibility="public"/>
            <Method signature="getLeading()" returnType="[ext]int" visibility="public"/>
            <Method signature="getAscent()" returnType="[ext]int" visibility="public"/>
            <Method signature="getDescent()" returnType="[ext]int" visibility="public"/>
            <Method signature="getHeight()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMaxAscent()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMaxDescent()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMaxDecent()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMaxAdvance()" returnType="[ext]int" visibility="public"/>
            <Method signature="charWidth(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="charWidth(char)" returnType="[ext]int" visibility="public"/>
            <Method signature="stringWidth(java.lang.String)" returnType="[ext]int" visibility="public"/>
            <Method signature="charsWidth(char[],int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="bytesWidth(byte[],int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="getWidths()" returnType="[ext]int[]" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.AWTError" extends="java.lang.Error" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Error"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.PrintJob" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getGraphics()" returnType="java.awt.Graphics" isAbstract="true" visibility="public"/>
            <Method signature="getPageDimension()" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="getPageResolution()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="lastPageFirst()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="end()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.EventQueue" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="eventQueueListener" type="java.awt.EventQueueListener"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="postEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="getNextEvent()" returnType="java.awt.AWTEvent" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="peekEvent()" returnType="java.awt.AWTEvent" visibility="public"/>
            <Method signature="peekEvent(int)" returnType="java.awt.AWTEvent" visibility="public"/>
            <Method signature="addEventQueueListener(java.awt.EventQueueListener)" returnType="[ext]void"/>
            <Method signature="removeEventQueueListener(java.awt.EventQueueListener)" returnType="[ext]void"/>
            <Method signature="changeKeyEventFocus(java.lang.Object)" returnType="[ext]void"/>
            <Method signature="removeSourceEvents(java.lang.Object)" returnType="[ext]void"/>
            <Method signature="removeEvents(java.lang.Class,int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.EventQueue$EventQueueMulticaster" extends="java.awt.AWTEventMulticaster" isGeneric="false">
        <Extends mangling="java.awt.AWTEventMulticaster"/>
        <Implements mangling="java.awt.EventQueueListener"/>
        <Methods>
            <Method signature="+ctor(java.util.EventListener,java.util.EventListener)" returnType="[ext]void"/>
            <Method signature="add(java.awt.EventQueueListener,java.awt.EventQueueListener)" isStatic="true" returnType="java.awt.EventQueueListener"/>
            <Method signature="remove(java.awt.EventQueueListener,java.awt.EventQueueListener)" isStatic="true" returnType="java.awt.EventQueueListener"/>
            <Method signature="remove(java.util.EventListener)" returnType="java.util.EventListener" visibility="protected"/>
            <Method signature="eventPosted(java.awt.AWTEvent)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.EventQueueItem" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="event" type="java.awt.AWTEvent"/>
            <Field name="id" type="int"/>
            <Field name="next" type="java.awt.EventQueueItem"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.AWTEvent)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.AWTEventMulticaster" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.ComponentListener"/>
        <Implements mangling="java.awt.event.ContainerListener"/>
        <Implements mangling="java.awt.event.FocusListener"/>
        <Implements mangling="java.awt.event.KeyListener"/>
        <Implements mangling="java.awt.event.MouseListener"/>
        <Implements mangling="java.awt.event.MouseMotionListener"/>
        <Implements mangling="java.awt.event.WindowListener"/>
        <Implements mangling="java.awt.event.ActionListener"/>
        <Implements mangling="java.awt.event.ItemListener"/>
        <Implements mangling="java.awt.event.AdjustmentListener"/>
        <Implements mangling="java.awt.event.TextListener"/>
        <Fields>
            <Field name="a" type="java.util.EventListener" isFinal="true" visibility="protected"/>
            <Field name="b" type="java.util.EventListener" isFinal="true" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.util.EventListener,java.util.EventListener)" returnType="[ext]void" visibility="protected"/>
            <Method signature="remove(java.util.EventListener)" returnType="java.util.EventListener" visibility="protected"/>
            <Method signature="componentResized(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentMoved(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentShown(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentHidden(java.awt.event.ComponentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentAdded(java.awt.event.ContainerEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="componentRemoved(java.awt.event.ContainerEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="focusGained(java.awt.event.FocusEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="focusLost(java.awt.event.FocusEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="keyTyped(java.awt.event.KeyEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="keyPressed(java.awt.event.KeyEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="keyReleased(java.awt.event.KeyEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mouseClicked(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mousePressed(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mouseReleased(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mouseEntered(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mouseExited(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mouseDragged(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="mouseMoved(java.awt.event.MouseEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowOpened(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowClosing(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowClosed(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowIconified(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowDeiconified(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowActivated(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="windowDeactivated(java.awt.event.WindowEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="actionPerformed(java.awt.event.ActionEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="itemStateChanged(java.awt.event.ItemEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="adjustmentValueChanged(java.awt.event.AdjustmentEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="textValueChanged(java.awt.event.TextEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.awt.event.ComponentListener,java.awt.event.ComponentListener)" isStatic="true" returnType="java.awt.event.ComponentListener" visibility="public"/>
            <Method signature="add(java.awt.event.ContainerListener,java.awt.event.ContainerListener)" isStatic="true" returnType="java.awt.event.ContainerListener" visibility="public"/>
            <Method signature="add(java.awt.event.FocusListener,java.awt.event.FocusListener)" isStatic="true" returnType="java.awt.event.FocusListener" visibility="public"/>
            <Method signature="add(java.awt.event.KeyListener,java.awt.event.KeyListener)" isStatic="true" returnType="java.awt.event.KeyListener" visibility="public"/>
            <Method signature="add(java.awt.event.MouseListener,java.awt.event.MouseListener)" isStatic="true" returnType="java.awt.event.MouseListener" visibility="public"/>
            <Method signature="add(java.awt.event.MouseMotionListener,java.awt.event.MouseMotionListener)" isStatic="true" returnType="java.awt.event.MouseMotionListener" visibility="public"/>
            <Method signature="add(java.awt.event.WindowListener,java.awt.event.WindowListener)" isStatic="true" returnType="java.awt.event.WindowListener" visibility="public"/>
            <Method signature="add(java.awt.event.ActionListener,java.awt.event.ActionListener)" isStatic="true" returnType="java.awt.event.ActionListener" visibility="public"/>
            <Method signature="add(java.awt.event.ItemListener,java.awt.event.ItemListener)" isStatic="true" returnType="java.awt.event.ItemListener" visibility="public"/>
            <Method signature="add(java.awt.event.AdjustmentListener,java.awt.event.AdjustmentListener)" isStatic="true" returnType="java.awt.event.AdjustmentListener" visibility="public"/>
            <Method signature="add(java.awt.event.TextListener,java.awt.event.TextListener)" isStatic="true" returnType="java.awt.event.TextListener" visibility="public"/>
            <Method signature="remove(java.awt.event.ComponentListener,java.awt.event.ComponentListener)" isStatic="true" returnType="java.awt.event.ComponentListener" visibility="public"/>
            <Method signature="remove(java.awt.event.ContainerListener,java.awt.event.ContainerListener)" isStatic="true" returnType="java.awt.event.ContainerListener" visibility="public"/>
            <Method signature="remove(java.awt.event.FocusListener,java.awt.event.FocusListener)" isStatic="true" returnType="java.awt.event.FocusListener" visibility="public"/>
            <Method signature="remove(java.awt.event.KeyListener,java.awt.event.KeyListener)" isStatic="true" returnType="java.awt.event.KeyListener" visibility="public"/>
            <Method signature="remove(java.awt.event.MouseListener,java.awt.event.MouseListener)" isStatic="true" returnType="java.awt.event.MouseListener" visibility="public"/>
            <Method signature="remove(java.awt.event.MouseMotionListener,java.awt.event.MouseMotionListener)" isStatic="true" returnType="java.awt.event.MouseMotionListener" visibility="public"/>
            <Method signature="remove(java.awt.event.WindowListener,java.awt.event.WindowListener)" isStatic="true" returnType="java.awt.event.WindowListener" visibility="public"/>
            <Method signature="remove(java.awt.event.ActionListener,java.awt.event.ActionListener)" isStatic="true" returnType="java.awt.event.ActionListener" visibility="public"/>
            <Method signature="remove(java.awt.event.ItemListener,java.awt.event.ItemListener)" isStatic="true" returnType="java.awt.event.ItemListener" visibility="public"/>
            <Method signature="remove(java.awt.event.AdjustmentListener,java.awt.event.AdjustmentListener)" isStatic="true" returnType="java.awt.event.AdjustmentListener" visibility="public"/>
            <Method signature="remove(java.awt.event.TextListener,java.awt.event.TextListener)" isStatic="true" returnType="java.awt.event.TextListener" visibility="public"/>
            <Method signature="addInternal(java.util.EventListener,java.util.EventListener)" isStatic="true" returnType="java.util.EventListener" visibility="protected"/>
            <Method signature="removeInternal(java.util.EventListener,java.util.EventListener)" isStatic="true" returnType="java.util.EventListener" visibility="protected"/>
            <Method signature="saveInternal(java.io.ObjectOutputStream,java.lang.String)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="save(java.io.ObjectOutputStream,java.lang.String,java.util.EventListener)" isStatic="true" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Interface mangling="java.awt.EventQueueListener" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="eventPosted(java.awt.AWTEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.Graphics" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="create()" returnType="java.awt.Graphics" isAbstract="true" visibility="public"/>
            <Method signature="create(int,int,int,int)" returnType="java.awt.Graphics" visibility="public"/>
            <Method signature="translate(int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getColor()" returnType="java.awt.Color" isAbstract="true" visibility="public"/>
            <Method signature="setColor(java.awt.Color)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setPaintMode()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setXORMode(java.awt.Color)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getFont()" returnType="java.awt.Font" isAbstract="true" visibility="public"/>
            <Method signature="setFont(java.awt.Font)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getFontMetrics()" returnType="java.awt.FontMetrics" visibility="public"/>
            <Method signature="getFontMetrics(java.awt.Font)" returnType="java.awt.FontMetrics" isAbstract="true" visibility="public"/>
            <Method signature="getClipBounds()" returnType="java.awt.Rectangle" isAbstract="true" visibility="public"/>
            <Method signature="clipRect(int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setClip(int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getClip()" returnType="java.awt.Shape" isAbstract="true" visibility="public"/>
            <Method signature="setClip(java.awt.Shape)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="copyArea(int,int,int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="drawLine(int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="fillRect(int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="drawRect(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="clearRect(int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="drawRoundRect(int,int,int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="fillRoundRect(int,int,int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="draw3DRect(int,int,int,int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="fill3DRect(int,int,int,int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawOval(int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="fillOval(int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="drawArc(int,int,int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="fillArc(int,int,int,int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="drawPolyline(int[],int[],int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="drawPolygon(int[],int[],int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="drawPolygon(java.awt.Polygon)" returnType="[ext]void" visibility="public"/>
            <Method signature="fillPolygon(int[],int[],int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="fillPolygon(java.awt.Polygon)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawString(java.lang.String,int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="drawChars(char[],int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawBytes(byte[],int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="dispose()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getClipRect()" returnType="java.awt.Rectangle" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Cursor" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="DEFAULT_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CROSSHAIR_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TEXT_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WAIT_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SW_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SE_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NW_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NE_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="N_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="S_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="W_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="E_RESIZE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HAND_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MOVE_CURSOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="predefined" type="java.awt.Cursor[]" isStatic="true" visibility="protected"/>
            <Field name="type" type="int"/>
        </Fields>
        <Methods>
            <Method signature="getPredefinedCursor(int)" isStatic="true" returnType="java.awt.Cursor" visibility="public"/>
            <Method signature="getDefaultCursor()" isStatic="true" returnType="java.awt.Cursor" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getType()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.IllegalComponentStateException" extends="java.lang.IllegalStateException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IllegalStateException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.CheckboxGroup" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="selectedCheckbox" type="java.awt.Checkbox"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="getSelectedCheckbox()" returnType="java.awt.Checkbox" visibility="public"/>
            <Method signature="getCurrent()" returnType="java.awt.Checkbox" visibility="public"/>
            <Method signature="setSelectedCheckbox(java.awt.Checkbox)" returnType="[ext]void" visibility="public"/>
            <Method signature="setCurrent(java.awt.Checkbox)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Insets" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="top" type="int" visibility="public"/>
            <Field name="left" type="int" visibility="public"/>
            <Field name="bottom" type="int" visibility="public"/>
            <Field name="right" type="int" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.LayoutManager" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="addLayoutComponent(java.lang.String,java.awt.Component)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="removeLayoutComponent(java.awt.Component)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="preferredLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="minimumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="layoutContainer(java.awt.Container)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.BorderLayout" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.LayoutManager2"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="hgap" type="int"/>
            <Field name="vgap" type="int"/>
            <Field name="north" type="java.awt.Component"/>
            <Field name="west" type="java.awt.Component"/>
            <Field name="east" type="java.awt.Component"/>
            <Field name="south" type="java.awt.Component"/>
            <Field name="center" type="java.awt.Component"/>
            <Field name="NORTH" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SOUTH" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="EAST" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WEST" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENTER" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getHgap()" returnType="[ext]int" visibility="public"/>
            <Method signature="setHgap(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getVgap()" returnType="[ext]int" visibility="public"/>
            <Method signature="setVgap(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addLayoutComponent(java.awt.Component,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="addLayoutComponent(java.lang.String,java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeLayoutComponent(java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="minimumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="maximumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getLayoutAlignmentX(java.awt.Container)" returnType="[ext]float" visibility="public"/>
            <Method signature="getLayoutAlignmentY(java.awt.Container)" returnType="[ext]float" visibility="public"/>
            <Method signature="invalidateLayout(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="layoutContainer(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.LayoutManager2" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.LayoutManager"/>
        <Methods>
            <Method signature="addLayoutComponent(java.awt.Component,java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="maximumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" isAbstract="true" visibility="public"/>
            <Method signature="getLayoutAlignmentX(java.awt.Container)" returnType="[ext]float" isAbstract="true" visibility="public"/>
            <Method signature="getLayoutAlignmentY(java.awt.Container)" returnType="[ext]float" isAbstract="true" visibility="public"/>
            <Method signature="invalidateLayout(java.awt.Container)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.FlowLayout" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.LayoutManager"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="LEFT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENTER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="RIGHT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="align" type="int"/>
            <Field name="hgap" type="int"/>
            <Field name="vgap" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getAlignment()" returnType="[ext]int" visibility="public"/>
            <Method signature="setAlignment(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getHgap()" returnType="[ext]int" visibility="public"/>
            <Method signature="setHgap(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getVgap()" returnType="[ext]int" visibility="public"/>
            <Method signature="setVgap(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addLayoutComponent(java.lang.String,java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeLayoutComponent(java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="preferredLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="layoutContainer(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.EventDispatchThread" extends="java.lang.Thread" isGeneric="false">
        <Extends mangling="java.lang.Thread"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.awt.EventQueue)" returnType="[ext]void"/>
            <Method signature="stopDispatchingNoJoin()" returnType="[ext]void"/>
            <Method signature="stopDispatching()" returnType="[ext]void" visibility="public"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.EventDispatchThread$EmptyEvent" extends="java.awt.AWTEvent" isGeneric="false">
        <Extends mangling="java.awt.AWTEvent"/>
        <Implements mangling="java.awt.peer.ActiveEvent"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.awt.EventDispatchThread)" returnType="[ext]void" visibility="public"/>
            <Method signature="dispatch()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.MenuShortcut" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="key" type="int"/>
            <Field name="usesShift" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getKey()" returnType="[ext]int" visibility="public"/>
            <Method signature="usesShiftModifier()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equals(java.awt.MenuShortcut)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="paramString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.Polygon" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.Shape"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="npoints" type="int" visibility="public"/>
            <Field name="xpoints" type="int[]" visibility="public"/>
            <Field name="ypoints" type="int[]" visibility="public"/>
            <Field name="bounds" type="java.awt.Rectangle" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int[],int[],int)" returnType="[ext]void" visibility="public"/>
            <Method signature="translate(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="calculateBounds(int[],int[],int)" returnType="[ext]void"/>
            <Method signature="updateBounds(int,int)" returnType="[ext]void"/>
            <Method signature="addPoint(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getBounds()" returnType="java.awt.Rectangle" visibility="public"/>
            <Method signature="getBoundingBox()" returnType="java.awt.Rectangle" visibility="public"/>
            <Method signature="contains(java.awt.Point)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="contains(int,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="inside(int,int)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.GridLayout" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.LayoutManager"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="hgap" type="int"/>
            <Field name="vgap" type="int"/>
            <Field name="rows" type="int"/>
            <Field name="cols" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getRows()" returnType="[ext]int" visibility="public"/>
            <Method signature="setRows(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getColumns()" returnType="[ext]int" visibility="public"/>
            <Method signature="setColumns(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getHgap()" returnType="[ext]int" visibility="public"/>
            <Method signature="setHgap(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getVgap()" returnType="[ext]int" visibility="public"/>
            <Method signature="setVgap(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addLayoutComponent(java.lang.String,java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeLayoutComponent(java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="preferredLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="layoutContainer(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.GridBagConstraints" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="RELATIVE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="REMAINDER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NONE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BOTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="HORIZONTAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VERTICAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CENTER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NORTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NORTHEAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="EAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SOUTHEAST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SOUTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SOUTHWEST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WEST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NORTHWEST" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="gridx" type="int" visibility="public"/>
            <Field name="gridy" type="int" visibility="public"/>
            <Field name="gridwidth" type="int" visibility="public"/>
            <Field name="gridheight" type="int" visibility="public"/>
            <Field name="weightx" type="double" visibility="public"/>
            <Field name="weighty" type="double" visibility="public"/>
            <Field name="anchor" type="int" visibility="public"/>
            <Field name="fill" type="int" visibility="public"/>
            <Field name="insets" type="java.awt.Insets" visibility="public"/>
            <Field name="ipadx" type="int" visibility="public"/>
            <Field name="ipady" type="int" visibility="public"/>
            <Field name="tempX" type="int"/>
            <Field name="tempY" type="int"/>
            <Field name="tempWidth" type="int"/>
            <Field name="tempHeight" type="int"/>
            <Field name="minWidth" type="int"/>
            <Field name="minHeight" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.GridBagLayoutInfo" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="width" type="int"/>
            <Field name="height" type="int"/>
            <Field name="startx" type="int"/>
            <Field name="starty" type="int"/>
            <Field name="minWidth" type="int[]"/>
            <Field name="minHeight" type="int[]"/>
            <Field name="weightX" type="double[]"/>
            <Field name="weightY" type="double[]"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.GridBagLayout" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.LayoutManager2"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="MAXGRIDSIZE" type="int" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="MINSIZE" type="int" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="PREFERREDSIZE" type="int" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="comptable" type="java.util.Hashtable" visibility="protected"/>
            <Field name="defaultConstraints" type="java.awt.GridBagConstraints" visibility="protected"/>
            <Field name="layoutInfo" type="java.awt.GridBagLayoutInfo" visibility="protected"/>
            <Field name="columnWidths" type="int[]" visibility="public"/>
            <Field name="rowHeights" type="int[]" visibility="public"/>
            <Field name="columnWeights" type="double[]" visibility="public"/>
            <Field name="rowWeights" type="double[]" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="setConstraints(java.awt.Component,java.awt.GridBagConstraints)" returnType="[ext]void" visibility="public"/>
            <Method signature="getConstraints(java.awt.Component)" returnType="java.awt.GridBagConstraints" visibility="public"/>
            <Method signature="lookupConstraints(java.awt.Component)" returnType="java.awt.GridBagConstraints" visibility="protected"/>
            <Method signature="getLayoutOrigin()" returnType="java.awt.Point" visibility="public"/>
            <Method signature="getLayoutDimensions()" returnType="[ext]int[][]" visibility="public"/>
            <Method signature="getLayoutWeights()" returnType="[ext]double[][]" visibility="public"/>
            <Method signature="location(int,int)" returnType="java.awt.Point" visibility="public"/>
            <Method signature="addLayoutComponent(java.lang.String,java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="addLayoutComponent(java.awt.Component,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeLayoutComponent(java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="preferredLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="maximumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getLayoutAlignmentX(java.awt.Container)" returnType="[ext]float" visibility="public"/>
            <Method signature="getLayoutAlignmentY(java.awt.Container)" returnType="[ext]float" visibility="public"/>
            <Method signature="invalidateLayout(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="layoutContainer(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="GetLayoutInfo(java.awt.Container,int)" returnType="java.awt.GridBagLayoutInfo" visibility="protected"/>
            <Method signature="AdjustForGravity(java.awt.GridBagConstraints,java.awt.Rectangle)" returnType="[ext]void" visibility="protected"/>
            <Method signature="GetMinSize(java.awt.Container,java.awt.GridBagLayoutInfo)" returnType="java.awt.Dimension" visibility="protected"/>
            <Method signature="ArrangeGrid(java.awt.Container)" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.CardLayout" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.LayoutManager2"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="tab" type="java.util.Hashtable"/>
            <Field name="hgap" type="int"/>
            <Field name="vgap" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getHgap()" returnType="[ext]int" visibility="public"/>
            <Method signature="setHgap(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getVgap()" returnType="[ext]int" visibility="public"/>
            <Method signature="setVgap(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addLayoutComponent(java.awt.Component,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="addLayoutComponent(java.lang.String,java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeLayoutComponent(java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="preferredLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="maximumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getLayoutAlignmentX(java.awt.Container)" returnType="[ext]float" visibility="public"/>
            <Method signature="getLayoutAlignmentY(java.awt.Container)" returnType="[ext]float" visibility="public"/>
            <Method signature="invalidateLayout(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="layoutContainer(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkLayout(java.awt.Container)" returnType="[ext]void"/>
            <Method signature="first(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="next(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="previous(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="last(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="show(java.awt.Container,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.SystemColor" extends="java.awt.Color" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.awt.Color"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="DESKTOP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ACTIVE_CAPTION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ACTIVE_CAPTION_TEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ACTIVE_CAPTION_BORDER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="INACTIVE_CAPTION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="INACTIVE_CAPTION_TEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="INACTIVE_CAPTION_BORDER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_BORDER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="WINDOW_TEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MENU" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MENU_TEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TEXT_TEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TEXT_HIGHLIGHT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TEXT_HIGHLIGHT_TEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TEXT_INACTIVE_TEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONTROL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONTROL_TEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONTROL_HIGHLIGHT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONTROL_LT_HIGHLIGHT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONTROL_SHADOW" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONTROL_DK_SHADOW" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SCROLLBAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="INFO" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="INFO_TEXT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NUM_COLORS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="desktop" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="activeCaption" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="activeCaptionText" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="activeCaptionBorder" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="inactiveCaption" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="inactiveCaptionText" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="inactiveCaptionBorder" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="window" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="windowBorder" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="windowText" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="menu" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="menuText" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="text" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="textText" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="textHighlight" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="textHighlightText" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="textInactiveText" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="control" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="controlText" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="controlHighlight" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="controlLtHighlight" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="controlShadow" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="controlDkShadow" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="scrollbar" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="info" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="infoText" type="java.awt.SystemColor" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="getRGB()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.awt.PrintGraphics" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getPrintJob()" returnType="java.awt.PrintJob" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.awt.MediaTracker" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="target" type="java.awt.Component"/>
            <Field name="head" type="java.awt.MediaEntry"/>
            <Field name="LOADING" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ABORTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ERRORED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="COMPLETE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DONE" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="addImage(java.awt.Image,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addImage(java.awt.Image,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAll()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkAll(boolean)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isErrorAny()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getErrorsAny()" returnType="[ext]java.lang.Object[]" visibility="public"/>
            <Method signature="waitForAll()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="waitForAll(long)" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="statusAll(boolean)" returnType="[ext]int" visibility="public"/>
            <Method signature="checkID(int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkID(int,boolean)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isErrorID(int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getErrorsID(int)" returnType="[ext]java.lang.Object[]" visibility="public"/>
            <Method signature="waitForID(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="waitForID(int,long)" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="statusID(int,boolean)" returnType="[ext]int" visibility="public"/>
            <Method signature="removeImage(java.awt.Image)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeImage(java.awt.Image,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeImage(java.awt.Image,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setDone()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.MediaEntry" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="tracker" type="java.awt.MediaTracker"/>
            <Field name="ID" type="int"/>
            <Field name="next" type="java.awt.MediaEntry"/>
            <Field name="status" type="int"/>
            <Field name="cancelled" type="boolean"/>
            <Field name="LOADING" type="int" isStatic="true" isFinal="true"/>
            <Field name="ABORTED" type="int" isStatic="true" isFinal="true"/>
            <Field name="ERRORED" type="int" isStatic="true" isFinal="true"/>
            <Field name="COMPLETE" type="int" isStatic="true" isFinal="true"/>
            <Field name="LOADSTARTED" type="int" isStatic="true" isFinal="true"/>
            <Field name="DONE" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.MediaTracker,int)" returnType="[ext]void"/>
            <Method signature="getMedia()" returnType="[ext]void" isAbstract="true"/>
            <Method signature="insert(java.awt.MediaEntry,java.awt.MediaEntry)" isStatic="true" returnType="java.awt.MediaEntry"/>
            <Method signature="getID()" returnType="[ext]int"/>
            <Method signature="startLoad()" returnType="[ext]void" isAbstract="true"/>
            <Method signature="cancel()" returnType="[ext]void"/>
            <Method signature="getStatus(boolean,boolean)" returnType="[ext]int"/>
            <Method signature="setStatus(int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.awt.ImageMediaEntry" extends="java.awt.MediaEntry" isGeneric="false">
        <Extends mangling="java.awt.MediaEntry"/>
        <Implements mangling="java.awt.image.ImageObserver"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="image" type="java.awt.Image"/>
            <Field name="width" type="int"/>
            <Field name="height" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.MediaTracker,java.awt.Image,int,int,int)" returnType="[ext]void"/>
            <Method signature="matches(java.awt.Image,int,int)" returnType="[ext]boolean"/>
            <Method signature="getMedia()" returnType="[ext]void"/>
            <Method signature="getStatus(boolean,boolean)" returnType="[ext]int"/>
            <Method signature="startLoad()" returnType="[ext]void"/>
            <Method signature="parseflags(int)" returnType="[ext]int"/>
            <Method signature="imageUpdate(java.awt.Image,int,int,int,int,int)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.applet.Applet" extends="java.awt.Panel" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Panel"/>
        <Fields/>
        <Methods>
            <Method signature="setStub(java.applet.AppletStub)" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="isActive()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getDocumentBase()" returnType="java.net.URL" visibility="public"/>
            <Method signature="getCodeBase()" returnType="java.net.URL" visibility="public"/>
            <Method signature="getParameter(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getAppletContext()" returnType="java.applet.AppletContext" visibility="public"/>
            <Method signature="resize(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="resize(java.awt.Dimension)" returnType="[ext]void" visibility="public"/>
            <Method signature="showStatus(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getImage(java.net.URL)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="getImage(java.net.URL,java.lang.String)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="getAudioClip(java.net.URL)" returnType="java.applet.AudioClip" visibility="public"/>
            <Method signature="getAudioClip(java.net.URL,java.lang.String)" returnType="java.applet.AudioClip" visibility="public"/>
            <Method signature="getAppletInfo()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getLocale()" returnType="java.util.Locale" visibility="public"/>
            <Method signature="getParameterInfo()" returnType="[ext]java.lang.String[][]" visibility="public"/>
            <Method signature="play(java.net.URL)" returnType="[ext]void" visibility="public"/>
            <Method signature="play(java.net.URL,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="init()" returnType="[ext]void" visibility="public"/>
            <Method signature="start()" returnType="[ext]void" visibility="public"/>
            <Method signature="stop()" returnType="[ext]void" visibility="public"/>
            <Method signature="destroy()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.applet.AppletStub" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="isActive()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="getDocumentBase()" returnType="java.net.URL" isAbstract="true" visibility="public"/>
            <Method signature="getCodeBase()" returnType="java.net.URL" isAbstract="true" visibility="public"/>
            <Method signature="getParameter(java.lang.String)" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="getAppletContext()" returnType="java.applet.AppletContext" isAbstract="true" visibility="public"/>
            <Method signature="appletResize(int,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.applet.AppletContext" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getAudioClip(java.net.URL)" returnType="java.applet.AudioClip" isAbstract="true" visibility="public"/>
            <Method signature="getImage(java.net.URL)" returnType="java.awt.Image" isAbstract="true" visibility="public"/>
            <Method signature="getApplet(java.lang.String)" returnType="java.applet.Applet" isAbstract="true" visibility="public"/>
            <Method signature="getApplets()" returnType="java.util.Enumeration" isAbstract="true" visibility="public"/>
            <Method signature="showDocument(java.net.URL)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="showDocument(java.net.URL,java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="showStatus(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.applet.AudioClip" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="play()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="loop()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="stop()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.rmi.AccessException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.RemoteException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Fields>
            <Field name="detail" type="java.lang.Throwable" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Throwable)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMessage()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.AlreadyBoundException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.ConnectException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.ConnectIOException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.MarshalException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.Naming" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="lookup(java.lang.String)" isStatic="true" returnType="java.rmi.Remote" visibility="public">
                <Throw mangling="java.rmi.NotBoundException"/>
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.rmi.UnknownHostException"/>
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="bind(java.lang.String,java.rmi.Remote)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.AlreadyBoundException"/>
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.rmi.UnknownHostException"/>
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="unbind(java.lang.String)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.NotBoundException"/>
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.rmi.UnknownHostException"/>
            </Method>
            <Method signature="rebind(java.lang.String,java.rmi.Remote)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.rmi.UnknownHostException"/>
            </Method>
            <Method signature="list(java.lang.String)" isStatic="true" returnType="[ext]java.lang.String[]" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.rmi.UnknownHostException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.rmi.NotBoundException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.UnknownHostException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.rmi.Remote" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
    </Interface>
    <Interface mangling="java.rmi.registry.Registry" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.Remote"/>
        <Fields>
            <Field name="REGISTRY_PORT" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="lookup(java.lang.String)" returnType="java.rmi.Remote" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.NotBoundException"/>
                <Throw mangling="java.rmi.AccessException"/>
            </Method>
            <Method signature="bind(java.lang.String,java.rmi.Remote)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.AlreadyBoundException"/>
                <Throw mangling="java.rmi.AccessException"/>
            </Method>
            <Method signature="unbind(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.NotBoundException"/>
                <Throw mangling="java.rmi.AccessException"/>
            </Method>
            <Method signature="rebind(java.lang.String,java.rmi.Remote)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.AccessException"/>
            </Method>
            <Method signature="list()" returnType="[ext]java.lang.String[]" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.AccessException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.rmi.registry.LocateRegistry" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="getRegistry()" isStatic="true" returnType="java.rmi.registry.Registry" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getRegistry(int)" isStatic="true" returnType="java.rmi.registry.Registry" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getRegistry(java.lang.String)" isStatic="true" returnType="java.rmi.registry.Registry" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.UnknownHostException"/>
            </Method>
            <Method signature="getRegistry(java.lang.String,int)" isStatic="true" returnType="java.rmi.registry.Registry" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.UnknownHostException"/>
            </Method>
            <Method signature="createRegistry(int)" isStatic="true" returnType="java.rmi.registry.Registry" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
        </Methods>
    </Class>
    <Interface mangling="java.rmi.registry.RegistryHandler" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="registryStub(java.lang.String,int)" returnType="java.rmi.registry.Registry" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.UnknownHostException"/>
            </Method>
            <Method signature="registryImpl(int)" returnType="java.rmi.registry.Registry" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.rmi.server.RemoteStub" extends="java.rmi.server.RemoteObject" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.server.RemoteObject"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.rmi.server.RemoteRef)" returnType="[ext]void" visibility="protected"/>
            <Method signature="setRef(java.rmi.server.RemoteStub,java.rmi.server.RemoteRef)" isStatic="true" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.server.RemoteObject" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.Remote"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="ref" type="java.rmi.server.RemoteRef" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.rmi.server.RemoteRef)" returnType="[ext]void" visibility="protected"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.rmi.server.RemoteRef" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Externalizable"/>
        <Fields>
            <Field name="packagePrefix" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="newCall(java.rmi.server.RemoteObject,java.rmi.server.Operation[],int,long)" returnType="java.rmi.server.RemoteCall" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="invoke(java.rmi.server.RemoteCall)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.lang.Exception"/>
            </Method>
            <Method signature="done(java.rmi.server.RemoteCall)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getRefClass(java.io.ObjectOutput)" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="remoteHashCode()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="remoteEquals(java.rmi.server.RemoteRef)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="remoteToString()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.rmi.server.RemoteCall" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getOutputStream()" returnType="java.io.ObjectOutput" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="releaseOutputStream()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.ObjectInput" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="releaseInputStream()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getResultStream(boolean)" returnType="java.io.ObjectOutput" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.io.StreamCorruptedException"/>
            </Method>
            <Method signature="executeCall()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.lang.Exception"/>
            </Method>
            <Method signature="done()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.rmi.server.Operation" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getOperation()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.server.RMIClassLoader" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="loadClass(java.lang.String)" isStatic="true" returnType="java.lang.Class" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="loadClass(java.net.URL,java.lang.String)" isStatic="true" returnType="java.lang.Class" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="getSecurityContext(java.lang.ClassLoader)" isStatic="true" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.rmi.server.LoaderHandler" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="packagePrefix" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="loadClass(java.lang.String)" returnType="java.lang.Class" isAbstract="true" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="loadClass(java.net.URL,java.lang.String)" returnType="java.lang.Class" isAbstract="true" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="getSecurityContext(java.lang.ClassLoader)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.rmi.server.ObjID" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="REGISTRY_ID" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DGC_ID" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(java.io.ObjectOutput)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(java.io.ObjectInput)" isStatic="true" returnType="java.rmi.server.ObjID" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.server.UID" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(short)" returnType="[ext]void" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="write(java.io.DataOutput)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(java.io.DataInput)" isStatic="true" returnType="java.rmi.server.UID" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.rmi.server.ExportException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.server.LogStream" extends="java.io.PrintStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.PrintStream"/>
        <Fields>
            <Field name="SILENT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BRIEF" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VERBOSE" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="log(java.lang.String)" isStatic="true" returnType="java.rmi.server.LogStream" visibility="public"/>
            <Method signature="getDefaultStream()" isStatic="true" returnType="java.io.PrintStream" visibility="public"/>
            <Method signature="setDefaultStream(java.io.PrintStream)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public"/>
            <Method signature="setOutputStream(java.io.OutputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="parseLevel(java.lang.String)" isStatic="true" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.rmi.server.RMIFailureHandler" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="failure(java.lang.Exception)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.rmi.server.RMISocketFactory" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="createSocket(java.lang.String,int)" returnType="java.net.Socket" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="createServerSocket(int)" returnType="java.net.ServerSocket" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setSocketFactory(java.rmi.server.RMISocketFactory)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getSocketFactory()" isStatic="true" returnType="java.rmi.server.RMISocketFactory" visibility="public"/>
            <Method signature="setFailureHandler(java.rmi.server.RMIFailureHandler)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getFailureHandler()" isStatic="true" returnType="java.rmi.server.RMIFailureHandler" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.server.RemoteServer" extends="java.rmi.server.RemoteObject" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.server.RemoteObject"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.rmi.server.RemoteRef)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getClientHost()" isStatic="true" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.rmi.server.ServerNotActiveException"/>
            </Method>
            <Method signature="setLog(java.io.OutputStream)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getLog()" isStatic="true" returnType="java.io.PrintStream" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.server.ServerNotActiveException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.rmi.server.ServerRef" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.server.RemoteRef"/>
        <Methods>
            <Method signature="exportObject(java.rmi.Remote,java.lang.Object)" returnType="java.rmi.server.RemoteStub" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getClientHost()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.server.ServerNotActiveException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.rmi.server.ServerCloneException" extends="java.lang.CloneNotSupportedException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.CloneNotSupportedException"/>
        <Fields>
            <Field name="detail" type="java.lang.Exception" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMessage()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.rmi.server.Skeleton" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="dispatch(java.rmi.Remote,java.rmi.server.RemoteCall,int,long)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.lang.Exception"/>
            </Method>
            <Method signature="getOperations()" returnType="[ext]java.rmi.server.Operation[]" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.rmi.server.SkeletonMismatchException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.server.SkeletonNotFoundException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.server.SocketSecurityException" extends="java.rmi.server.ExportException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.server.ExportException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.server.UnicastRemoteObject" extends="java.rmi.server.RemoteServer" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.server.RemoteServer"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="clone()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.CloneNotSupportedException"/>
            </Method>
            <Method signature="exportObject(java.rmi.Remote)" isStatic="true" returnType="java.rmi.server.RemoteStub" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
        </Methods>
    </Class>
    <Interface mangling="java.rmi.server.Unreferenced" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="unreferenced()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.rmi.UnmarshalException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.NoSuchObjectException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.RMISecurityException" extends="java.lang.SecurityException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.SecurityException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.ServerError" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.Error)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.RMISecurityManager" extends="java.lang.SecurityManager" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.SecurityManager"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="getSecurityContext()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkCreateClassLoader()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccess(java.lang.Thread)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccess(java.lang.ThreadGroup)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkExit(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkExec(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkLink(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPropertiesAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPropertyAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkWrite(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkDelete(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkWrite(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkListen(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccept(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMulticast(java.net.InetAddress)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMulticast(java.net.InetAddress,byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkConnect(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkConnect(java.lang.String,int,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkTopLevelWindow(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkPackageAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPackageDefinition(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSetFactory()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPrintJobAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSystemClipboardAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAwtEventQueueAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMemberAccess(java.lang.Class,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSecurityAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.ServerException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.ServerRuntimeException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.StubNotFoundException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.UnexpectedException" extends="java.rmi.RemoteException" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.RemoteException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Exception)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.rmi.dgc.DGC" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.Remote"/>
        <Methods>
            <Method signature="dirty(java.rmi.server.ObjID[],long,java.rmi.dgc.Lease)" returnType="java.rmi.dgc.Lease" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="clean(java.rmi.server.ObjID[],long,java.rmi.dgc.VMID,boolean)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.rmi.dgc.Lease" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.rmi.dgc.VMID,long)" returnType="[ext]void" visibility="public"/>
            <Method signature="getVMID()" returnType="java.rmi.dgc.VMID" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]long" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.rmi.dgc.VMID" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="isUnique()" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.sql.Connection" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="TRANSACTION_NONE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TRANSACTION_READ_UNCOMMITTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TRANSACTION_READ_COMMITTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TRANSACTION_REPEATABLE_READ" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TRANSACTION_SERIALIZABLE" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="createStatement()" returnType="java.sql.Statement" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="prepareStatement(java.lang.String)" returnType="java.sql.PreparedStatement" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="prepareCall(java.lang.String)" returnType="java.sql.CallableStatement" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="nativeSQL(java.lang.String)" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setAutoCommit(boolean)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getAutoCommit()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="commit()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="rollback()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isClosed()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMetaData()" returnType="java.sql.DatabaseMetaData" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setReadOnly(boolean)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isReadOnly()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setCatalog(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getCatalog()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setTransactionIsolation(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTransactionIsolation()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getWarnings()" returnType="java.sql.SQLWarning" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="clearWarnings()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.sql.SQLException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="getSQLState()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getErrorCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="getNextException()" returnType="java.sql.SQLException" visibility="public"/>
            <Method signature="setNextException(java.sql.SQLException)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.sql.Statement" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="executeQuery(java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="executeUpdate(java.lang.String)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxFieldSize()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setMaxFieldSize(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxRows()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setMaxRows(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setEscapeProcessing(boolean)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getQueryTimeout()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setQueryTimeout(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="cancel()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getWarnings()" returnType="java.sql.SQLWarning" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="clearWarnings()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setCursorName(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="execute(java.lang.String)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getResultSet()" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getUpdateCount()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMoreResults()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
        </Methods>
    </Interface>
    <Interface mangling="java.sql.PreparedStatement" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.sql.Statement"/>
        <Methods>
            <Method signature="executeQuery()" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="executeUpdate()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setNull(int,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setBoolean(int,boolean)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setByte(int,byte)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setShort(int,short)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setInt(int,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setLong(int,long)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setFloat(int,float)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setDouble(int,double)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setBigDecimal(int,java.math.BigDecimal)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setString(int,java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setBytes(int,byte[])" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setDate(int,java.sql.Date)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setTime(int,java.sql.Time)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setTimestamp(int,java.sql.Timestamp)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setAsciiStream(int,java.io.InputStream,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setUnicodeStream(int,java.io.InputStream,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setBinaryStream(int,java.io.InputStream,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="clearParameters()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setObject(int,java.lang.Object,int,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setObject(int,java.lang.Object,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setObject(int,java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="execute()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
        </Methods>
    </Interface>
    <Interface mangling="java.sql.CallableStatement" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.sql.PreparedStatement"/>
        <Methods>
            <Method signature="registerOutParameter(int,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="registerOutParameter(int,int,int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="wasNull()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getString(int)" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBoolean(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getByte(int)" returnType="[ext]byte" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getShort(int)" returnType="[ext]short" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getInt(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getLong(int)" returnType="[ext]long" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getFloat(int)" returnType="[ext]float" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDouble(int)" returnType="[ext]double" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBigDecimal(int,int)" returnType="java.math.BigDecimal" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBytes(int)" returnType="[ext]byte[]" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDate(int)" returnType="java.sql.Date" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTime(int)" returnType="java.sql.Time" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTimestamp(int)" returnType="java.sql.Timestamp" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getObject(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
        </Methods>
    </Interface>
    <Interface mangling="java.sql.DatabaseMetaData" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="procedureResultUnknown" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureNoResult" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureReturnsResult" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureColumnUnknown" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureColumnIn" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureColumnInOut" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureColumnOut" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureColumnReturn" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureColumnResult" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureNoNulls" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureNullable" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="procedureNullableUnknown" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="columnNoNulls" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="columnNullable" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="columnNullableUnknown" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="bestRowTemporary" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="bestRowTransaction" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="bestRowSession" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="bestRowUnknown" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="bestRowNotPseudo" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="bestRowPseudo" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="versionColumnUnknown" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="versionColumnNotPseudo" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="versionColumnPseudo" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="importedKeyCascade" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="importedKeyRestrict" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="importedKeySetNull" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="importedKeyNoAction" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="importedKeySetDefault" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="importedKeyInitiallyDeferred" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="importedKeyInitiallyImmediate" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="importedKeyNotDeferrable" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="typeNoNulls" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="typeNullable" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="typeNullableUnknown" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="typePredNone" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="typePredChar" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="typePredBasic" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="typeSearchable" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tableIndexStatistic" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tableIndexClustered" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tableIndexHashed" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tableIndexOther" type="short" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="allProceduresAreCallable()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="allTablesAreSelectable()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getURL()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getUserName()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isReadOnly()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="nullsAreSortedHigh()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="nullsAreSortedLow()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="nullsAreSortedAtStart()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="nullsAreSortedAtEnd()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDatabaseProductName()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDatabaseProductVersion()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDriverName()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDriverVersion()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDriverMajorVersion()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getDriverMinorVersion()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="usesLocalFiles()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="usesLocalFilePerTable()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsMixedCaseIdentifiers()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="storesUpperCaseIdentifiers()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="storesLowerCaseIdentifiers()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="storesMixedCaseIdentifiers()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsMixedCaseQuotedIdentifiers()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="storesUpperCaseQuotedIdentifiers()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="storesLowerCaseQuotedIdentifiers()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="storesMixedCaseQuotedIdentifiers()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getIdentifierQuoteString()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getSQLKeywords()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getNumericFunctions()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getStringFunctions()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getSystemFunctions()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTimeDateFunctions()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getSearchStringEscape()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getExtraNameCharacters()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsAlterTableWithAddColumn()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsAlterTableWithDropColumn()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsColumnAliasing()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="nullPlusNonNullIsNull()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsConvert()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsConvert(int,int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsTableCorrelationNames()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsDifferentTableCorrelationNames()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsExpressionsInOrderBy()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsOrderByUnrelated()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsGroupBy()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsGroupByUnrelated()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsGroupByBeyondSelect()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsLikeEscapeClause()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsMultipleResultSets()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsMultipleTransactions()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsNonNullableColumns()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsMinimumSQLGrammar()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsCoreSQLGrammar()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsExtendedSQLGrammar()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsANSI92EntryLevelSQL()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsANSI92IntermediateSQL()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsANSI92FullSQL()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsIntegrityEnhancementFacility()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsOuterJoins()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsFullOuterJoins()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsLimitedOuterJoins()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getSchemaTerm()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getProcedureTerm()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getCatalogTerm()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isCatalogAtStart()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getCatalogSeparator()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsSchemasInDataManipulation()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsSchemasInProcedureCalls()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsSchemasInTableDefinitions()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsSchemasInIndexDefinitions()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsSchemasInPrivilegeDefinitions()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsCatalogsInDataManipulation()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsCatalogsInProcedureCalls()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsCatalogsInTableDefinitions()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsCatalogsInIndexDefinitions()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsCatalogsInPrivilegeDefinitions()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsPositionedDelete()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsPositionedUpdate()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsSelectForUpdate()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsStoredProcedures()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsSubqueriesInComparisons()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsSubqueriesInExists()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsSubqueriesInIns()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsSubqueriesInQuantifieds()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsCorrelatedSubqueries()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsUnion()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsUnionAll()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsOpenCursorsAcrossCommit()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsOpenCursorsAcrossRollback()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsOpenStatementsAcrossCommit()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsOpenStatementsAcrossRollback()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxBinaryLiteralLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxCharLiteralLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxColumnNameLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxColumnsInGroupBy()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxColumnsInIndex()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxColumnsInOrderBy()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxColumnsInSelect()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxColumnsInTable()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxConnections()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxCursorNameLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxIndexLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxSchemaNameLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxProcedureNameLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxCatalogNameLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxRowSize()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="doesMaxRowSizeIncludeBlobs()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxStatementLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxStatements()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxTableNameLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxTablesInSelect()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMaxUserNameLength()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDefaultTransactionIsolation()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsTransactions()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsTransactionIsolationLevel(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsDataDefinitionAndDataManipulationTransactions()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="supportsDataManipulationTransactionsOnly()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="dataDefinitionCausesTransactionCommit()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="dataDefinitionIgnoredInTransactions()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getProcedures(java.lang.String,java.lang.String,java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getProcedureColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getSchemas()" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getCatalogs()" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTableTypes()" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getColumnPrivileges(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTablePrivileges(java.lang.String,java.lang.String,java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBestRowIdentifier(java.lang.String,java.lang.String,java.lang.String,int,boolean)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getVersionColumns(java.lang.String,java.lang.String,java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getPrimaryKeys(java.lang.String,java.lang.String,java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getImportedKeys(java.lang.String,java.lang.String,java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getExportedKeys(java.lang.String,java.lang.String,java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getCrossReference(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTypeInfo()" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)" returnType="java.sql.ResultSet" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.sql.SQLWarning" extends="java.sql.SQLException" isGeneric="false" visibility="public">
        <Extends mangling="java.sql.SQLException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="getNextWarning()" returnType="java.sql.SQLWarning" visibility="public"/>
            <Method signature="setNextWarning(java.sql.SQLWarning)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.sql.DriverManager" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="getConnection(java.lang.String,java.util.Properties)" isStatic="true" returnType="java.sql.Connection" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getConnection(java.lang.String,java.lang.String,java.lang.String)" isStatic="true" returnType="java.sql.Connection" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getConnection(java.lang.String)" isStatic="true" returnType="java.sql.Connection" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDriver(java.lang.String)" isStatic="true" returnType="java.sql.Driver" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="registerDriver(java.sql.Driver)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="deregisterDriver(java.sql.Driver)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDrivers()" isStatic="true" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="setLoginTimeout(int)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getLoginTimeout()" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="setLogStream(java.io.PrintStream)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getLogStream()" isStatic="true" returnType="java.io.PrintStream" visibility="public"/>
            <Method signature="println(java.lang.String)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="initialize()" isStatic="true" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.sql.DriverInfo" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="driver" type="java.sql.Driver"/>
            <Field name="securityContext" type="java.lang.Object"/>
            <Field name="className" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Interface mangling="java.sql.ResultSet" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="next()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="wasNull()" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getString(int)" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBoolean(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getByte(int)" returnType="[ext]byte" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getShort(int)" returnType="[ext]short" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getInt(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getLong(int)" returnType="[ext]long" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getFloat(int)" returnType="[ext]float" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDouble(int)" returnType="[ext]double" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBigDecimal(int,int)" returnType="java.math.BigDecimal" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBytes(int)" returnType="[ext]byte[]" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDate(int)" returnType="java.sql.Date" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTime(int)" returnType="java.sql.Time" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTimestamp(int)" returnType="java.sql.Timestamp" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getAsciiStream(int)" returnType="java.io.InputStream" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getUnicodeStream(int)" returnType="java.io.InputStream" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBinaryStream(int)" returnType="java.io.InputStream" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getString(java.lang.String)" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBoolean(java.lang.String)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getByte(java.lang.String)" returnType="[ext]byte" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getShort(java.lang.String)" returnType="[ext]short" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getInt(java.lang.String)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getLong(java.lang.String)" returnType="[ext]long" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getFloat(java.lang.String)" returnType="[ext]float" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDouble(java.lang.String)" returnType="[ext]double" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBigDecimal(java.lang.String,int)" returnType="java.math.BigDecimal" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBytes(java.lang.String)" returnType="[ext]byte[]" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getDate(java.lang.String)" returnType="java.sql.Date" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTime(java.lang.String)" returnType="java.sql.Time" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTimestamp(java.lang.String)" returnType="java.sql.Timestamp" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getAsciiStream(java.lang.String)" returnType="java.io.InputStream" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getUnicodeStream(java.lang.String)" returnType="java.io.InputStream" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getBinaryStream(java.lang.String)" returnType="java.io.InputStream" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getWarnings()" returnType="java.sql.SQLWarning" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="clearWarnings()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getCursorName()" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMetaData()" returnType="java.sql.ResultSetMetaData" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getObject(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getObject(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="findColumn(java.lang.String)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.sql.Date" extends="java.util.Date" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Date"/>
        <Methods>
            <Method signature="+ctor(int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="setTime(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="valueOf(java.lang.String)" isStatic="true" returnType="java.sql.Date" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHours()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMinutes()" returnType="[ext]int" visibility="public"/>
            <Method signature="getSeconds()" returnType="[ext]int" visibility="public"/>
            <Method signature="setHours(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setMinutes(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setSeconds(int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.sql.Time" extends="java.util.Date" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Date"/>
        <Methods>
            <Method signature="+ctor(int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="setTime(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="valueOf(java.lang.String)" isStatic="true" returnType="java.sql.Time" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getYear()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMonth()" returnType="[ext]int" visibility="public"/>
            <Method signature="getDay()" returnType="[ext]int" visibility="public"/>
            <Method signature="getDate()" returnType="[ext]int" visibility="public"/>
            <Method signature="setYear(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setMonth(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setDate(int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.sql.Timestamp" extends="java.util.Date" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Date"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int,int,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="valueOf(java.lang.String)" isStatic="true" returnType="java.sql.Timestamp" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getNanos()" returnType="[ext]int" visibility="public"/>
            <Method signature="setNanos(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.sql.Timestamp)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="before(java.sql.Timestamp)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="after(java.sql.Timestamp)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.sql.Driver" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="connect(java.lang.String,java.util.Properties)" returnType="java.sql.Connection" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="acceptsURL(java.lang.String)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getPropertyInfo(java.lang.String,java.util.Properties)" returnType="[ext]java.sql.DriverPropertyInfo[]" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getMajorVersion()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getMinorVersion()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="jdbcCompliant()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.sql.ResultSetMetaData" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="columnNoNulls" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="columnNullable" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="columnNullableUnknown" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="getColumnCount()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isAutoIncrement(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isCaseSensitive(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isSearchable(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isCurrency(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isNullable(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isSigned(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getColumnDisplaySize(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getColumnLabel(int)" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getColumnName(int)" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getSchemaName(int)" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getPrecision(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getScale(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getTableName(int)" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getCatalogName(int)" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getColumnType(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getColumnTypeName(int)" returnType="java.lang.String" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isReadOnly(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isWritable(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="isDefinitelyWritable(int)" returnType="[ext]boolean" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.sql.DriverPropertyInfo" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="name" type="java.lang.String" visibility="public"/>
            <Field name="description" type="java.lang.String" visibility="public"/>
            <Field name="required" type="boolean" visibility="public"/>
            <Field name="value" type="java.lang.String" visibility="public"/>
            <Field name="choices" type="java.lang.String[]" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.sql.Types" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="BIT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TINYINT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SMALLINT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="INTEGER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BIGINT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FLOAT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="REAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DOUBLE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NUMERIC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DECIMAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CHAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VARCHAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LONGVARCHAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TIME" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TIMESTAMP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BINARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VARBINARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LONGVARBINARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NULL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="OTHER" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods/>
    </Class>
    <Class mangling="java.sql.DataTruncation" extends="java.sql.SQLWarning" isGeneric="false" visibility="public">
        <Extends mangling="java.sql.SQLWarning"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int,boolean,boolean,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="getParameter()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getRead()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getDataSize()" returnType="[ext]int" visibility="public"/>
            <Method signature="getTransferSize()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.beans.Customizer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="setObject(java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="addPropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="removePropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.beans.PropertyChangeListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="propertyChange(java.beans.PropertyChangeEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.beans.PropertyChangeEvent" extends="java.util.EventObject" isGeneric="false" visibility="public">
        <Extends mangling="java.util.EventObject"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPropertyName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getNewValue()" returnType="[ext]void" visibility="public"/>
            <Method signature="getOldValue()" returnType="[ext]void" visibility="public"/>
            <Method signature="setPropagationId(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPropagationId()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.beans.PropertyEditor" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="setValue(java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="isPaintable()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="paintValue(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getJavaInitializationString()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="getAsText()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="setAsText(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="getTags()" returnType="[ext]java.lang.String[]" isAbstract="true" visibility="public"/>
            <Method signature="getCustomEditor()" returnType="java.awt.Component" isAbstract="true" visibility="public"/>
            <Method signature="supportsCustomEditor()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="addPropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="removePropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.beans.PropertyEditorManager" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="registerEditor(java.lang.Class,java.lang.Class)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="findEditor(java.lang.Class)" isStatic="true" returnType="java.beans.PropertyEditor" visibility="public"/>
            <Method signature="getEditorSearchPath()" isStatic="true" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="setEditorSearchPath(java.lang.String[])" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.beans.BeanInfo" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="ICON_COLOR_16x16" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ICON_COLOR_32x32" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ICON_MONO_16x16" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ICON_MONO_32x32" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="getBeanDescriptor()" returnType="java.beans.BeanDescriptor" isAbstract="true" visibility="public"/>
            <Method signature="getEventSetDescriptors()" returnType="[ext]java.beans.EventSetDescriptor[]" isAbstract="true" visibility="public"/>
            <Method signature="getDefaultEventIndex()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getPropertyDescriptors()" returnType="[ext]java.beans.PropertyDescriptor[]" isAbstract="true" visibility="public"/>
            <Method signature="getDefaultPropertyIndex()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getMethodDescriptors()" returnType="[ext]java.beans.MethodDescriptor[]" isAbstract="true" visibility="public"/>
            <Method signature="getAdditionalBeanInfo()" returnType="[ext]java.beans.BeanInfo[]" isAbstract="true" visibility="public"/>
            <Method signature="getIcon(int)" returnType="java.awt.Image" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="java.beans.BeanDescriptor" extends="java.beans.FeatureDescriptor" isGeneric="false" visibility="public">
        <Extends mangling="java.beans.FeatureDescriptor"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.Class)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.Class,java.lang.Class)" returnType="[ext]void" visibility="public"/>
            <Method signature="getBeanClass()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getCustomizerClass()" returnType="java.lang.Class" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.FeatureDescriptor" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setName(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDisplayName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setDisplayName(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="isExpert()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setExpert(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="isHidden()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setHidden(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getShortDescription()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setShortDescription(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setValue(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="getValue(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="attributeNames()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="+ctor(java.beans.FeatureDescriptor,java.beans.FeatureDescriptor)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.EventSetDescriptor" extends="java.beans.FeatureDescriptor" isGeneric="false" visibility="public">
        <Extends mangling="java.beans.FeatureDescriptor"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="+ctor(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String[],java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method,java.lang.reflect.Method)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,java.lang.Class,java.beans.MethodDescriptor[],java.lang.reflect.Method,java.lang.reflect.Method)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="getListenerType()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getListenerMethods()" returnType="[ext]java.lang.reflect.Method[]" visibility="public"/>
            <Method signature="getListenerMethodDescriptors()" returnType="[ext]java.beans.MethodDescriptor[]" visibility="public"/>
            <Method signature="getAddListenerMethod()" returnType="java.lang.reflect.Method" visibility="public"/>
            <Method signature="getRemoveListenerMethod()" returnType="java.lang.reflect.Method" visibility="public"/>
            <Method signature="setUnicast(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="isUnicast()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setInDefaultEventSet(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="isInDefaultEventSet()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor(java.beans.EventSetDescriptor,java.beans.EventSetDescriptor)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.IntrospectionException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.PropertyDescriptor" extends="java.beans.FeatureDescriptor" isGeneric="false" visibility="public">
        <Extends mangling="java.beans.FeatureDescriptor"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.Class)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,java.lang.Class,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="getPropertyType()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="getReadMethod()" returnType="java.lang.reflect.Method" visibility="public"/>
            <Method signature="getWriteMethod()" returnType="java.lang.reflect.Method" visibility="public"/>
            <Method signature="isBound()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setBound(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="isConstrained()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setConstrained(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPropertyEditorClass(java.lang.Class)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPropertyEditorClass()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="+ctor(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.MethodDescriptor" extends="java.beans.FeatureDescriptor" isGeneric="false" visibility="public">
        <Extends mangling="java.beans.FeatureDescriptor"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.reflect.Method)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.reflect.Method,java.beans.ParameterDescriptor[])" returnType="[ext]void" visibility="public"/>
            <Method signature="getMethod()" returnType="java.lang.reflect.Method" visibility="public"/>
            <Method signature="getParameterDescriptors()" returnType="[ext]java.beans.ParameterDescriptor[]" visibility="public"/>
            <Method signature="+ctor(java.beans.MethodDescriptor,java.beans.MethodDescriptor)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.Introspector" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="getBeanInfo(java.lang.Class)" isStatic="true" returnType="java.beans.BeanInfo" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="getBeanInfo(java.lang.Class,java.lang.Class)" isStatic="true" returnType="java.beans.BeanInfo" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="decapitalize(java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="getBeanInfoSearchPath()" isStatic="true" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="setBeanInfoSearchPath(java.lang.String[])" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="addProperty(java.beans.PropertyDescriptor)" returnType="[ext]void"/>
            <Method signature="addEvent(java.beans.EventSetDescriptor)" returnType="[ext]void"/>
            <Method signature="findMethod(java.lang.Class,java.lang.String,int)" isStatic="true" returnType="java.lang.reflect.Method">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="isSubclass(java.lang.Class,java.lang.Class)" isStatic="true" returnType="[ext]boolean"/>
            <Method signature="instantiate(java.lang.Class,java.lang.String)" isStatic="true" returnType="[ext]void">
                <Throw mangling="java.lang.InstantiationException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.beans.GenericBeanInfo" extends="java.beans.SimpleBeanInfo" isGeneric="false">
        <Extends mangling="java.beans.SimpleBeanInfo"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.beans.BeanDescriptor,java.beans.EventSetDescriptor[],int,java.beans.PropertyDescriptor[],int,java.beans.MethodDescriptor[],java.beans.BeanInfo)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPropertyDescriptors()" returnType="[ext]java.beans.PropertyDescriptor[]" visibility="public"/>
            <Method signature="getDefaultPropertyIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="getEventSetDescriptors()" returnType="[ext]java.beans.EventSetDescriptor[]" visibility="public"/>
            <Method signature="getDefaultEventIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMethodDescriptors()" returnType="[ext]java.beans.MethodDescriptor[]" visibility="public"/>
            <Method signature="getBeanDescriptor()" returnType="java.beans.BeanDescriptor" visibility="public"/>
            <Method signature="getIcon(int)" returnType="java.awt.Image" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.Beans" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="instantiate(java.lang.ClassLoader,java.lang.String)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="getInstanceOf(java.lang.Object,java.lang.Class)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="isInstanceOf(java.lang.Object,java.lang.Class)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isDesignTime()" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isGuiAvailable()" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setDesignTime(boolean)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="setGuiAvailable(boolean)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.SecurityException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.ParameterDescriptor" extends="java.beans.FeatureDescriptor" isGeneric="false" visibility="public">
        <Extends mangling="java.beans.FeatureDescriptor"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.SimpleBeanInfo" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.beans.BeanInfo"/>
        <Methods>
            <Method signature="getBeanDescriptor()" returnType="java.beans.BeanDescriptor" visibility="public"/>
            <Method signature="getPropertyDescriptors()" returnType="[ext]java.beans.PropertyDescriptor[]" visibility="public"/>
            <Method signature="getDefaultPropertyIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="getEventSetDescriptors()" returnType="[ext]java.beans.EventSetDescriptor[]" visibility="public"/>
            <Method signature="getDefaultEventIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMethodDescriptors()" returnType="[ext]java.beans.MethodDescriptor[]" visibility="public"/>
            <Method signature="getAdditionalBeanInfo()" returnType="[ext]java.beans.BeanInfo[]" visibility="public"/>
            <Method signature="getIcon(int)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="loadImage(java.lang.String)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.IndexedPropertyDescriptor" extends="java.beans.PropertyDescriptor" isGeneric="false" visibility="public">
        <Extends mangling="java.beans.PropertyDescriptor"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.Class)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.IntrospectionException"/>
            </Method>
            <Method signature="getIndexedReadMethod()" returnType="java.lang.reflect.Method" visibility="public"/>
            <Method signature="getIndexedWriteMethod()" returnType="java.lang.reflect.Method" visibility="public"/>
            <Method signature="getIndexedPropertyType()" returnType="java.lang.Class" visibility="public"/>
            <Method signature="+ctor(java.beans.PropertyDescriptor,java.beans.PropertyDescriptor)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.PropertyVetoException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.beans.PropertyChangeEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPropertyChangeEvent()" returnType="java.beans.PropertyChangeEvent" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.ObjectInputStreamWithLoader" extends="java.io.ObjectInputStream" isGeneric="false">
        <Extends mangling="java.io.ObjectInputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,java.lang.ClassLoader)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.io.StreamCorruptedException"/>
            </Method>
            <Method signature="resolveClass(java.io.ObjectStreamClass)" returnType="java.lang.Class" visibility="protected">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.beans.BeansAppletContext" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.applet.AppletContext"/>
        <Fields>
            <Field name="target" type="java.applet.Applet"/>
            <Field name="imageCache" type="java.util.Hashtable"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.applet.Applet)" returnType="[ext]void"/>
            <Method signature="getAudioClip(java.net.URL)" returnType="java.applet.AudioClip" visibility="public"/>
            <Method signature="getImage(java.net.URL)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="getApplet(java.lang.String)" returnType="java.applet.Applet" visibility="public"/>
            <Method signature="getApplets()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="showDocument(java.net.URL)" returnType="[ext]void" visibility="public"/>
            <Method signature="showDocument(java.net.URL,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="showStatus(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.BeansAppletStub" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.applet.AppletStub"/>
        <Fields>
            <Field name="active" type="boolean"/>
            <Field name="target" type="java.applet.Applet"/>
            <Field name="context" type="java.applet.AppletContext"/>
            <Field name="codeBase" type="java.net.URL"/>
            <Field name="docBase" type="java.net.URL"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.applet.Applet,java.applet.AppletContext,java.net.URL,java.net.URL)" returnType="[ext]void"/>
            <Method signature="isActive()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getDocumentBase()" returnType="java.net.URL" visibility="public"/>
            <Method signature="getCodeBase()" returnType="java.net.URL" visibility="public"/>
            <Method signature="getParameter(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getAppletContext()" returnType="java.applet.AppletContext" visibility="public"/>
            <Method signature="appletResize(int,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="java.beans.Visibility" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="needsGui()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="dontUseGui()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="okToUseGui()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="avoidingGui()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="java.beans.VetoableChangeListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="vetoableChange(java.beans.PropertyChangeEvent)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.beans.PropertyVetoException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="java.beans.PropertyChangeSupport" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="addPropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removePropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.beans.VetoableChangeSupport" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="addVetoableChangeListener(java.beans.VetoableChangeListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeVetoableChangeListener(java.beans.VetoableChangeListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.beans.PropertyVetoException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="java.beans.PropertyEditorSupport" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.beans.PropertyEditor"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.lang.Object)" returnType="[ext]void" visibility="protected"/>
            <Method signature="setValue(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]void" visibility="public"/>
            <Method signature="isPaintable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="paintValue(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void" visibility="public"/>
            <Method signature="getJavaInitializationString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getAsText()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setAsText(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="getTags()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="getCustomEditor()" returnType="java.awt.Component" visibility="public"/>
            <Method signature="supportsCustomEditor()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="addPropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removePropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="firePropertyChange()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.Ref" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="lruclock" type="long" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="get()" returnType="[ext]void" visibility="public"/>
            <Method signature="reconstitute()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="flush()" returnType="[ext]void" visibility="public"/>
            <Method signature="setThing(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="check()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.misc.VMNotification" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="newAllocState(int,int,boolean)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.misc.VM" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="STATE_GREEN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="STATE_YELLOW" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="STATE_RED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="callbacks" type="java.util.Vector" isStatic="true"/>
            <Field name="notifier" type="sun.misc.VMNotifierThread" isStatic="true"/>
            <Field name="notifier_red" type="sun.misc.VMNotifierThread" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="getState()" isStatic="true" returnType="[ext]int" isFinal="true" visibility="public"/>
            <Method signature="threadsSuspended()" isStatic="true" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="allowThreadSuspension(java.lang.ThreadGroup,boolean)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="unsuspendThreads()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="unsuspendSomeThreads()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="registerVMNotification(sun.misc.VMNotification)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="whichNotifier(int)" isStatic="true" returnType="sun.misc.VMNotifierThread"/>
            <Method signature="asChange(int,int)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="asChange_otherthread(int,int)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="resumeJavaMonitor()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="suspendJavaMonitor()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="resetJavaMonitor()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="writeJavaMonitorReport()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.VMNotifierThread" extends="java.lang.Thread" isGeneric="false">
        <Extends mangling="java.lang.Thread"/>
        <Fields>
            <Field name="as_old" type="int"/>
            <Field name="as_new" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="enqueue(int,int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Interface mangling="sun.misc.SelfTestInterface" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="test_an_interface(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.misc.SelfTest" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.misc.SelfTestInterface"/>
        <Fields>
            <Field name="i1" type="int" visibility="public"/>
            <Field name="i2" type="int" visibility="public"/>
            <Field name="f1" type="float" visibility="public"/>
            <Field name="f2" type="float" visibility="public"/>
            <Field name="d1" type="double" visibility="public"/>
            <Field name="d2" type="double" visibility="public"/>
            <Field name="l1" type="long" visibility="public"/>
            <Field name="l2" type="long" visibility="public"/>
            <Field name="si1" type="int" isStatic="true" visibility="public"/>
            <Field name="si2" type="int" isStatic="true" visibility="public"/>
            <Field name="sf1" type="float" isStatic="true" visibility="public"/>
            <Field name="sf2" type="float" isStatic="true" visibility="public"/>
            <Field name="sd1" type="double" isStatic="true" visibility="public"/>
            <Field name="sd2" type="double" isStatic="true" visibility="public"/>
            <Field name="sl1" type="long" isStatic="true" visibility="public"/>
            <Field name="sl2" type="long" isStatic="true" visibility="public"/>
            <Field name="interfaceObject" type="sun.misc.SelfTestInterface" visibility="public"/>
            <Field name="multi" type="int[][][]" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="set_i1(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="set_i2(int)" returnType="[ext]int" visibility="public"/>
            <Method signature="set_f1(float)" returnType="[ext]float" visibility="public"/>
            <Method signature="set_f2(float)" returnType="[ext]float" visibility="public"/>
            <Method signature="set_d1(double)" returnType="[ext]double" visibility="public"/>
            <Method signature="set_d2(double)" returnType="[ext]double" visibility="public"/>
            <Method signature="set_l1(long)" returnType="[ext]long" visibility="public"/>
            <Method signature="set_l2(long)" returnType="[ext]long" visibility="public"/>
            <Method signature="set_si1(int)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="set_si2(int)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="set_sf1(float)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="set_sf2(float)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="set_sd1(double)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="set_sd2(double)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="set_sl1(long)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="set_sl2(long)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="test_areturn()" returnType="sun.misc.SelfTest" visibility="public"/>
            <Method signature="test_an_interface(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="test_athrow1()" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NullPointerException"/>
            </Method>
            <Method signature="test_athrow2()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="test_athrow3()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="test_athrow4()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="test_throw_nosuchmethod()" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NoSuchMethodException"/>
            </Method>
            <Method signature="test_throw_nullpointer()" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NullPointerException"/>
            </Method>
            <Method signature="test_athrow5()" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NullPointerException"/>
                <Throw mangling="java.lang.NoSuchMethodException"/>
            </Method>
            <Method signature="test_athrow6()" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NullPointerException"/>
                <Throw mangling="java.lang.NoSuchMethodException"/>
            </Method>
            <Method signature="test_athrow7()" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NullPointerException"/>
                <Throw mangling="java.lang.NoSuchMethodException"/>
            </Method>
            <Method signature="test_athrow8()" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.NullPointerException"/>
                <Throw mangling="java.lang.NoSuchMethodException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.misc.CharacterDecoder" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="bytesPerAtom()" returnType="[ext]int" isAbstract="true" visibility="protected"/>
            <Method signature="bytesPerLine()" returnType="[ext]int" isAbstract="true" visibility="protected"/>
            <Method signature="decodeBufferPrefix(java.io.InputStream,java.io.OutputStream)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="decodeBufferSuffix(java.io.InputStream,java.io.OutputStream)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="decodeLinePrefix(java.io.InputStream,java.io.OutputStream)" returnType="[ext]int" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="decodeLineSuffix(java.io.InputStream,java.io.OutputStream)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="decodeAtom(java.io.InputStream,java.io.OutputStream,int)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFully(java.io.InputStream,byte[],int,int)" returnType="[ext]int" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="decodeBuffer(java.io.InputStream,java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="decodeBuffer(java.lang.String)" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="decodeBuffer(java.io.InputStream)" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.CharacterEncoder" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="pStream" type="java.io.PrintStream" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="bytesPerAtom()" returnType="[ext]int" isAbstract="true" visibility="protected"/>
            <Method signature="bytesPerLine()" returnType="[ext]int" isAbstract="true" visibility="protected"/>
            <Method signature="encodeBufferPrefix(java.io.OutputStream)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encodeBufferSuffix(java.io.OutputStream)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encodeLinePrefix(java.io.OutputStream,int)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encodeLineSuffix(java.io.OutputStream)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encodeAtom(java.io.OutputStream,byte[],int,int)" returnType="[ext]void" isAbstract="true" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readFully(java.io.InputStream,byte[])" returnType="[ext]int" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encode(java.io.InputStream,java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encode(byte[],java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encode(byte[])" returnType="java.lang.String" visibility="public"/>
            <Method signature="encodeBuffer(java.io.InputStream,java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encodeBuffer(byte[],java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encodeBuffer(byte[])" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.CEFormatException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.CEStreamExhausted" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.Sort" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="quicksort(java.lang.Object[],int,int,sun.misc.Compare)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="quicksort(java.lang.Object[],sun.misc.Compare)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.misc.Compare" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="doCompare(java.lang.Object,java.lang.Object)" returnType="[ext]int" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.misc.Regexp" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="ignoreCase" type="boolean" visibility="public"/>
            <Field name="exp" type="java.lang.String" visibility="public"/>
            <Field name="prefix" type="java.lang.String" visibility="public"/>
            <Field name="suffix" type="java.lang.String" visibility="public"/>
            <Field name="exact" type="boolean" visibility="public"/>
            <Field name="prefixLen" type="int" visibility="public"/>
            <Field name="suffixLen" type="int" visibility="public"/>
            <Field name="totalLen" type="int" visibility="public"/>
            <Field name="mids" type="java.lang.String[]" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="matches(java.lang.String)" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="matches(java.lang.String,int,int)" returnType="[ext]boolean"/>
            <Method signature="main(java.lang.String[])" isStatic="true" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.RegexpPool" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.misc.REException"/>
            </Method>
            <Method signature="replace(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="delete(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="match(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="matchNext(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="main(java.lang.String[])" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="print(java.io.PrintStream)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.RegexpNode" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="c" type="char"/>
            <Field name="firstchild" type="sun.misc.RegexpNode"/>
            <Field name="nextsibling" type="sun.misc.RegexpNode"/>
            <Field name="depth" type="int"/>
            <Field name="exact" type="boolean"/>
            <Field name="result" type="java.lang.Object"/>
            <Field name="re" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
            <Method signature="+ctor(char,int)" returnType="[ext]void"/>
            <Method signature="add(char)" returnType="sun.misc.RegexpNode"/>
            <Method signature="find(char)" returnType="sun.misc.RegexpNode"/>
            <Method signature="print(java.io.PrintStream)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.REException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Interface mangling="sun.misc.RegexpTarget" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="found(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.misc.MessageUtils" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="subst(java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="subst(java.lang.String,java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="subst(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="subst(java.lang.String,java.lang.String[])" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="substProp(java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="substProp(java.lang.String,java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="substProp(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="main(java.lang.String[])" isStatic="true" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.Queue" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="length" type="int"/>
            <Field name="head" type="sun.misc.QueueElement"/>
            <Field name="tail" type="sun.misc.QueueElement"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="enqueue(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="dequeue()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="dequeue(long)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="isEmpty()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="elements()" returnType="java.util.Enumeration" isFinal="true" visibility="public"/>
            <Method signature="reverseElements()" returnType="java.util.Enumeration" isFinal="true" visibility="public"/>
            <Method signature="dump(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.FIFOQueueEnumerator" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.Enumeration"/>
        <Fields>
            <Field name="queue" type="sun.misc.Queue"/>
            <Field name="cursor" type="sun.misc.QueueElement"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.misc.Queue)" returnType="[ext]void"/>
            <Method signature="hasMoreElements()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="nextElement()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.LIFOQueueEnumerator" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.Enumeration"/>
        <Fields>
            <Field name="queue" type="sun.misc.Queue"/>
            <Field name="cursor" type="sun.misc.QueueElement"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.misc.Queue)" returnType="[ext]void"/>
            <Method signature="hasMoreElements()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="nextElement()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.QueueElement" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="next" type="sun.misc.QueueElement"/>
            <Field name="prev" type="sun.misc.QueueElement"/>
            <Field name="obj" type="java.lang.Object"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.Object)" returnType="[ext]void"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.Cache" extends="java.util.Dictionary" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Dictionary"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int,float)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="size()" returnType="[ext]int" visibility="public"/>
            <Method signature="isEmpty()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="keys()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="elements()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="get(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="rehash()" returnType="[ext]void" visibility="protected"/>
            <Method signature="put(java.lang.Object,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.lang.Object)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.CacheEnumerator" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.Enumeration"/>
        <Fields>
            <Field name="keys" type="boolean"/>
            <Field name="index" type="int"/>
            <Field name="table" type="sun.misc.CacheEntry[]"/>
            <Field name="entry" type="sun.misc.CacheEntry"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.misc.CacheEntry[],boolean)" returnType="[ext]void"/>
            <Method signature="hasMoreElements()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="nextElement()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.CRC16" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="value" type="int" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="update(byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.misc.Timeable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="tick(sun.misc.Timer)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.misc.Timer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="owner" type="sun.misc.Timeable" visibility="public"/>
            <Field name="interval" type="long"/>
            <Field name="sleepUntil" type="long"/>
            <Field name="remainingTime" type="long"/>
            <Field name="regular" type="boolean"/>
            <Field name="stopped" type="boolean"/>
            <Field name="next" type="sun.misc.Timer"/>
            <Field name="timerThread" type="sun.misc.TimerThread" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.misc.Timeable,long)" returnType="[ext]void" visibility="public"/>
            <Method signature="isStopped()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="stop()" returnType="[ext]void" visibility="public"/>
            <Method signature="cont()" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="getStopTime()" returnType="[ext]long" visibility="public"/>
            <Method signature="getInterval()" returnType="[ext]long" visibility="public"/>
            <Method signature="setInterval(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="getRemainingTime()" returnType="[ext]long" visibility="public"/>
            <Method signature="setRemainingTime(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="setRegular(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getTimerThread()" returnType="java.lang.Thread" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.TimerThread" extends="java.lang.Thread" isGeneric="false">
        <Extends mangling="java.lang.Thread"/>
        <Fields>
            <Field name="debug" type="boolean" isStatic="true" visibility="public"/>
            <Field name="timerThread" type="sun.misc.TimerThread" isStatic="true"/>
            <Field name="notified" type="boolean" isStatic="true"/>
            <Field name="timerQueue" type="sun.misc.Timer" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="enqueue(sun.misc.Timer)" isStatic="true" returnType="[ext]void" visibility="protected"/>
            <Method signature="dequeue(sun.misc.Timer)" isStatic="true" returnType="[ext]boolean" visibility="protected"/>
            <Method signature="requeue(sun.misc.Timer)" isStatic="true" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.TimerTickThread" extends="java.lang.Thread" isGeneric="false">
        <Extends mangling="java.lang.Thread"/>
        <Fields>
            <Field name="MAX_POOL_SIZE" type="int" isStatic="true" isFinal="true"/>
            <Field name="curPoolSize" type="int" isStatic="true"/>
            <Field name="pool" type="sun.misc.TimerTickThread" isStatic="true"/>
            <Field name="next" type="sun.misc.TimerTickThread"/>
            <Field name="timer" type="sun.misc.Timer"/>
            <Field name="lastSleepUntil" type="long"/>
        </Fields>
        <Methods>
            <Method signature="call(sun.misc.Timer,long)" isStatic="true" returnType="sun.misc.TimerTickThread" visibility="protected"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.Lock" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="lock()" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="unlock()" returnType="[ext]void" isFinal="true" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.Request" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="execute()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.misc.RequestProcessor" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields/>
        <Methods>
            <Method signature="postRequest(sun.misc.Request)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="startProcessing()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.tools.jar.JarException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.tools.jar.JarImageSource" extends="sun.awt.image.URLImageSource" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.image.URLImageSource"/>
        <Fields>
            <Field name="buf" type="byte[]"/>
            <Field name="mimeType" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL,byte[],java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDecoder()" returnType="sun.awt.image.ImageDecoder" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.tools.jar.JarVerifierStream" extends="java.util.zip.ZipInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.util.zip.ZipInputStream"/>
        <Fields>
            <Field name="jev" type="sun.tools.jar.JarEntryVerifier"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="sun.tools.jar.JarException"/>
            </Method>
            <Method signature="getNextEntry()" returnType="java.util.zip.ZipEntry" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getVerifiedSignatures()" returnType="java.util.Hashtable" visibility="public"/>
            <Method signature="getBlocks()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="getNameToHash()" returnType="java.util.Hashtable" visibility="public"/>
            <Method signature="getManifest()" returnType="sun.tools.jar.Manifest" visibility="public"/>
            <Method signature="getIdentities(java.lang.String)" returnType="[ext]java.security.Identity[]" visibility="public"/>
            <Method signature="toHex(byte[])" isStatic="true" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.tools.jar.JarEntryVerifier" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void">
                <Throw mangling="sun.tools.jar.JarException"/>
            </Method>
            <Method signature="setEntry(sun.tools.jar.Manifest,java.lang.String)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="update(byte)" returnType="[ext]void"/>
            <Method signature="update(byte[],int,int)" returnType="[ext]void"/>
            <Method signature="verify(java.util.Hashtable,java.util.Hashtable)" returnType="[ext]void">
                <Throw mangling="sun.tools.jar.JarException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.tools.jar.Manifest" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="hashes" type="java.lang.String[]" isStatic="true" isFinal="true"/>
            <Field name="EOL" type="byte[]" isStatic="true" isFinal="true"/>
            <Field name="debug" type="boolean" isStatic="true" isFinal="true"/>
            <Field name="VERSION" type="java.lang.String" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="debug(java.lang.String)" isStatic="true" returnType="[ext]void" isFinal="true"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.InputStream,boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="addEntry(sun.net.www.MessageHeader)" returnType="[ext]void" visibility="public"/>
            <Method signature="getEntry(java.lang.String)" returnType="sun.net.www.MessageHeader" visibility="public"/>
            <Method signature="entryAt(int)" returnType="sun.net.www.MessageHeader" visibility="public"/>
            <Method signature="entries()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="addFiles(java.io.File,java.lang.String[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="addFile(java.io.File)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="doHashes(sun.net.www.MessageHeader)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="stream(java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="isManifestName(java.lang.String)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.tools.jar.SignatureFile" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="debug" type="boolean" isStatic="true" isFinal="true"/>
            <Field name="hashes" type="java.lang.String[]" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="debug(java.lang.String)" isStatic="true" returnType="[ext]void" isFinal="true"/>
            <Method signature="+ctor(sun.tools.jar.Manifest,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.tools.jar.JarException"/>
            </Method>
            <Method signature="+ctor(sun.tools.jar.Manifest,java.lang.String[],java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.tools.jar.JarException"/>
            </Method>
            <Method signature="+ctor(java.io.InputStream,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getBlockName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getBlock()" returnType="sun.security.pkcs.PKCS7" visibility="public"/>
            <Method signature="setBlock(sun.security.pkcs.PKCS7)" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.lang.String[])" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.tools.jar.JarException"/>
            </Method>
            <Method signature="add(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.tools.jar.JarException"/>
            </Method>
            <Method signature="getEntry(java.lang.String)" returnType="sun.net.www.MessageHeader" visibility="public"/>
            <Method signature="entryAt(int)" returnType="sun.net.www.MessageHeader" visibility="public"/>
            <Method signature="entries()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="stream(java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.tools.jar.CRC32OutputStream" extends="java.io.OutputStream" isGeneric="false" isFinal="true">
        <Extends mangling="java.io.OutputStream"/>
        <Fields>
            <Field name="crc" type="java.util.zip.CRC32"/>
            <Field name="n" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.util.zip.CRC32)" returnType="[ext]void"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.awt.im.InputContext" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="getInstance()" isStatic="true" returnType="sun.awt.im.InputContext" visibility="public"/>
            <Method signature="dispatchEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="activate(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="deactivate(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="getClientComponent()" returnType="java.awt.Component"/>
            <Method signature="dispose()" returnType="[ext]void" visibility="public"/>
            <Method signature="getInputMethod()" returnType="sun.awt.im.InputMethod"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.im.InputMethod" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="inputContext" type="sun.awt.im.InputMethodContext" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="setInputContext(sun.awt.im.InputMethodContext)" returnType="[ext]void" visibility="public"/>
            <Method signature="dispatchEvent(java.awt.AWTEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="activate()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="deactivate()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="endComposition()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="dispose()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.im.InputMethodContext" extends="sun.awt.im.InputContext" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.im.InputContext"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.SunToolkit" extends="java.awt.Toolkit" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Toolkit"/>
        <Fields>
            <Field name="theEventQueue" type="java.awt.EventQueue" isStatic="true" visibility="protected"/>
            <Field name="peerMap" type="java.util.Hashtable" isStatic="true" isFinal="true" visibility="protected"/>
            <Field name="imgHash" type="java.util.Hashtable" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="targetToPeer(java.lang.Object)" isStatic="true" returnType="[ext]void" visibility="protected"/>
            <Method signature="targetDisposedPeer(java.lang.Object,java.lang.Object)" isStatic="true" returnType="[ext]void" visibility="protected"/>
            <Method signature="getScreenSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getScreenWidth()" returnType="[ext]int" isAbstract="true" visibility="protected"/>
            <Method signature="getScreenHeight()" returnType="[ext]int" isAbstract="true" visibility="protected"/>
            <Method signature="getFontList()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="getImageFromHash(java.awt.Toolkit,java.net.URL)" isStatic="true" returnType="java.awt.Image"/>
            <Method signature="getImageFromHash(java.awt.Toolkit,java.lang.String)" isStatic="true" returnType="java.awt.Image"/>
            <Method signature="getImage(java.lang.String)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="getImage(java.net.URL)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="createImage(byte[],int,int)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="getSystemEventQueueImpl()" returnType="java.awt.EventQueue" visibility="protected"/>
            <Method signature="getNativeContainer(java.awt.Component)" isStatic="true" returnType="java.awt.Container" visibility="public"/>
            <Method signature="getInputMethodAdapter()" returnType="sun.awt.im.InputMethod" isAbstract="true" visibility="public">
                <Throw mangling="java.awt.AWTException"/>
            </Method>
            <Method signature="enableInputMethodsForTextComponent()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getComponentFromNativeWindowHandle(int)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="getNativeWindowHandleFromComponent(java.awt.Component)" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.FileImageSource" extends="sun.awt.image.InputStreamImageSource" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.image.InputStreamImageSource"/>
        <Fields>
            <Field name="imagefile" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSecurity(java.lang.Object,boolean)" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="getDecoder()" returnType="sun.awt.image.ImageDecoder" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.InputStreamImageSource" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.image.ImageProducer"/>
        <Implements mangling="sun.awt.image.ImageFetchable"/>
        <Fields>
            <Field name="pixelstore" type="sun.awt.image.PixelStore"/>
            <Field name="consumers" type="sun.awt.image.ImageConsumerQueue"/>
            <Field name="decoder" type="sun.awt.image.ImageDecoder"/>
            <Field name="decoders" type="sun.awt.image.ImageDecoder"/>
            <Field name="awaitingFetch" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="checkSecurity(java.lang.Object,boolean)" returnType="[ext]boolean" isAbstract="true"/>
            <Method signature="countConsumers(sun.awt.image.ImageConsumerQueue)" returnType="[ext]int"/>
            <Method signature="countConsumers()" returnType="[ext]int"/>
            <Method signature="addConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="printQueue(sun.awt.image.ImageConsumerQueue,java.lang.String)" returnType="[ext]void"/>
            <Method signature="printQueues(java.lang.String)" returnType="[ext]void"/>
            <Method signature="addConsumer(java.awt.image.ImageConsumer,boolean)" returnType="[ext]void"/>
            <Method signature="isConsumer(java.awt.image.ImageConsumer)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="removeConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="startProduction(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="requestTopDownLeftRightResend(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDecoder()" returnType="sun.awt.image.ImageDecoder" isAbstract="true" visibility="protected"/>
            <Method signature="decoderForType(java.io.InputStream,java.lang.String)" returnType="sun.awt.image.ImageDecoder" visibility="protected"/>
            <Method signature="getDecoder(java.io.InputStream)" returnType="sun.awt.image.ImageDecoder" visibility="protected"/>
            <Method signature="doFetch()" returnType="[ext]void" visibility="public"/>
            <Method signature="doneDecoding(sun.awt.image.ImageDecoder)" returnType="[ext]void"/>
            <Method signature="latchConsumers(sun.awt.image.ImageDecoder)" returnType="[ext]void"/>
            <Method signature="flush()" returnType="[ext]void"/>
            <Method signature="setPixelStore(sun.awt.image.ImageDecoder,sun.awt.image.PixelStore)" returnType="[ext]void"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.awt.image.ImageFetchable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="doFetch()" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.awt.image.ByteArrayImageSource" extends="sun.awt.image.InputStreamImageSource" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.image.InputStreamImageSource"/>
        <Fields>
            <Field name="imagedata" type="byte[]"/>
            <Field name="imageoffset" type="int"/>
            <Field name="imagelength" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSecurity(java.lang.Object,boolean)" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="getDecoder()" returnType="sun.awt.image.ImageDecoder" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.URLImageSource" extends="sun.awt.image.InputStreamImageSource" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.image.InputStreamImageSource"/>
        <Fields>
            <Field name="url" type="java.net.URL"/>
            <Field name="conn" type="java.net.URLConnection"/>
            <Field name="actualHost" type="java.lang.String"/>
            <Field name="actualPort" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
            </Method>
            <Method signature="+ctor(java.net.URL,java.net.URLConnection)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.net.URLConnection)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSecurity(java.lang.Object,boolean)" returnType="[ext]boolean" isFinal="true"/>
            <Method signature="getDecoder()" returnType="sun.awt.image.ImageDecoder" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.ImageDecoder" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="source" type="sun.awt.image.InputStreamImageSource"/>
            <Field name="input" type="java.io.InputStream"/>
            <Field name="feeder" type="java.lang.Thread"/>
            <Field name="aborted" type="boolean" visibility="protected"/>
            <Field name="finished" type="boolean" visibility="protected"/>
            <Field name="queue" type="sun.awt.image.ImageConsumerQueue"/>
            <Field name="next" type="sun.awt.image.ImageDecoder"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.image.InputStreamImageSource,java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="isConsumer(java.awt.image.ImageConsumer)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="removeConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="nextConsumer(sun.awt.image.ImageConsumerQueue)" returnType="sun.awt.image.ImageConsumerQueue" visibility="protected"/>
            <Method signature="setDimensions(int,int)" returnType="[ext]int" visibility="protected"/>
            <Method signature="setProperties(java.util.Hashtable)" returnType="[ext]int" visibility="protected"/>
            <Method signature="setColorModel(java.awt.image.ColorModel)" returnType="[ext]int" visibility="protected"/>
            <Method signature="setHints(int)" returnType="[ext]int" visibility="protected"/>
            <Method signature="headerComplete()" returnType="[ext]void" visibility="protected"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)" returnType="[ext]int" visibility="protected"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)" returnType="[ext]int" visibility="protected"/>
            <Method signature="imageComplete(int,boolean)" returnType="[ext]int" visibility="protected"/>
            <Method signature="replayConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="catchupConsumer(sun.awt.image.InputStreamImageSource,java.awt.image.ImageConsumer)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="produceImage()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="sun.awt.image.ImageFormatException"/>
            </Method>
            <Method signature="abort()" returnType="[ext]void" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.ImageFormatException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.ImageConsumerQueue" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="next" type="sun.awt.image.ImageConsumerQueue"/>
            <Field name="consumer" type="java.awt.image.ImageConsumer"/>
            <Field name="interested" type="boolean"/>
            <Field name="securityContext" type="java.lang.Object"/>
            <Field name="secure" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="removeConsumer(sun.awt.image.ImageConsumerQueue,java.awt.image.ImageConsumer,boolean)" isStatic="true" returnType="sun.awt.image.ImageConsumerQueue"/>
            <Method signature="isConsumer(sun.awt.image.ImageConsumerQueue,java.awt.image.ImageConsumer)" isStatic="true" returnType="[ext]boolean"/>
            <Method signature="+ctor(sun.awt.image.InputStreamImageSource,java.awt.image.ImageConsumer)" returnType="[ext]void"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.ImageFetcher" extends="java.lang.Thread" isGeneric="false">
        <Extends mangling="java.lang.Thread"/>
        <Fields>
            <Field name="fetchers" type="java.lang.Thread[]" isStatic="true"/>
            <Field name="numfetchers" type="int" isStatic="true"/>
            <Field name="numwaiting" type="int" isStatic="true"/>
            <Field name="HIGH_PRIORITY" type="int" isStatic="true" isFinal="true"/>
            <Field name="LOW_PRIORITY" type="int" isStatic="true" isFinal="true"/>
            <Field name="ANIM_PRIORITY" type="int" isStatic="true" isFinal="true"/>
            <Field name="TIMEOUT" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="add(sun.awt.image.ImageFetchable)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(sun.awt.image.ImageFetchable)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isFetcher(java.lang.Thread)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="amFetcher()" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="fetchloop(java.lang.Thread)" returnType="[ext]void" visibility="public"/>
            <Method signature="startingAnimation()" isStatic="true" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.GifImageDecoder" extends="sun.awt.image.ImageDecoder" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.image.ImageDecoder"/>
        <Fields>
            <Field name="store" type="sun.awt.image.PixelStore8"/>
            <Field name="cancatchup" type="boolean"/>
            <Field name="num_global_colors" type="int"/>
            <Field name="global_colormap" type="byte[]"/>
            <Field name="trans_pixel" type="int"/>
            <Field name="global_model" type="java.awt.image.IndexColorModel"/>
            <Field name="props" type="java.util.Hashtable"/>
            <Field name="saved_image" type="byte[]"/>
            <Field name="saved_model" type="java.awt.image.IndexColorModel"/>
            <Field name="global_width" type="int"/>
            <Field name="global_height" type="int"/>
            <Field name="global_bgpixel" type="int"/>
            <Field name="curframe" type="sun.awt.image.GifFrame"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.image.InputStreamImageSource,java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="catchupConsumer(sun.awt.image.InputStreamImageSource,java.awt.image.ImageConsumer)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="replayConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="makeStore(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="produceImage()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="sun.awt.image.ImageFormatException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.GifFrame" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="DISPOSAL_NONE" type="int" isStatic="true" isFinal="true"/>
            <Field name="DISPOSAL_SAVE" type="int" isStatic="true" isFinal="true"/>
            <Field name="DISPOSAL_BGCOLOR" type="int" isStatic="true" isFinal="true"/>
            <Field name="DISPOSAL_PREVIOUS" type="int" isStatic="true" isFinal="true"/>
            <Field name="decoder" type="sun.awt.image.GifImageDecoder"/>
            <Field name="disposal_method" type="int"/>
            <Field name="delay" type="int"/>
            <Field name="model" type="java.awt.image.IndexColorModel"/>
            <Field name="x" type="int"/>
            <Field name="y" type="int"/>
            <Field name="width" type="int"/>
            <Field name="height" type="int"/>
            <Field name="initialframe" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.image.GifImageDecoder,int,int,boolean,java.awt.image.IndexColorModel,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="dispose()" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.JPEGImageDecoder" extends="sun.awt.image.ImageDecoder" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.image.ImageDecoder"/>
        <Fields>
            <Field name="store" type="sun.awt.image.PixelStore"/>
            <Field name="props" type="java.util.Hashtable"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.image.InputStreamImageSource,java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="catchupConsumer(sun.awt.image.InputStreamImageSource,java.awt.image.ImageConsumer)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="makeStore(int,int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="sendHeaderInfo(int,int,boolean,boolean)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="sendPixels(int[],int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="sendPixels(byte[],int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="produceImage()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="sun.awt.image.ImageFormatException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.XbmImageDecoder" extends="sun.awt.image.ImageDecoder" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.image.ImageDecoder"/>
        <Fields>
            <Field name="store" type="sun.awt.image.PixelStore8"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.image.InputStreamImageSource,java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="catchupConsumer(sun.awt.image.InputStreamImageSource,java.awt.image.ImageConsumer)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="makeStore(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="produceImage()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="sun.awt.image.ImageFormatException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.ImageRepresentation" extends="sun.awt.image.ImageWatched" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.image.ImageWatched"/>
        <Implements mangling="java.awt.image.ImageConsumer"/>
        <Implements mangling="sun.awt.AWTFinalizeable"/>
        <Fields>
            <Field name="pData" type="int"/>
            <Field name="src" type="sun.awt.image.InputStreamImageSource"/>
            <Field name="image" type="sun.awt.image.Image"/>
            <Field name="tag" type="int"/>
            <Field name="srcW" type="int"/>
            <Field name="srcH" type="int"/>
            <Field name="width" type="int" visibility="public"/>
            <Field name="height" type="int" visibility="public"/>
            <Field name="hints" type="int"/>
            <Field name="availinfo" type="int"/>
            <Field name="offscreen" type="boolean"/>
            <Field name="newbits" type="java.awt.Rectangle"/>
            <Field name="finalnext" type="sun.awt.AWTFinalizeable"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.image.Image,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="offscreenInit(java.awt.Color)" returnType="[ext]void" visibility="protected"/>
            <Method signature="reconstruct(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setDimensions(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setProperties(java.util.Hashtable)" returnType="[ext]void" visibility="public"/>
            <Method signature="setColorModel(java.awt.image.ColorModel)" returnType="[ext]void" visibility="public"/>
            <Method signature="setHints(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPixels(int,int,int,int,java.awt.image.ColorModel,int[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="imageComplete(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="startProduction()" returnType="[ext]void"/>
            <Method signature="removeWatcher(java.awt.image.ImageObserver)" returnType="[ext]void" visibility="public"/>
            <Method signature="prepare(java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="check(java.awt.image.ImageObserver)" returnType="[ext]int" visibility="public"/>
            <Method signature="imageDraw(java.awt.Graphics,int,int,java.awt.Color)" returnType="[ext]void"/>
            <Method signature="imageStretch(java.awt.Graphics,int,int,int,int,int,int,int,int,java.awt.Color)" returnType="[ext]void"/>
            <Method signature="drawImage(java.awt.Graphics,int,int,java.awt.Color,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="drawStretchImage(java.awt.Graphics,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="drawScaledImage(java.awt.Graphics,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="abort()" returnType="[ext]void"/>
            <Method signature="dispose()" returnType="[ext]void"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="public"/>
            <Method signature="doFinalization()" returnType="[ext]void" visibility="public"/>
            <Method signature="setNextFinalizeable(sun.awt.AWTFinalizeable)" returnType="[ext]void" visibility="public"/>
            <Method signature="getNextFinalizeable()" returnType="sun.awt.AWTFinalizeable" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.ImageWatched" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="watchers" type="java.util.Vector" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="addWatcher(java.awt.image.ImageObserver)" returnType="[ext]void" visibility="public"/>
            <Method signature="isWatcher(java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="removeWatcher(java.awt.image.ImageObserver)" returnType="[ext]void" visibility="public"/>
            <Method signature="newInfo(java.awt.Image,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.Image" extends="java.awt.Image" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Image"/>
        <Fields>
            <Field name="source" type="java.awt.image.ImageProducer"/>
            <Field name="src" type="sun.awt.image.InputStreamImageSource"/>
            <Field name="imagerep" type="sun.awt.image.ImageRepresentation"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.awt.Component,int,int)" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.awt.image.ImageProducer)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getSource()" returnType="java.awt.image.ImageProducer" visibility="public"/>
            <Method signature="initGraphics(java.awt.Graphics)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getBackground()" returnType="java.awt.Color" visibility="public"/>
            <Method signature="getWidth()" returnType="[ext]int" visibility="public"/>
            <Method signature="getWidth(java.awt.image.ImageObserver)" returnType="[ext]int" visibility="public"/>
            <Method signature="getHeight()" returnType="[ext]int" visibility="public"/>
            <Method signature="getHeight(java.awt.image.ImageObserver)" returnType="[ext]int" visibility="public"/>
            <Method signature="getProperty(java.lang.String,java.awt.image.ImageObserver)" returnType="[ext]void" visibility="public"/>
            <Method signature="hasError()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="check(java.awt.image.ImageObserver)" returnType="[ext]int" visibility="public"/>
            <Method signature="preload(java.awt.image.ImageObserver)" returnType="[ext]void" visibility="public"/>
            <Method signature="addInfo(int)" returnType="[ext]void"/>
            <Method signature="setDimensions(int,int)" returnType="[ext]void"/>
            <Method signature="setProperties(java.util.Hashtable)" returnType="[ext]void"/>
            <Method signature="infoDone(int)" returnType="[ext]void"/>
            <Method signature="flush()" returnType="[ext]void" visibility="public"/>
            <Method signature="makeImageRep()" returnType="sun.awt.image.ImageRepresentation" isAbstract="true" visibility="protected"/>
            <Method signature="getImageRep()" returnType="sun.awt.image.ImageRepresentation" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.image.OffScreenImageSource" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.image.ImageProducer"/>
        <Fields>
            <Field name="target" type="java.awt.Component"/>
            <Field name="width" type="int"/>
            <Field name="height" type="int"/>
            <Field name="baseIR" type="sun.awt.image.ImageRepresentation"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Component,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setImageRep(sun.awt.image.ImageRepresentation)" returnType="[ext]void"/>
            <Method signature="getImageRep()" returnType="sun.awt.image.ImageRepresentation" visibility="public"/>
            <Method signature="addConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="isConsumer(java.awt.image.ImageConsumer)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="removeConsumer(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="startProduction(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
            <Method signature="requestTopDownLeftRightResend(java.awt.image.ImageConsumer)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.AxBridgeHelper" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="appMainThread" type="java.lang.Thread" isStatic="true"/>
            <Field name="newDispatchThreadNeeded" type="boolean" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="setAppMainThread(int)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="isAppMainThread()" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setNewDispatchThreadNeeded(int)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="isNewDispatchThreadNeeded()" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.awt.AWTFinalizeable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="doFinalization()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="setNextFinalizeable(sun.awt.AWTFinalizeable)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getNextFinalizeable()" returnType="sun.awt.AWTFinalizeable" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.awt.AWTFinalizer" extends="java.lang.Thread" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Thread"/>
        <Fields>
            <Field name="theFinalizer" type="sun.awt.AWTFinalizer" isStatic="true"/>
            <Field name="theFinalQueue" type="sun.awt.AWTFinalizeable" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="addFinalizeable(sun.awt.AWTFinalizeable)" isStatic="true" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.HorizBagLayout" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.LayoutManager"/>
        <Fields>
            <Field name="hgap" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addLayoutComponent(java.lang.String,java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeLayoutComponent(java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="minimumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="layoutContainer(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.VerticalBagLayout" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.LayoutManager"/>
        <Fields>
            <Field name="vgap" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addLayoutComponent(java.lang.String,java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeLayoutComponent(java.awt.Component)" returnType="[ext]void" visibility="public"/>
            <Method signature="minimumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="layoutContainer(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.VariableGridLayout" extends="java.awt.GridLayout" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.GridLayout"/>
        <Fields>
            <Field name="rowsSet" type="java.util.BitSet"/>
            <Field name="rowFractions" type="double[]"/>
            <Field name="colsSet" type="java.util.BitSet"/>
            <Field name="colFractions" type="double[]"/>
            <Field name="rows" type="int"/>
            <Field name="cols" type="int"/>
            <Field name="hgap" type="int"/>
            <Field name="vgap" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="stdRowFractions(int)" returnType="[ext]void"/>
            <Method signature="stdColFractions(int)" returnType="[ext]void"/>
            <Method signature="setRowFraction(int,double)" returnType="[ext]void" visibility="public"/>
            <Method signature="setColFraction(int,double)" returnType="[ext]void" visibility="public"/>
            <Method signature="getRowFraction(int)" returnType="[ext]double" visibility="public"/>
            <Method signature="getColFraction(int)" returnType="[ext]double" visibility="public"/>
            <Method signature="allocateExtraSpace(double[],java.util.BitSet)" returnType="[ext]void"/>
            <Method signature="allocateExtraSpace()" returnType="[ext]void"/>
            <Method signature="layoutContainer(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="fracsToString(double[])" isStatic="true" returnType="java.lang.String"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.OrientableFlowLayout" extends="java.awt.FlowLayout" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.FlowLayout"/>
        <Fields>
            <Field name="HORIZONTAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="VERTICAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="TOP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BOTTOM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="orientation" type="int"/>
            <Field name="vAlign" type="int"/>
            <Field name="vHGap" type="int"/>
            <Field name="vVGap" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,int,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="orientHorizontally()" returnType="[ext]void" visibility="public"/>
            <Method signature="orientVertically()" returnType="[ext]void" visibility="public"/>
            <Method signature="preferredLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumLayoutSize(java.awt.Container)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="layoutContainer(java.awt.Container)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.FocusingTextField" extends="java.awt.TextField" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.TextField"/>
        <Fields>
            <Field name="next" type="java.awt.TextField"/>
            <Field name="willSelect" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setWillSelect(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getWillSelect()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setNextField(java.awt.TextField)" returnType="[ext]void" visibility="public"/>
            <Method signature="gotFocus(java.awt.Event,java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="lostFocus(java.awt.Event,java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="nextFocus()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.awt.UpdateClient" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="updateClient(java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.awt.ScreenUpdaterEntry" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="client" type="sun.awt.UpdateClient"/>
            <Field name="when" type="long"/>
            <Field name="next" type="sun.awt.ScreenUpdaterEntry"/>
            <Field name="arg" type="java.lang.Object"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.UpdateClient,long,java.lang.Object,sun.awt.ScreenUpdaterEntry)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.ScreenUpdater" extends="java.lang.Thread" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Thread"/>
        <Fields>
            <Field name="updater" type="sun.awt.ScreenUpdater" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="notify(sun.awt.UpdateClient)" returnType="[ext]void" visibility="public"/>
            <Method signature="notify(sun.awt.UpdateClient,long)" returnType="[ext]void" visibility="public"/>
            <Method signature="notify(sun.awt.UpdateClient,long,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeClient(sun.awt.UpdateClient)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.PlatformFont" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.peer.FontPeer"/>
        <Fields>
            <Field name="componentFonts" type="sun.awt.FontDescriptor[]" visibility="protected"/>
            <Field name="defaultChar" type="char" visibility="protected"/>
            <Field name="props" type="java.util.Properties" visibility="protected"/>
            <Field name="defaultFont" type="sun.awt.FontDescriptor" visibility="protected"/>
            <Field name="charsetRegistry" type="java.util.Hashtable" isStatic="true" visibility="protected"/>
            <Field name="aliasName" type="java.lang.String" visibility="protected"/>
            <Field name="styleString" type="java.lang.String" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="mightHaveMultiFontMetrics()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="makeMultiCharsetString(java.lang.String)" returnType="[ext]sun.awt.CharsetString[]" visibility="public"/>
            <Method signature="makeMultiCharsetString(char[],int,int)" returnType="[ext]sun.awt.CharsetString[]" visibility="public"/>
            <Method signature="getFontCharset(java.lang.String,java.lang.String)" returnType="sun.io.CharToByteConverter" isAbstract="true" visibility="protected"/>
            <Method signature="styleStr(int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.FontDescriptor" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="nativeName" type="java.lang.String"/>
            <Field name="fontCharset" type="sun.io.CharToByteConverter" visibility="public"/>
            <Field name="exclusionRanges" type="int[]"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,sun.io.CharToByteConverter,int[])" returnType="[ext]void" visibility="public"/>
            <Method signature="isExcluded(char)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.ModalityEvent" extends="java.awt.AWTEvent" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.AWTEvent"/>
        <Implements mangling="java.awt.peer.ActiveEvent"/>
        <Fields>
            <Field name="MODALITY_PUSHED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MODALITY_POPPED" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.Object,sun.awt.windows.ModalityListener,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="dispatch()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.awt.windows.ModalityListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="modalityPushed(sun.awt.windows.ModalityEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="modalityPopped(sun.awt.windows.ModalityEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.awt.windows.WObjectPeer" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="pData" type="int"/>
            <Field name="target" type="java.lang.Object"/>
        </Fields>
        <Methods>
            <Method signature="dispose()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getPeerForTarget(java.lang.Object)" returnType="sun.awt.windows.WObjectPeer" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WToolkit" extends="sun.awt.SunToolkit" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.SunToolkit"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields>
            <Field name="enableDebug" type="boolean" isStatic="true" isFinal="true"/>
            <Field name="dbgTrace" type="boolean"/>
            <Field name="dbgVerify" type="boolean"/>
            <Field name="dbgBreak" type="boolean"/>
            <Field name="dbgHeapCheck" type="boolean"/>
            <Field name="clipboard" type="sun.awt.windows.WClipboard"/>
            <Field name="screenmodel" type="java.awt.image.ColorModel" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="init(java.lang.Thread)" returnType="[ext]void" visibility="public"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="eventLoop()" returnType="[ext]void"/>
            <Method signature="postEvent(java.awt.AWTEvent)" isStatic="true" returnType="[ext]void"/>
            <Method signature="createButton(java.awt.Button)" returnType="java.awt.peer.ButtonPeer" visibility="public"/>
            <Method signature="createTextField(java.awt.TextField)" returnType="java.awt.peer.TextFieldPeer" visibility="public"/>
            <Method signature="createLabel(java.awt.Label)" returnType="java.awt.peer.LabelPeer" visibility="public"/>
            <Method signature="createList(java.awt.List)" returnType="java.awt.peer.ListPeer" visibility="public"/>
            <Method signature="createCheckbox(java.awt.Checkbox)" returnType="java.awt.peer.CheckboxPeer" visibility="public"/>
            <Method signature="createScrollbar(java.awt.Scrollbar)" returnType="java.awt.peer.ScrollbarPeer" visibility="public"/>
            <Method signature="createScrollPane(java.awt.ScrollPane)" returnType="java.awt.peer.ScrollPanePeer" visibility="public"/>
            <Method signature="createTextArea(java.awt.TextArea)" returnType="java.awt.peer.TextAreaPeer" visibility="public"/>
            <Method signature="getComboHeightOffset()" isStatic="true" returnType="[ext]int"/>
            <Method signature="createChoice(java.awt.Choice)" returnType="java.awt.peer.ChoicePeer" visibility="public"/>
            <Method signature="createFrame(java.awt.Frame)" returnType="java.awt.peer.FramePeer" visibility="public"/>
            <Method signature="createCanvas(java.awt.Canvas)" returnType="java.awt.peer.CanvasPeer" visibility="public"/>
            <Method signature="createPanel(java.awt.Panel)" returnType="java.awt.peer.PanelPeer" visibility="public"/>
            <Method signature="createWindow(java.awt.Window)" returnType="java.awt.peer.WindowPeer" visibility="public"/>
            <Method signature="createDialog(java.awt.Dialog)" returnType="java.awt.peer.DialogPeer" visibility="public"/>
            <Method signature="createWPrintDialog(sun.awt.windows.WPrintDialog)" returnType="sun.awt.windows.WPrintDialogPeer" visibility="public"/>
            <Method signature="createFileDialog(java.awt.FileDialog)" returnType="java.awt.peer.FileDialogPeer" visibility="public"/>
            <Method signature="createMenuBar(java.awt.MenuBar)" returnType="java.awt.peer.MenuBarPeer" visibility="public"/>
            <Method signature="createMenu(java.awt.Menu)" returnType="java.awt.peer.MenuPeer" visibility="public"/>
            <Method signature="createPopupMenu(java.awt.PopupMenu)" returnType="java.awt.peer.PopupMenuPeer" visibility="public"/>
            <Method signature="createMenuItem(java.awt.MenuItem)" returnType="java.awt.peer.MenuItemPeer" visibility="public"/>
            <Method signature="createCheckboxMenuItem(java.awt.CheckboxMenuItem)" returnType="java.awt.peer.CheckboxMenuItemPeer" visibility="public"/>
            <Method signature="createEmbeddedFrame(sun.awt.windows.WEmbeddedFrame)" returnType="sun.awt.windows.WEmbeddedFramePeer" visibility="public"/>
            <Method signature="prepareScrImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" isStatic="true" returnType="[ext]boolean"/>
            <Method signature="checkScrImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" isStatic="true" returnType="[ext]int"/>
            <Method signature="checkImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]int" visibility="public"/>
            <Method signature="prepareImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="createImage(java.awt.image.ImageProducer)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="makeColorModel()" isStatic="true" returnType="java.awt.image.ColorModel"/>
            <Method signature="getStaticColorModel()" isStatic="true" returnType="java.awt.image.ColorModel"/>
            <Method signature="getColorModel()" returnType="java.awt.image.ColorModel" visibility="public"/>
            <Method signature="getScreenResolution()" returnType="[ext]int" visibility="public"/>
            <Method signature="getScreenWidth()" returnType="[ext]int" visibility="protected"/>
            <Method signature="getScreenHeight()" returnType="[ext]int" visibility="protected"/>
            <Method signature="getFontMetrics(java.awt.Font)" returnType="java.awt.FontMetrics" visibility="public"/>
            <Method signature="getFontPeer(java.lang.String,int)" returnType="java.awt.peer.FontPeer" visibility="public"/>
            <Method signature="sync()" returnType="[ext]void" visibility="public"/>
            <Method signature="getPrintJob(java.awt.Frame,java.lang.String,java.util.Properties)" returnType="java.awt.PrintJob" visibility="public"/>
            <Method signature="beep()" returnType="[ext]void" visibility="public"/>
            <Method signature="getSystemClipboard()" returnType="java.awt.datatransfer.Clipboard" visibility="public"/>
            <Method signature="loadSystemColors(int[])" returnType="[ext]void" visibility="protected"/>
            <Method signature="targetToPeer(java.lang.Object)" isStatic="true" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="targetDisposedPeer(java.lang.Object,java.lang.Object)" isStatic="true" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="getInputMethodAdapter()" returnType="sun.awt.im.InputMethod" visibility="public"/>
            <Method signature="enableInputMethodsForTextComponent()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getComponentFromNativeWindowHandle(int)" returnType="java.awt.Component" visibility="public"/>
            <Method signature="getNativeWindowHandleFromComponent(java.awt.Component)" returnType="[ext]int" visibility="public"/>
            <Method signature="getWToolkit()" isStatic="true" returnType="sun.awt.windows.WToolkit" visibility="public"/>
            <Method signature="pushModality()" returnType="[ext]void" visibility="public"/>
            <Method signature="popModality()" returnType="[ext]void" visibility="public"/>
            <Method signature="addModalityListener(sun.awt.windows.ModalityListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeModalityListener(sun.awt.windows.ModalityListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="notifyModalityChange(int)" returnType="[ext]void" isFinal="true"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WToolkit$ModalityListenerList" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.awt.windows.ModalityListener"/>
        <Fields>
            <Field name="listeners" type="java.util.Vector"/>
        </Fields>
        <Methods>
            <Method signature="add(sun.awt.windows.ModalityListener)" returnType="[ext]void"/>
            <Method signature="remove(sun.awt.windows.ModalityListener)" returnType="[ext]void"/>
            <Method signature="modalityPushed(sun.awt.windows.ModalityEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="modalityPopped(sun.awt.windows.ModalityEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.awt.windows.WToolkit)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WClipboard" extends="java.awt.datatransfer.Clipboard" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.datatransfer.Clipboard"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="setContents(java.awt.datatransfer.Transferable,java.awt.datatransfer.ClipboardOwner)" returnType="[ext]void" visibility="public"/>
            <Method signature="getContents(java.lang.Object)" returnType="java.awt.datatransfer.Transferable" visibility="public"/>
            <Method signature="lostSelectionOwnership()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WButtonPeer" extends="sun.awt.windows.WComponentPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WComponentPeer"/>
        <Implements mangling="java.awt.peer.ButtonPeer"/>
        <Methods>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="isFocusTraversable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setLabel(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="clearRectBeforePaint(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void"/>
            <Method signature="+ctor(java.awt.Button)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="handleAction()" returnType="[ext]void" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WComponentPeer" extends="sun.awt.windows.WObjectPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WObjectPeer"/>
        <Implements mangling="java.awt.peer.ComponentPeer"/>
        <Implements mangling="sun.awt.UpdateClient"/>
        <Fields/>
        <Methods>
            <Method signature="show()" returnType="[ext]void" visibility="public"/>
            <Method signature="hide()" returnType="[ext]void" visibility="public"/>
            <Method signature="enable()" returnType="[ext]void" visibility="public"/>
            <Method signature="disable()" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocationOnScreen()" returnType="java.awt.Point" visibility="public"/>
            <Method signature="setVisible(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setEnabled(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setBounds(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="paint(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="repaint(long,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="reshape(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="nativeHandleEvent(java.awt.AWTEvent)" returnType="[ext]void"/>
            <Method signature="handleEvent(java.awt.AWTEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="clearRectBeforePaint(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void"/>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getPreferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="isFocusTraversable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getColorModel()" returnType="java.awt.image.ColorModel" visibility="public"/>
            <Method signature="getToolkit()" returnType="java.awt.Toolkit" visibility="public"/>
            <Method signature="getGraphics()" returnType="java.awt.Graphics" visibility="public"/>
            <Method signature="getFontMetrics(java.awt.Font)" returnType="java.awt.FontMetrics" visibility="public"/>
            <Method signature="_dispose()" returnType="[ext]void"/>
            <Method signature="disposeImpl()" returnType="[ext]void" visibility="protected"/>
            <Method signature="dispose()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="setForeground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="setBackground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="_setForeground(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="_setBackground(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setFont(java.awt.Font)" returnType="[ext]void" visibility="public"/>
            <Method signature="pRequestFocus()" returnType="[ext]void" visibility="public"/>
            <Method signature="setCursor(java.awt.Cursor)" returnType="[ext]void" visibility="public"/>
            <Method signature="requestFocus()" returnType="[ext]void" visibility="public"/>
            <Method signature="createImage(java.awt.image.ImageProducer)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="createImage(int,int)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="prepareImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]int" visibility="public"/>
            <Method signature="updateClient(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void" isAbstract="true"/>
            <Method signature="start()" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="handleRepaint(int,int,int,int)" returnType="[ext]void"/>
            <Method signature="handleExpose(int,int,int,int)" returnType="[ext]void"/>
            <Method signature="handlePaint(int,int,int,int)" returnType="[ext]void"/>
            <Method signature="postEvent(java.awt.AWTEvent)" returnType="[ext]void"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.lang.Throwable"/>
            </Method>
            <Method signature="beginValidate()" returnType="[ext]void" visibility="public"/>
            <Method signature="_beginValidate()" returnType="[ext]void" visibility="public"/>
            <Method signature="endValidate()" returnType="[ext]void" visibility="public"/>
            <Method signature="initZOrderPosition()" returnType="[ext]void" visibility="public"/>
            <Method signature="setZOrderPosition(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WTextFieldPeer" extends="sun.awt.windows.WTextComponentPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WTextComponentPeer"/>
        <Implements mangling="java.awt.peer.TextFieldPeer"/>
        <Methods>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="setEchoChar(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPreferredSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="+ctor(java.awt.TextField)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="handleAction()" returnType="[ext]void"/>
            <Method signature="setEchoCharacter(char)" returnType="[ext]void" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize(int)" returnType="java.awt.Dimension" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WTextComponentPeer" extends="sun.awt.windows.WComponentPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WComponentPeer"/>
        <Implements mangling="java.awt.peer.TextComponentPeer"/>
        <Methods>
            <Method signature="setBackground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="setEditable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getText()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setText(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getSelectionStart()" returnType="[ext]int" visibility="public"/>
            <Method signature="getSelectionEnd()" returnType="[ext]int" visibility="public"/>
            <Method signature="select(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.TextComponent)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="clearRectBeforePaint(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void"/>
            <Method signature="enableEditing(boolean)" returnType="[ext]void"/>
            <Method signature="isFocusTraversable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setCaretPosition(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getCaretPosition()" returnType="[ext]int" visibility="public"/>
            <Method signature="valueChanged()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WLabelPeer" extends="sun.awt.windows.WComponentPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WComponentPeer"/>
        <Implements mangling="java.awt.peer.LabelPeer"/>
        <Methods>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="setText(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setAlignment(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Label)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="clearRectBeforePaint(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WListPeer" extends="sun.awt.windows.WComponentPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WComponentPeer"/>
        <Implements mangling="java.awt.peer.ListPeer"/>
        <Fields/>
        <Methods>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="isFocusTraversable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getSelectedIndexes()" returnType="[ext]int[]" visibility="public"/>
            <Method signature="add(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeAll()" returnType="[ext]void" visibility="public"/>
            <Method signature="setMultipleMode(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPreferredSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="addItem(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="_addItem(java.lang.String,int,int)" returnType="[ext]void"/>
            <Method signature="delItems(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="clear()" returnType="[ext]void" visibility="public"/>
            <Method signature="select(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="deselect(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="makeVisible(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setMultipleSelections(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMaxWidth()" returnType="[ext]int" visibility="public"/>
            <Method signature="preferredSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize(int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="+ctor(java.awt.List)" returnType="[ext]void"/>
            <Method signature="clearRectBeforePaint(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="isSelected(int)" returnType="[ext]boolean"/>
            <Method signature="setFont(java.awt.Font)" returnType="[ext]void" visibility="public"/>
            <Method signature="handleAction(int)" returnType="[ext]void"/>
            <Method signature="handleListChanged(int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WCheckboxPeer" extends="sun.awt.windows.WComponentPeer" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.windows.WComponentPeer"/>
        <Implements mangling="java.awt.peer.CheckboxPeer"/>
        <Methods>
            <Method signature="setState(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setCheckboxGroup(java.awt.CheckboxGroup)" returnType="[ext]void" visibility="public"/>
            <Method signature="setLabel(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="isFocusTraversable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor(java.awt.Checkbox)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="clearRectBeforePaint(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void"/>
            <Method signature="handleAction(boolean)" returnType="[ext]void"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WScrollbarPeer" extends="sun.awt.windows.WComponentPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WComponentPeer"/>
        <Implements mangling="java.awt.peer.ScrollbarPeer"/>
        <Fields>
            <Field name="ignore" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="setValues(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="_setValues(int,int,int,int)" returnType="[ext]void"/>
            <Method signature="setLineIncrement(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setPageIncrement(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Scrollbar)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="clearRectBeforePaint(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void"/>
            <Method signature="lineUp(int)" returnType="[ext]void"/>
            <Method signature="lineDown(int)" returnType="[ext]void"/>
            <Method signature="pageUp(int)" returnType="[ext]void"/>
            <Method signature="pageDown(int)" returnType="[ext]void"/>
            <Method signature="dragBegin(int)" returnType="[ext]void"/>
            <Method signature="dragAbsolute(int)" returnType="[ext]void"/>
            <Method signature="dragEnd(int)" returnType="[ext]void"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WScrollbarPeer$Adjustor" extends="java.awt.AWTEvent" isGeneric="false">
        <Extends mangling="java.awt.AWTEvent"/>
        <Implements mangling="java.awt.peer.ActiveEvent"/>
        <Fields>
            <Field name="value" type="int"/>
            <Field name="sb" type="java.awt.Scrollbar"/>
            <Field name="peer" type="sun.awt.windows.WScrollbarPeer"/>
            <Field name="type" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.windows.WScrollbarPeer,java.awt.Scrollbar,int,sun.awt.windows.WScrollbarPeer,int)" returnType="[ext]void"/>
            <Method signature="dispatch()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WMenuPeer" extends="sun.awt.windows.WMenuItemPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WMenuItemPeer"/>
        <Implements mangling="java.awt.peer.MenuPeer"/>
        <Methods>
            <Method signature="addSeparator()" returnType="[ext]void" visibility="public"/>
            <Method signature="addItem(java.awt.MenuItem)" returnType="[ext]void" visibility="public"/>
            <Method signature="delItem(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
            <Method signature="+ctor(java.awt.Menu)" returnType="[ext]void"/>
            <Method signature="create()" returnType="[ext]void"/>
            <Method signature="createMenu(sun.awt.windows.WMenuBarPeer)" returnType="[ext]void"/>
            <Method signature="createSubMenu(sun.awt.windows.WMenuPeer)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WScrollPanePeer" extends="sun.awt.windows.WPanelPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WPanelPeer"/>
        <Implements mangling="java.awt.peer.ScrollPanePeer"/>
        <Fields>
            <Field name="scrollbarWidth" type="int"/>
            <Field name="scrollbarHeight" type="int"/>
            <Field name="ignore" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="getOffset(int)" returnType="[ext]int"/>
            <Method signature="+ctor(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="setUnitIncrement(java.awt.Adjustable,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="insets()" returnType="java.awt.Insets" visibility="public"/>
            <Method signature="setScrollPosition(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getHScrollbarHeight()" returnType="[ext]int" visibility="public"/>
            <Method signature="getVScrollbarWidth()" returnType="[ext]int" visibility="public"/>
            <Method signature="getScrollOffset()" returnType="java.awt.Point" visibility="public"/>
            <Method signature="childResized(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setSpans(int,int,int,int)" returnType="[ext]void"/>
            <Method signature="setValue(java.awt.Adjustable,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="scrolledVertical(int)" returnType="[ext]void"/>
            <Method signature="scrolledHorizontal(int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WScrollPanePeer$Adjustor" extends="java.awt.AWTEvent" isGeneric="false">
        <Extends mangling="java.awt.AWTEvent"/>
        <Implements mangling="java.awt.peer.ActiveEvent"/>
        <Fields>
            <Field name="value" type="int"/>
            <Field name="adj" type="java.awt.Adjustable"/>
            <Field name="peer" type="sun.awt.windows.WScrollPanePeer"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.windows.WScrollPanePeer,java.awt.Adjustable,int,sun.awt.windows.WScrollPanePeer)" returnType="[ext]void"/>
            <Method signature="dispatch()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WPanelPeer" extends="sun.awt.windows.WCanvasPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WCanvasPeer"/>
        <Implements mangling="java.awt.peer.PanelPeer"/>
        <Fields>
            <Field name="insets_" type="java.awt.Insets"/>
        </Fields>
        <Methods>
            <Method signature="print(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="getInsets()" returnType="java.awt.Insets" visibility="public"/>
            <Method signature="+ctor(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="insets()" returnType="java.awt.Insets" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WCanvasPeer" extends="sun.awt.windows.WComponentPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WComponentPeer"/>
        <Implements mangling="java.awt.peer.CanvasPeer"/>
        <Implements mangling="sun.awt.DrawingSurface"/>
        <Methods>
            <Method signature="+ctor(java.awt.Component)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="print(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDrawingSurfaceInfo()" returnType="sun.awt.DrawingSurfaceInfo" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WTextAreaPeer" extends="sun.awt.windows.WTextComponentPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WTextComponentPeer"/>
        <Implements mangling="java.awt.peer.TextAreaPeer"/>
        <Methods>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="insert(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="replaceRange(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPreferredSize(int,int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getMinimumSize(int,int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="+ctor(java.awt.TextArea)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="insertText(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="replaceText(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="minimumSize(int,int)" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize(int,int)" returnType="java.awt.Dimension" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WChoicePeer" extends="sun.awt.windows.WComponentPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WComponentPeer"/>
        <Implements mangling="java.awt.peer.ChoicePeer"/>
        <Methods>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="isFocusTraversable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="select(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="clearRectBeforePaint(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void"/>
            <Method signature="addItem(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reshape(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Choice)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="handleAction(int)" returnType="[ext]void"/>
            <Method signature="getDropDownHeight()" returnType="[ext]int"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WFramePeer" extends="sun.awt.windows.WWindowPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WWindowPeer"/>
        <Implements mangling="java.awt.peer.FramePeer"/>
        <Methods>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="setIconImage(java.awt.Image)" returnType="[ext]void" visibility="public"/>
            <Method signature="reshape(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setMenuBar(java.awt.MenuBar)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Frame)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="_setIconImage(sun.awt.image.ImageRepresentation)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WWindowPeer" extends="sun.awt.windows.WPanelPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WPanelPeer"/>
        <Implements mangling="java.awt.peer.WindowPeer"/>
        <Fields>
            <Field name="allWindows" type="java.util.Vector" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="disposeImpl()" returnType="[ext]void" visibility="protected"/>
            <Method signature="toFront()" returnType="[ext]void" visibility="public"/>
            <Method signature="toBack()" returnType="[ext]void" visibility="public"/>
            <Method signature="setTitle(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="_setTitle(java.lang.String)" returnType="[ext]void"/>
            <Method signature="setResizable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="_setResizable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.Window)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="updateInsets(java.awt.Insets)" returnType="[ext]void"/>
            <Method signature="postFocusOnActivate()" returnType="[ext]void"/>
            <Method signature="cancelFocusOnActivate(java.awt.Component)" isStatic="true" returnType="[ext]void"/>
            <Method signature="requestComponentFocusIfActive(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="getFocusPeer()" returnType="sun.awt.windows.WComponentPeer"/>
            <Method signature="setDefaultFocus()" returnType="sun.awt.windows.WComponentPeer"/>
            <Method signature="getSysMinWidth()" isStatic="true" returnType="[ext]int"/>
            <Method signature="getSysMinHeight()" isStatic="true" returnType="[ext]int"/>
            <Method signature="reshapeFrame(int,int,int,int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WWindowPeer$FocusOnActivate" extends="java.awt.AWTEvent" isGeneric="false">
        <Extends mangling="java.awt.AWTEvent"/>
        <Implements mangling="java.awt.peer.ActiveEvent"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.awt.windows.WWindowPeer)" returnType="[ext]void" visibility="public"/>
            <Method signature="dispatch()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WDialogPeer" extends="sun.awt.windows.WWindowPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WWindowPeer"/>
        <Implements mangling="java.awt.peer.DialogPeer"/>
        <Fields>
            <Field name="modalLock" type="sun.awt.windows.WDialogPeer.ModalLock"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Dialog)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="showModal()" returnType="[ext]void"/>
            <Method signature="endModal()" returnType="[ext]void"/>
            <Method signature="nativeModalBlock()" returnType="[ext]void"/>
            <Method signature="nativeModalWakeup()" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="show()" returnType="[ext]void" visibility="public"/>
            <Method signature="hide()" returnType="[ext]void" visibility="public"/>
            <Method signature="getMinimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="reshape(int,int,int,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WDialogPeer$ModalLock" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="waitModal()" returnType="[ext]void"/>
            <Method signature="endModal()" returnType="[ext]void"/>
            <Method signature="+ctor(sun.awt.windows.WDialogPeer)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WPrintDialogPeer" extends="sun.awt.windows.WWindowPeer" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.windows.WWindowPeer"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.awt.windows.WPrintDialog)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="disposeImpl()" returnType="[ext]void" visibility="protected"/>
            <Method signature="showImpl()" returnType="[ext]void" visibility="public"/>
            <Method signature="show()" returnType="[ext]void" visibility="public"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="toFront()" returnType="[ext]void" visibility="public"/>
            <Method signature="toBack()" returnType="[ext]void" visibility="public"/>
            <Method signature="setResizable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="hide()" returnType="[ext]void" visibility="public"/>
            <Method signature="enable()" returnType="[ext]void" visibility="public"/>
            <Method signature="disable()" returnType="[ext]void" visibility="public"/>
            <Method signature="reshape(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="handleEvent(java.awt.Event)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setForeground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="setBackground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="setFont(java.awt.Font)" returnType="[ext]void" visibility="public"/>
            <Method signature="requestFocus()" returnType="[ext]void" visibility="public"/>
            <Method signature="nextFocus()" returnType="[ext]void" visibility="public"/>
            <Method signature="setCursor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="start()" returnType="[ext]void"/>
            <Method signature="invalidate(int,int,int,int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WPrintDialog" extends="java.awt.Dialog" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Dialog"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.awt.Frame,sun.awt.windows.WPrintJob)" returnType="[ext]void"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="getPrintGraphics()" returnType="[ext]sun.awt.windows.WPrintGraphics"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WFileDialogPeer" extends="sun.awt.windows.WWindowPeer" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.windows.WWindowPeer"/>
        <Implements mangling="java.awt.peer.FileDialogPeer"/>
        <Fields/>
        <Methods>
            <Method signature="setDirectory(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setFile(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setTitle(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setFilenameFilter(java.io.FilenameFilter)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.FileDialog)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="initialize()" returnType="[ext]void"/>
            <Method signature="disposeImpl()" returnType="[ext]void" visibility="protected"/>
            <Method signature="pShow()" returnType="[ext]void" visibility="public"/>
            <Method signature="show()" returnType="[ext]void" visibility="public"/>
            <Method signature="handleSelected(java.lang.String)" returnType="[ext]void"/>
            <Method signature="handleCancel()" returnType="[ext]void"/>
            <Method signature="beginValidate()" returnType="[ext]void" visibility="public"/>
            <Method signature="endValidate()" returnType="[ext]void" visibility="public"/>
            <Method signature="toFront()" returnType="[ext]void" visibility="public"/>
            <Method signature="toBack()" returnType="[ext]void" visibility="public"/>
            <Method signature="setResizable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="hide()" returnType="[ext]void" visibility="public"/>
            <Method signature="enable()" returnType="[ext]void" visibility="public"/>
            <Method signature="disable()" returnType="[ext]void" visibility="public"/>
            <Method signature="reshape(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="handleEvent(java.awt.Event)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setForeground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="setBackground(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="setFont(java.awt.Font)" returnType="[ext]void" visibility="public"/>
            <Method signature="requestFocus()" returnType="[ext]void" visibility="public"/>
            <Method signature="nextFocus()" returnType="[ext]void" visibility="public"/>
            <Method signature="setCursor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="start()" returnType="[ext]void"/>
            <Method signature="invalidate(int,int,int,int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WMenuBarPeer" extends="sun.awt.windows.WMenuPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WMenuPeer"/>
        <Implements mangling="java.awt.peer.MenuBarPeer"/>
        <Methods>
            <Method signature="addMenu(java.awt.Menu)" returnType="[ext]void" visibility="public"/>
            <Method signature="delMenu(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addHelpMenu(java.awt.Menu)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.MenuBar)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WFramePeer)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WMenuItemPeer" extends="sun.awt.windows.WObjectPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WObjectPeer"/>
        <Implements mangling="java.awt.peer.MenuItemPeer"/>
        <Fields>
            <Field name="shortcutLabel" type="java.lang.String"/>
            <Field name="isCheckbox" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="disposeImpl()" returnType="[ext]void" visibility="protected"/>
            <Method signature="dispose()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="setEnabled(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="enable()" returnType="[ext]void" visibility="public"/>
            <Method signature="disable()" returnType="[ext]void" visibility="public"/>
            <Method signature="setLabel(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="_setLabel(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.awt.MenuItem)" returnType="[ext]void"/>
            <Method signature="create(sun.awt.windows.WMenuPeer)" returnType="[ext]void"/>
            <Method signature="enable(boolean)" returnType="[ext]void"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.lang.Throwable"/>
            </Method>
            <Method signature="handleAction(int)" returnType="[ext]void"/>
            <Method signature="getDefaultFont()" returnType="java.awt.Font"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WPopupMenuPeer" extends="sun.awt.windows.WMenuPeer" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.windows.WMenuPeer"/>
        <Implements mangling="java.awt.peer.PopupMenuPeer"/>
        <Methods>
            <Method signature="+ctor(java.awt.PopupMenu)" returnType="[ext]void" visibility="public"/>
            <Method signature="createMenu(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="show(java.awt.Event)" returnType="[ext]void" visibility="public"/>
            <Method signature="_show(java.awt.Event)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WCheckboxMenuItemPeer" extends="sun.awt.windows.WMenuItemPeer" isGeneric="false">
        <Extends mangling="sun.awt.windows.WMenuItemPeer"/>
        <Implements mangling="java.awt.peer.CheckboxMenuItemPeer"/>
        <Methods>
            <Method signature="setState(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.awt.CheckboxMenuItem)" returnType="[ext]void"/>
            <Method signature="handleAction(boolean,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WEmbeddedFramePeer" extends="sun.awt.windows.WFramePeer" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.windows.WFramePeer"/>
        <Methods>
            <Method signature="+ctor(sun.awt.EmbeddedFrame)" returnType="[ext]void" visibility="public"/>
            <Method signature="create(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="print(java.awt.Graphics)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WEmbeddedFrame" extends="sun.awt.EmbeddedFrame" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.EmbeddedFrame"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WFontMetrics" extends="java.awt.FontMetrics" isGeneric="false">
        <Extends mangling="java.awt.FontMetrics"/>
        <Fields>
            <Field name="widths" type="int[]"/>
            <Field name="ascent" type="int"/>
            <Field name="descent" type="int"/>
            <Field name="leading" type="int"/>
            <Field name="height" type="int"/>
            <Field name="maxAscent" type="int"/>
            <Field name="maxDescent" type="int"/>
            <Field name="maxHeight" type="int"/>
            <Field name="maxAdvance" type="int"/>
            <Field name="table" type="java.util.Hashtable" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Font)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLeading()" returnType="[ext]int" visibility="public"/>
            <Method signature="getAscent()" returnType="[ext]int" visibility="public"/>
            <Method signature="getDescent()" returnType="[ext]int" visibility="public"/>
            <Method signature="getHeight()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMaxAscent()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMaxDescent()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMaxAdvance()" returnType="[ext]int" visibility="public"/>
            <Method signature="stringWidth(java.lang.String)" returnType="[ext]int" visibility="public"/>
            <Method signature="charsWidth(char[],int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="needsConversion(java.awt.Font,sun.awt.FontDescriptor)" isStatic="true" returnType="[ext]boolean"/>
            <Method signature="bytesWidth(byte[],int,int)" returnType="[ext]int" visibility="public"/>
            <Method signature="getWidths()" returnType="[ext]int[]" visibility="public"/>
            <Method signature="init()" returnType="[ext]void"/>
            <Method signature="getFontMetrics(java.awt.Font)" isStatic="true" returnType="java.awt.FontMetrics"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WFontPeer" extends="sun.awt.PlatformFont" isGeneric="false" visibility="public">
        <Extends mangling="sun.awt.PlatformFont"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getFontCharset(java.lang.String,java.lang.String)" returnType="sun.io.CharToByteConverter" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WPrintJob" extends="java.awt.PrintJob" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.PrintJob"/>
        <Fields>
            <Field name="title" type="java.lang.String"/>
            <Field name="pageDimension" type="java.awt.Dimension"/>
            <Field name="pageResolution" type="int"/>
            <Field name="lastFirst" type="boolean"/>
            <Field name="pageCount" type="int"/>
            <Field name="graphics" type="sun.awt.windows.WPrintGraphics"/>
            <Field name="dialogOwner" type="java.awt.Frame"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.awt.Frame,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="initJob()" returnType="java.awt.PrintJob"/>
            <Method signature="getGraphics()" returnType="java.awt.Graphics" visibility="public"/>
            <Method signature="getPageDimension()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="getPageResolution()" returnType="[ext]int" visibility="public"/>
            <Method signature="lastPageFirst()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="flushPage(int)" returnType="[ext]void"/>
            <Method signature="end()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WGraphics" extends="java.awt.Graphics" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Graphics"/>
        <Fields>
            <Field name="pData" type="int"/>
            <Field name="foreground" type="java.awt.Color"/>
            <Field name="font" type="java.awt.Font"/>
            <Field name="originX" type="int"/>
            <Field name="originY" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.windows.WPrintJob)" returnType="[ext]void"/>
            <Method signature="+ctor(sun.awt.windows.WGraphics)" returnType="[ext]void"/>
            <Method signature="+ctor(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="+ctor(int)" returnType="[ext]void"/>
            <Method signature="+ctor(sun.awt.windows.WImage)" returnType="[ext]void" visibility="public"/>
            <Method signature="create()" returnType="java.awt.Graphics" visibility="public"/>
            <Method signature="translate(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="disposeImpl()" returnType="[ext]void" visibility="protected"/>
            <Method signature="dispose()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="public"/>
            <Method signature="setFont(java.awt.Font)" returnType="[ext]void" visibility="public"/>
            <Method signature="getFont()" returnType="java.awt.Font" visibility="public"/>
            <Method signature="getFontMetrics(java.awt.Font)" returnType="java.awt.FontMetrics" visibility="public"/>
            <Method signature="setColor(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="getColor()" returnType="java.awt.Color" visibility="public"/>
            <Method signature="setPaintMode()" returnType="[ext]void" visibility="public"/>
            <Method signature="setXORMode(java.awt.Color)" returnType="[ext]void" visibility="public"/>
            <Method signature="getClipBounds()" returnType="java.awt.Rectangle" visibility="public"/>
            <Method signature="clipRect(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setClip(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getClip()" returnType="java.awt.Shape" visibility="public"/>
            <Method signature="setClip(java.awt.Shape)" returnType="[ext]void" visibility="public"/>
            <Method signature="clearRect(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="fillRect(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawRect(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawString(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawChars(char[],int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawBytes(byte[],int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawLine(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="copyArea(int,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawRoundRect(int,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="fillRoundRect(int,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawPolygon(int[],int[],int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawPolyline(int[],int[],int)" returnType="[ext]void" visibility="public"/>
            <Method signature="fillPolygon(int[],int[],int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawOval(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="fillOval(int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="drawArc(int,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="fillArc(int,int,int,int,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="print(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WColor" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="WINDOW_BKGND" type="int" isStatic="true" isFinal="true"/>
            <Field name="WINDOW_TEXT" type="int" isStatic="true" isFinal="true"/>
            <Field name="FRAME" type="int" isStatic="true" isFinal="true"/>
            <Field name="SCROLLBAR" type="int" isStatic="true" isFinal="true"/>
            <Field name="MENU_BKGND" type="int" isStatic="true" isFinal="true"/>
            <Field name="MENU_TEXT" type="int" isStatic="true" isFinal="true"/>
            <Field name="BUTTON_BKGND" type="int" isStatic="true" isFinal="true"/>
            <Field name="BUTTON_TEXT" type="int" isStatic="true" isFinal="true"/>
            <Field name="HIGHLIGHT" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="getDefaultColor(int)" isStatic="true" returnType="java.awt.Color"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.windows.WDrawingSurfaceInfo" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.awt.DrawingSurfaceInfo"/>
        <Implements mangling="sun.awt.Win32DrawingSurface"/>
        <Fields>
            <Field name="state" type="int"/>
            <Field name="w" type="int"/>
            <Field name="h" type="int"/>
            <Field name="peer" type="sun.awt.windows.WComponentPeer"/>
            <Field name="imgrep" type="sun.awt.image.ImageRepresentation"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.awt.windows.WComponentPeer)" returnType="[ext]void"/>
            <Method signature="+ctor(sun.awt.image.ImageRepresentation)" returnType="[ext]void"/>
            <Method signature="lock()" returnType="[ext]int" visibility="public"/>
            <Method signature="unlock()" returnType="[ext]void" visibility="public"/>
            <Method signature="getBounds()" returnType="java.awt.Rectangle" visibility="public"/>
            <Method signature="getSurface()" returnType="sun.awt.PhysicalDrawingSurface" visibility="public"/>
            <Method signature="getClip()" returnType="java.awt.Shape" visibility="public"/>
            <Method signature="getHWnd()" returnType="[ext]int" visibility="public"/>
            <Method signature="getHBitmap()" returnType="[ext]int" visibility="public"/>
            <Method signature="getPBits()" returnType="[ext]int" visibility="public"/>
            <Method signature="getHDC()" returnType="[ext]int" visibility="public"/>
            <Method signature="getDepth()" returnType="[ext]int" visibility="public"/>
            <Method signature="getHPalette()" returnType="[ext]int" visibility="public"/>
            <Method signature="getColorModel()" returnType="java.awt.image.ColorModel" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.CharsetString" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="charsetChars" type="char[]" visibility="public"/>
            <Field name="offset" type="int" visibility="public"/>
            <Field name="length" type="int" visibility="public"/>
            <Field name="fontDescriptor" type="sun.awt.FontDescriptor" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(char[],int,int,sun.awt.FontDescriptor)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.awt.EmbeddedFrame" extends="java.awt.Frame" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Frame"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getParent()" returnType="java.awt.Container" visibility="public"/>
            <Method signature="setTitle(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setIconImage(java.awt.Image)" returnType="[ext]void" visibility="public"/>
            <Method signature="setMenuBar(java.awt.MenuBar)" returnType="[ext]void" visibility="public"/>
            <Method signature="setResizable(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.awt.MenuComponent)" returnType="[ext]void" visibility="public"/>
            <Method signature="isResizable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="addNotify()" returnType="[ext]void" visibility="public"/>
            <Method signature="setPeer(java.awt.peer.ComponentPeer)" returnType="[ext]void" visibility="protected"/>
            <Method signature="setCursorAllowed(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="isCursorAllowed()" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.awt.DrawingSurface" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getDrawingSurfaceInfo()" returnType="sun.awt.DrawingSurfaceInfo" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="sun.awt.DrawingSurfaceInfo" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="lock()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="unlock()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getBounds()" returnType="java.awt.Rectangle" isAbstract="true" visibility="public"/>
            <Method signature="getSurface()" returnType="sun.awt.PhysicalDrawingSurface" isAbstract="true" visibility="public"/>
            <Method signature="getClip()" returnType="java.awt.Shape" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="sun.awt.PhysicalDrawingSurface" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
    </Interface>
    <Interface mangling="sun.awt.Win32DrawingSurface" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.awt.PhysicalDrawingSurface"/>
        <Methods>
            <Method signature="getHWnd()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getHBitmap()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getPBits()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getHDC()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getDepth()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getHPalette()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getColorModel()" returnType="java.awt.image.ColorModel" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.net.www.MessageHeader" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="findValue(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getKey(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getValue(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="findNextValue(java.lang.String,java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="print(java.io.PrintStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="add(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="prepend(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="set(int,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="set(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setIfNotSet(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="canonicalID(java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="parseHeader(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.content.text.Generic" extends="sun.net.www.content.text.plain" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.www.content.text.plain"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.content.text.plain" extends="java.net.ContentHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.ContentHandler"/>
        <Methods>
            <Method signature="getContent(java.net.URLConnection)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.content.text.PlainTextInputStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.content.image.gif" extends="java.net.ContentHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.ContentHandler"/>
        <Methods>
            <Method signature="getContent(java.net.URLConnection)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.content.image.jpeg" extends="java.net.ContentHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.ContentHandler"/>
        <Methods>
            <Method signature="getContent(java.net.URLConnection)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.content.image.x_xbitmap" extends="java.net.ContentHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.ContentHandler"/>
        <Methods>
            <Method signature="getContent(java.net.URLConnection)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.content.image.x_xpixmap" extends="java.net.ContentHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.ContentHandler"/>
        <Methods>
            <Method signature="getContent(java.net.URLConnection)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.HeaderParser" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="raw" type="java.lang.String"/>
            <Field name="tab" type="java.lang.String[][]"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="findKey(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="findValue(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="findValue(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="findValue(java.lang.String,java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="findInt(java.lang.String,int)" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.MeteredStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="closed" type="boolean" visibility="protected"/>
            <Field name="expected" type="int" visibility="protected"/>
            <Field name="count" type="int" visibility="protected"/>
            <Field name="te" type="sun.net.ProgressEntry" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,sun.net.ProgressEntry)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.MimeEntry" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="defaultImagePath" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="starred" type="boolean"/>
            <Field name="UNKNOWN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOAD_INTO_BROWSER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SAVE_TO_FILE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LAUNCH_APPLICATION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="actionKeywords" type="java.lang.String[]" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]void"/>
            <Method signature="+ctor(java.lang.String,int,java.lang.String,java.lang.String)" returnType="[ext]void"/>
            <Method signature="+ctor(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])" returnType="[ext]void"/>
            <Method signature="getType()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setType(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getAction()" returnType="[ext]int" visibility="public"/>
            <Method signature="setAction(int,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setAction(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLaunchString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setCommand(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDescription()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setDescription(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getImageFileName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setImageFileName(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getTempFileTemplate()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getExtensions()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="getExtensionsAsList()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setExtensions(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="launch(java.net.URLConnection,java.io.InputStream,sun.net.www.MimeTable)" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.net.www.ApplicationLaunchException"/>
            </Method>
            <Method signature="matches(java.lang.String)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="toProperty()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.ApplicationLaunchException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.MimeTable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.net.FileNameMap"/>
        <Fields>
            <Field name="mailcapLocations" type="java.lang.String[]" isStatic="true" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="getDefaultTable()" isStatic="true" returnType="sun.net.www.MimeTable" visibility="public"/>
            <Method signature="getSize()" returnType="[ext]int" visibility="public"/>
            <Method signature="getContentTypeFor(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="add(sun.net.www.MimeEntry)" returnType="[ext]void" visibility="public"/>
            <Method signature="remove(java.lang.String)" returnType="sun.net.www.MimeEntry" visibility="public"/>
            <Method signature="remove(sun.net.www.MimeEntry)" returnType="sun.net.www.MimeEntry" visibility="public"/>
            <Method signature="find(java.lang.String)" returnType="sun.net.www.MimeEntry" visibility="public"/>
            <Method signature="findByFileName(java.lang.String)" returnType="sun.net.www.MimeEntry" visibility="public"/>
            <Method signature="findByExt(java.lang.String)" returnType="sun.net.www.MimeEntry" visibility="public"/>
            <Method signature="findByDescription(java.lang.String)" returnType="sun.net.www.MimeEntry" visibility="public"/>
            <Method signature="getTempFileTemplate()" returnType="java.lang.String"/>
            <Method signature="elements()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="load()" returnType="[ext]void" visibility="public"/>
            <Method signature="parse(java.util.Properties)" returnType="[ext]void"/>
            <Method signature="parse(java.lang.String,java.lang.String)" returnType="[ext]void"/>
            <Method signature="parse(java.lang.String,sun.net.www.MimeEntry)" returnType="[ext]void"/>
            <Method signature="fill(sun.net.www.MimeEntry,java.lang.String,java.lang.String)" returnType="[ext]void"/>
            <Method signature="getExtensions(java.lang.String)" returnType="[ext]java.lang.String[]"/>
            <Method signature="getActionCode(java.lang.String)" returnType="[ext]int"/>
            <Method signature="save(java.lang.String)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getAsProperties()" returnType="java.util.Properties" visibility="public"/>
            <Method signature="saveAsProperties(java.io.File)" returnType="[ext]boolean" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.MimeLauncher" extends="java.lang.Thread" isGeneric="false">
        <Extends mangling="java.lang.Thread"/>
        <Fields>
            <Field name="uc" type="java.net.URLConnection"/>
            <Field name="m" type="sun.net.www.MimeEntry"/>
            <Field name="genericTempFileTemplate" type="java.lang.String"/>
            <Field name="is" type="java.io.InputStream"/>
            <Field name="execPath" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.net.www.MimeEntry,java.net.URLConnection,java.io.InputStream,java.lang.String,java.lang.String)" returnType="[ext]void">
                <Throw mangling="sun.net.www.ApplicationLaunchException"/>
            </Method>
            <Method signature="getTempFileName(java.net.URL,java.lang.String)" returnType="java.lang.String" visibility="protected"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.URLConnection" extends="java.net.URLConnection" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLConnection"/>
        <Fields>
            <Field name="properties" type="sun.net.www.MessageHeader" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="public"/>
            <Method signature="getProperties()" returnType="sun.net.www.MessageHeader" visibility="public"/>
            <Method signature="setProperties(sun.net.www.MessageHeader)" returnType="[ext]void" visibility="public"/>
            <Method signature="setRequestProperty(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getHeaderField(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHeaderFieldKey(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHeaderField(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getContentType()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setContentType(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getContentLength()" returnType="[ext]int" visibility="public"/>
            <Method signature="setContentLength(int)" returnType="[ext]void" visibility="protected"/>
            <Method signature="canCache()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.file.Handler" extends="java.net.URLStreamHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLStreamHandler"/>
        <Fields/>
        <Methods>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.file.FileURLConnection" extends="sun.net.www.URLConnection" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.www.URLConnection"/>
        <Fields>
            <Field name="is" type="java.io.InputStream"/>
            <Field name="length" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void"/>
            <Method signature="connect()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.file.StringCompare" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.misc.Compare"/>
        <Fields>
            <Field name="collator" type="java.text.Collator"/>
        </Fields>
        <Methods>
            <Method signature="doCompare(java.lang.Object,java.lang.Object)" returnType="[ext]int" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.http.Handler" extends="java.net.URLStreamHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLStreamHandler"/>
        <Fields>
            <Field name="proxy" type="java.lang.String" visibility="protected"/>
            <Field name="proxyPort" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.http.HttpURLConnection" extends="java.net.HttpURLConnection" isGeneric="false" visibility="public">
        <Extends mangling="java.net.HttpURLConnection"/>
        <Fields>
            <Field name="version" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="userAgent" type="java.lang.String" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="httpVersion" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="acceptString" type="java.lang.String" isStatic="true" isFinal="true"/>
            <Field name="maxRedirects" type="int" isStatic="true" isFinal="true"/>
            <Field name="http" type="sun.net.www.http.HttpClient" visibility="protected"/>
            <Field name="handler" type="sun.net.www.protocol.http.Handler" visibility="protected"/>
            <Field name="ps" type="java.io.PrintStream" visibility="protected"/>
            <Field name="pe" type="sun.net.ProgressEntry" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="getNewClient(java.net.URL)" returnType="sun.net.www.http.HttpClient" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getProxiedClient(java.net.URL,java.lang.String,int)" returnType="sun.net.www.http.HttpClient" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.net.URL,sun.net.www.protocol.http.Handler)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.net.URL,java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="setDefaultAuthenticator(sun.net.www.protocol.http.HttpAuthenticator)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="openConnectionCheckRedirects(java.net.URLConnection)" isStatic="true" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="connect()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="disconnect()" returnType="[ext]void" visibility="public"/>
            <Method signature="usingProxy()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getHeaderField(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHeaderField(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHeaderFieldKey(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="setRequestProperty(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setAuthenticationProperty(java.lang.String,java.lang.String)" returnType="[ext]void"/>
            <Method signature="getRequestProperty(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="public"/>
            <Method signature="setInstanceFollowRedirects(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getMethod()" returnType="java.lang.String"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.http.EmptyInputStream" extends="java.io.InputStream" isGeneric="false">
        <Extends mangling="java.io.InputStream"/>
        <Methods>
            <Method signature="available()" returnType="[ext]int" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Interface mangling="sun.net.www.protocol.http.HttpAuthenticator" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="schemeSupported(java.lang.String)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="authString(java.net.URL,java.lang.String,java.lang.String)" returnType="java.lang.String" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.net.www.protocol.http.AuthenticationInfo" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="SERVER_AUTHENTICATION" type="char" isStatic="true" isFinal="true"/>
            <Field name="PROXY_AUTHENTICATION" type="char" isStatic="true" isFinal="true"/>
            <Field name="type" type="char"/>
            <Field name="host" type="java.lang.String"/>
            <Field name="port" type="int"/>
            <Field name="realm" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(char,java.lang.String,int,java.lang.String)" returnType="[ext]void"/>
            <Method signature="getServerAuth(java.net.URL)" isStatic="true" returnType="sun.net.www.protocol.http.AuthenticationInfo"/>
            <Method signature="getServerAuth(java.net.URL,java.lang.String)" isStatic="true" returnType="sun.net.www.protocol.http.AuthenticationInfo"/>
            <Method signature="getProxyAuth(java.lang.String,int)" isStatic="true" returnType="sun.net.www.protocol.http.AuthenticationInfo"/>
            <Method signature="getProxyAuth(java.lang.String,int,java.lang.String)" isStatic="true" returnType="sun.net.www.protocol.http.AuthenticationInfo"/>
            <Method signature="addToCache()" returnType="[ext]void"/>
            <Method signature="removeFromCache()" returnType="[ext]void"/>
            <Method signature="supportsPreemptiveAuthorization()" returnType="[ext]boolean" isAbstract="true"/>
            <Method signature="getHeaderName()" returnType="java.lang.String" isAbstract="true"/>
            <Method signature="getHeaderValue()" returnType="java.lang.String" isAbstract="true"/>
            <Method signature="setHeaders(sun.net.www.protocol.http.HttpURLConnection,sun.net.www.HeaderParser)" returnType="[ext]boolean"/>
            <Method signature="cacheKey(boolean)" returnType="java.lang.String"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.http.BasicAuthentication" extends="sun.net.www.protocol.http.AuthenticationInfo" isGeneric="false">
        <Extends mangling="sun.net.www.protocol.http.AuthenticationInfo"/>
        <Fields>
            <Field name="auth" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(boolean,java.lang.String,int,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(boolean,java.net.URL,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="supportsPreemptiveAuthorization()" returnType="[ext]boolean"/>
            <Method signature="getHeaderName()" returnType="java.lang.String"/>
            <Method signature="getHeaderValue()" returnType="java.lang.String"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.doc.Handler" extends="java.net.URLStreamHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLStreamHandler"/>
        <Fields>
            <Field name="base" type="java.lang.String" isStatic="true"/>
            <Field name="installDirectory" type="java.lang.String" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.doc.DocURLConnection" extends="sun.net.www.URLConnection" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.www.URLConnection"/>
        <Fields>
            <Field name="is" type="java.io.InputStream"/>
            <Field name="installDirectory" type="java.lang.String" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void"/>
            <Method signature="connect()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.netdoc.Handler" extends="java.net.URLStreamHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLStreamHandler"/>
        <Fields>
            <Field name="base" type="java.net.URL" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.verbatim.Handler" extends="java.net.URLStreamHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLStreamHandler"/>
        <Methods>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.verbatim.VerbatimConnection" extends="java.net.URLConnection" isGeneric="false">
        <Extends mangling="java.net.URLConnection"/>
        <Fields>
            <Field name="sub" type="java.net.URLConnection"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="connect()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getContentType()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHeaderField(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHeaderFieldKey(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getHeaderField(int)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getContent()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setDoInput(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDoInput()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setDoOutput(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getDoOutput()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setAllowUserInteraction(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getAllowUserInteraction()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setUseCaches(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="getUseCaches()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setIfModifiedSince(long)" returnType="[ext]void" visibility="public"/>
            <Method signature="getIfModifiedSince()" returnType="[ext]long" visibility="public"/>
            <Method signature="setRequestProperty(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getRequestProperty(java.lang.String)" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.appletresource.Handler" extends="java.net.URLStreamHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLStreamHandler"/>
        <Methods>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.appletresource.AppletResourceConnection" extends="sun.net.www.URLConnection" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.www.URLConnection"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="connect()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getContent()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.systemresource.Handler" extends="java.net.URLStreamHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLStreamHandler"/>
        <Methods>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="parseURL(java.net.URL,java.lang.String,int,int)" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.systemresource.SystemResourceConnection" extends="sun.net.www.URLConnection" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.www.URLConnection"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void">
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="connect()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getContent()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.systemresource.SystemResourceManager" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void">
                <Throw mangling="java.net.MalformedURLException"/>
            </Method>
            <Method signature="getLocalResource()" returnType="[ext]void"/>
            <Method signature="getLocalResourceStream()" returnType="java.io.InputStream"/>
            <Method signature="debug(java.lang.String)" isStatic="true" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.systemresource.ParseSystemURL" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="isValid()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isFile()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isZip()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getBase()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getMember()" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.ftp.Handler" extends="java.net.URLStreamHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLStreamHandler"/>
        <Methods>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" visibility="protected"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.ftp.FtpURLConnection" extends="sun.net.www.URLConnection" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.www.URLConnection"/>
        <Fields>
            <Field name="is" type="java.io.InputStream"/>
            <Field name="ftp" type="sun.net.ftp.FtpClient"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="public"/>
            <Method signature="connect()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="guessContentTypeFromFilename(java.lang.String)" returnType="java.lang.String"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.ftp.FtpDirectoryThread" extends="java.lang.Thread" isGeneric="false">
        <Extends mangling="java.lang.Thread"/>
        <Fields>
            <Field name="images" type="java.util.Hashtable" isStatic="true"/>
            <Field name="imageWidth" type="int" isStatic="true" isFinal="true"/>
            <Field name="imageHeight" type="int" isStatic="true" isFinal="true"/>
            <Field name="conn" type="sun.net.www.protocol.ftp.FtpURLConnection"/>
            <Field name="ftp" type="sun.net.ftp.FtpClient"/>
            <Field name="os" type="java.io.PrintStream"/>
            <Field name="is" type="java.io.InputStream"/>
            <Field name="url" type="java.net.URL"/>
        </Fields>
        <Methods>
            <Method signature="fullImagePath(java.lang.String)" isStatic="true" returnType="java.lang.String"/>
            <Method signature="+ctor(sun.net.www.protocol.ftp.FtpURLConnection,sun.net.ftp.FtpClient,java.net.URL,java.io.InputStream,java.io.OutputStream)" returnType="[ext]void"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="addImage(java.lang.String)" returnType="[ext]void"/>
            <Method signature="lookupImage(java.lang.String)" returnType="java.lang.String"/>
            <Method signature="addFile(int,java.lang.String,java.lang.String,java.net.URL)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.gopher.GopherClient" extends="sun.net.NetworkClient" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.NetworkClient"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields>
            <Field name="useGopherProxy" type="boolean" isStatic="true" visibility="public"/>
            <Field name="gopherProxyHost" type="java.lang.String" isStatic="true" visibility="public"/>
            <Field name="gopherProxyPort" type="int" isStatic="true" visibility="public"/>
            <Field name="os" type="java.io.PipedOutputStream"/>
            <Field name="u" type="java.net.URL"/>
            <Field name="gtype" type="int"/>
            <Field name="gkey" type="java.lang.String"/>
            <Field name="connection" type="sun.net.www.URLConnection"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.net.www.URLConnection)" returnType="[ext]void"/>
            <Method signature="openStream(java.net.URL)" returnType="java.io.InputStream">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.gopher.GopherInputStream" extends="java.io.FilterInputStream" isGeneric="false">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="parent" type="sun.net.NetworkClient"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.net.NetworkClient,java.io.InputStream)" returnType="[ext]void"/>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.gopher.Handler" extends="java.net.URLStreamHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLStreamHandler"/>
        <Methods>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.gopher.GopherURLConnection" extends="sun.net.www.URLConnection" isGeneric="false">
        <Extends mangling="sun.net.www.URLConnection"/>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void"/>
            <Method signature="connect()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.mailto.Handler" extends="java.net.URLStreamHandler" isGeneric="false" visibility="public">
        <Extends mangling="java.net.URLStreamHandler"/>
        <Methods>
            <Method signature="openConnection(java.net.URL)" returnType="java.net.URLConnection" visibility="public"/>
            <Method signature="parseURL(java.net.URL,java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.protocol.mailto.MailToURLConnection" extends="sun.net.www.URLConnection" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.www.URLConnection"/>
        <Fields>
            <Field name="is" type="java.io.InputStream"/>
            <Field name="os" type="java.io.OutputStream"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void"/>
            <Method signature="getFromAddress()" returnType="java.lang.String"/>
            <Method signature="connect()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.http.PosterOutputStream" extends="java.io.ByteArrayOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ByteArrayOutputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.http.HttpClient" extends="sun.net.NetworkClient" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.NetworkClient"/>
        <Fields>
            <Field name="requests" type="sun.net.www.MessageHeader"/>
            <Field name="failedOnce" type="boolean"/>
            <Field name="kas" type="sun.net.www.http.KeepAliveStream"/>
            <Field name="httpPortNumber" type="int" isStatic="true" isFinal="true"/>
            <Field name="proxyHost" type="java.lang.String" isStatic="true" visibility="public"/>
            <Field name="proxyPort" type="int" isStatic="true" visibility="public"/>
            <Field name="httpKeepAliveSet" type="boolean" isStatic="true" visibility="public"/>
            <Field name="proxyDisabled" type="boolean" visibility="protected"/>
            <Field name="usingProxy" type="boolean" visibility="public"/>
            <Field name="kac" type="sun.net.www.http.KeepAliveCache" isStatic="true" visibility="protected"/>
            <Field name="keepingAlive" type="boolean"/>
            <Field name="keepAliveConnections" type="int"/>
            <Field name="keepAliveTimeout" type="int"/>
            <Field name="url" type="java.net.URL" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="getDefaultPort()" returnType="[ext]int" visibility="protected"/>
            <Method signature="resetProperties()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.net.URL,java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.net.URL,boolean)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="New(java.net.URL)" isStatic="true" returnType="sun.net.www.http.HttpClient" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finished(sun.net.www.http.HttpClient)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="openServer(java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getURLFile()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeRequests(sun.net.www.MessageHeader)" returnType="[ext]void" visibility="public"/>
            <Method signature="parseHTTP(sun.net.www.MessageHeader,sun.net.ProgressEntry)" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public"/>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="isKeepingAlive()" returnType="[ext]boolean" isFinal="true" visibility="public"/>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.lang.Throwable"/>
            </Method>
            <Method signature="closeServer()" returnType="[ext]void" visibility="public"/>
            <Method signature="getProxyHostUsed()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getProxyPortUsed()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.http.KeepAliveStream" extends="sun.net.www.MeteredStream" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.www.MeteredStream"/>
        <Fields>
            <Field name="hc" type="sun.net.www.http.HttpClient"/>
            <Field name="hurried" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,sun.net.ProgressEntry,sun.net.www.http.HttpClient)" returnType="[ext]void" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="hurry()" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.http.KeepAliveCache" extends="java.util.Hashtable" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Hashtable"/>
        <Fields>
            <Field name="MAXCONNS" type="int" isStatic="true"/>
            <Field name="LIFETIME" type="int" isStatic="true" isFinal="true"/>
            <Field name="PROXY_LIFETIME" type="int" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="put(java.net.URL,sun.net.www.http.HttpClient)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeVector(sun.net.www.http.KeepAliveKey)" returnType="[ext]void"/>
            <Method signature="get(java.net.URL)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.http.ClientVector" extends="java.util.Stack" isGeneric="false">
        <Extends mangling="java.util.Stack"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields>
            <Field name="inUse" type="sun.net.www.http.HttpClient[]"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.net.www.http.KeepAliveCache,sun.net.www.http.KeepAliveKey,int)" returnType="[ext]void"/>
            <Method signature="get()" returnType="sun.net.www.http.HttpClient"/>
            <Method signature="put(sun.net.www.http.HttpClient)" returnType="[ext]void"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.www.http.KeepAliveKey" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.URLCanonicalizer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="canonicalize(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="hasProtocolName(java.lang.String)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isSimpleHostName(java.lang.String)" returnType="[ext]boolean" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.NetworkClient" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="serverSocket" type="java.net.Socket" visibility="protected"/>
            <Field name="serverOutput" type="java.io.PrintStream" visibility="public"/>
            <Field name="serverInput" type="java.io.InputStream" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="openServer(java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.net.UnknownHostException"/>
            </Method>
            <Method signature="doConnect(java.lang.String,int)" returnType="java.net.Socket" visibility="protected">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.net.UnknownHostException"/>
            </Method>
            <Method signature="closeServer()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="serverIsOpen()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.NetworkServer" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields>
            <Field name="clientSocket" type="java.net.Socket" visibility="public"/>
            <Field name="clientOutput" type="java.io.PrintStream" visibility="public"/>
            <Field name="clientInput" type="java.io.InputStream" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="clientIsOpen()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="run()" returnType="[ext]void" isFinal="true" visibility="public"/>
            <Method signature="startServer(int)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="serviceRequest()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="main(java.lang.String[])" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.ProgressData" extends="java.util.Observable" isGeneric="false" visibility="public">
        <Extends mangling="java.util.Observable"/>
        <Fields>
            <Field name="pdata" type="sun.net.ProgressData" isStatic="true" visibility="public"/>
            <Field name="NEW" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONNECTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UPDATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DELETE" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="getStreams()" returnType="[ext]sun.net.ProgressEntry[]" visibility="public"/>
            <Method signature="register(sun.net.ProgressEntry)" returnType="[ext]void" visibility="public"/>
            <Method signature="connected(java.net.URL)" returnType="[ext]void" visibility="public"/>
            <Method signature="unregister(sun.net.ProgressEntry)" returnType="[ext]void" visibility="public"/>
            <Method signature="update(sun.net.ProgressEntry)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.ProgressEntry" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="HTML" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="IMAGE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CLASS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="AUDIO" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="OTHER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="need" type="int" visibility="public"/>
            <Field name="read" type="int" visibility="public"/>
            <Field name="what" type="int" visibility="public"/>
            <Field name="index" type="int" visibility="public"/>
            <Field name="connected" type="boolean" visibility="public"/>
            <Field name="label" type="java.lang.String" visibility="public"/>
            <Field name="type" type="int" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="setType(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="update(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="connected()" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.TelnetInputStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="stickyCRLF" type="boolean"/>
            <Field name="seenCR" type="boolean"/>
            <Field name="binaryMode" type="boolean" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setStickyCRLF(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[])" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.TelnetProtocolException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.TelnetOutputStream" extends="java.io.BufferedOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.BufferedOutputStream"/>
        <Fields>
            <Field name="stickyCRLF" type="boolean"/>
            <Field name="seenCR" type="boolean"/>
            <Field name="binaryMode" type="boolean" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.TransferProtocolClient" extends="sun.net.NetworkClient" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.NetworkClient"/>
        <Fields>
            <Field name="debug" type="boolean" isStatic="true" isFinal="true"/>
            <Field name="serverResponse" type="java.util.Vector" visibility="protected"/>
            <Field name="lastReplyCode" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="readServerResponse()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="sendServer(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getResponseString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getResponseStrings()" returnType="java.util.Vector" visibility="public"/>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.ftp.FtpInputStream" extends="sun.net.TelnetInputStream" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.TelnetInputStream"/>
        <Fields>
            <Field name="ftp" type="sun.net.ftp.FtpClient"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.net.ftp.FtpClient,java.io.InputStream,boolean)" returnType="[ext]void"/>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.ftp.FtpClient" extends="sun.net.TransferProtocolClient" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.TransferProtocolClient"/>
        <Fields>
            <Field name="FTP_PORT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="FTP_SUCCESS" type="int" isStatic="true"/>
            <Field name="FTP_TRY_AGAIN" type="int" isStatic="true"/>
            <Field name="FTP_ERROR" type="int" isStatic="true"/>
            <Field name="user" type="java.lang.String"/>
            <Field name="password" type="java.lang.String"/>
            <Field name="command" type="java.lang.String"/>
            <Field name="lastReplyCode" type="int"/>
            <Field name="welcomeMsg" type="java.lang.String" visibility="public"/>
            <Field name="useFtpProxy" type="boolean" isStatic="true" visibility="public"/>
            <Field name="ftpProxyHost" type="java.lang.String" isStatic="true" visibility="public"/>
            <Field name="ftpProxyPort" type="int" isStatic="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="closeServer()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="issueCommand(java.lang.String)" returnType="[ext]int" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="issueCommandCheck(java.lang.String)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readReply()" returnType="[ext]int" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="openDataConnection(java.lang.String)" returnType="java.net.Socket" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="openServer(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="openServer(java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="login(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="get(java.lang.String)" returnType="sun.net.TelnetInputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="put(java.lang.String)" returnType="sun.net.TelnetOutputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="list()" returnType="sun.net.TelnetInputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="cd(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="binary()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="ascii()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.ftp.FtpProtocolException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.ftp.FtpLoginException" extends="sun.net.ftp.FtpProtocolException" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.ftp.FtpProtocolException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.ftp.IftpClient" extends="sun.net.ftp.FtpClient" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.ftp.FtpClient"/>
        <Fields>
            <Field name="IFTP_PORT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="proxyServer" type="java.lang.String"/>
            <Field name="actualHost" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="openServer(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="checkExpectedReply()" returnType="[ext]boolean">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="login(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setProxyServer(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.nntp.NewsgroupInfo" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="name" type="java.lang.String" visibility="public"/>
            <Field name="firstArticle" type="int" visibility="public"/>
            <Field name="lastArticle" type="int" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="reload(sun.net.nntp.NntpClient)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.nntp.NntpClient" extends="sun.net.TransferProtocolClient" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.TransferProtocolClient"/>
        <Fields>
            <Field name="NNTP_PORT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="serverName" type="java.lang.String"/>
            <Field name="serverPort" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="openServer(java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="askServer(java.lang.String)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="makeStreamRequest(java.lang.String,int)" returnType="java.io.InputStream">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="tokenize(java.lang.String)" returnType="[ext]java.lang.String[]"/>
            <Method signature="getGroup(java.lang.String)" returnType="sun.net.nntp.NewsgroupInfo" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setGroup(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getArticle(int)" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getArticle(java.lang.String)" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getHeader(int)" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getHeader(java.lang.String)" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="startPost()" returnType="java.io.PrintStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finishPost()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.nntp.NntpProtocolException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.nntp.NntpInputStream" extends="java.io.FilterInputStream" isGeneric="false">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="column" type="int"/>
            <Field name="eofOccurred" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="eof()" returnType="[ext]int"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[])" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.nntp.UnknownNewsgroupException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.smtp.SmtpClient" extends="sun.net.TransferProtocolClient" isGeneric="false" visibility="public">
        <Extends mangling="sun.net.TransferProtocolClient"/>
        <Fields>
            <Field name="message" type="sun.net.smtp.SmtpPrintStream"/>
        </Fields>
        <Methods>
            <Method signature="closeServer()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="issueCommand(java.lang.String,int)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="to(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="from(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="startMessage()" returnType="java.io.PrintStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="closeMessage()" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.net.smtp.SmtpPrintStream" extends="java.io.PrintStream" isGeneric="false">
        <Extends mangling="java.io.PrintStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream,sun.net.smtp.SmtpClient)" returnType="[ext]void"/>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="print(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.net.smtp.SmtpProtocolException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.pkcs.PKCS7" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.security.pkcs.ParsingException"/>
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(sun.security.util.DerInputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.security.pkcs.ParsingException"/>
            </Method>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.security.pkcs.ParsingException"/>
            </Method>
            <Method signature="+ctor(sun.security.x509.AlgorithmId[],sun.security.pkcs.ContentInfo,sun.security.x509.X509Cert[],sun.security.pkcs.SignerInfo[])" returnType="[ext]void" visibility="public"/>
            <Method signature="encodeSignedData(java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encodeSignedData(sun.security.util.DerOutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="verify(sun.security.pkcs.SignerInfo,byte[])" returnType="sun.security.pkcs.SignerInfo" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="verify(byte[])" returnType="[ext]sun.security.pkcs.SignerInfo[]" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="verify()" returnType="[ext]sun.security.pkcs.SignerInfo[]" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="getVersion()" returnType="sun.security.util.BigInt" visibility="public"/>
            <Method signature="getDigestAlgorithmIds()" returnType="[ext]sun.security.x509.AlgorithmId[]" visibility="public"/>
            <Method signature="getContentInfo()" returnType="sun.security.pkcs.ContentInfo" visibility="public"/>
            <Method signature="getCertificates()" returnType="[ext]sun.security.x509.X509Cert[]" visibility="public"/>
            <Method signature="getSignerInfos()" returnType="[ext]sun.security.pkcs.SignerInfo[]" visibility="public"/>
            <Method signature="getCertificate(sun.security.util.BigInt,sun.security.x509.X500Name)" returnType="sun.security.x509.X509Cert" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.pkcs.ParsingException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.pkcs.ContentInfo" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="PKCS7_OID" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DATA_OID" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SIGNED_DATA_OID" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENVELOPED_DATA_OID" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SIGNED_AND_ENVELOPED_DATA_OID" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DIGESTED_DATA_OID" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ENCRYPTED_DATA_OID" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="contentType" type="sun.security.util.ObjectIdentifier"/>
            <Field name="content" type="sun.security.util.DerValue"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.security.util.DerInputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="sun.security.pkcs.ParsingException"/>
            </Method>
            <Method signature="getContent()" returnType="sun.security.util.DerValue" visibility="public"/>
            <Method signature="getData()" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encode(sun.security.util.DerOutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getContentBytes()" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.pkcs.SignerInfo" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="version" type="sun.security.util.BigInt"/>
            <Field name="issuerName" type="sun.security.x509.X500Name"/>
            <Field name="certificateSerialNumber" type="sun.security.util.BigInt"/>
            <Field name="digestAlgorithmId" type="sun.security.x509.AlgorithmId"/>
            <Field name="digestEncryptionAlgorithmId" type="sun.security.x509.AlgorithmId"/>
            <Field name="encryptedDigest" type="byte[]"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.security.x509.X500Name,sun.security.util.BigInt,sun.security.x509.AlgorithmId,sun.security.x509.AlgorithmId,byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.security.util.DerInputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="sun.security.pkcs.ParsingException"/>
            </Method>
            <Method signature="encode(sun.security.util.DerOutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getCertificate(sun.security.pkcs.PKCS7)" returnType="sun.security.x509.X509Cert" visibility="public"/>
            <Method signature="verify(sun.security.pkcs.PKCS7,byte[])" returnType="sun.security.pkcs.SignerInfo">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="verify(sun.security.pkcs.PKCS7)" returnType="sun.security.pkcs.SignerInfo">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="getVersion()" returnType="sun.security.util.BigInt" visibility="public"/>
            <Method signature="getIssuerName()" returnType="sun.security.x509.X500Name" visibility="public"/>
            <Method signature="getCertificateSerialNumber()" returnType="sun.security.util.BigInt" visibility="public"/>
            <Method signature="getDigestAlgorithmId()" returnType="sun.security.x509.AlgorithmId" visibility="public"/>
            <Method signature="getDigestEncryptionAlgorithmId()" returnType="sun.security.x509.AlgorithmId" visibility="public"/>
            <Method signature="getEncryptedDigest()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.pkcs.PKCS8Key" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.PrivateKey"/>
        <Fields>
            <Field name="algid" type="sun.security.x509.AlgorithmId" visibility="protected"/>
            <Field name="key" type="byte[]" visibility="protected"/>
            <Field name="version" type="java.math.BigInteger" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="parse(sun.security.util.DerValue)" isStatic="true" returnType="sun.security.pkcs.PKCS8Key" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="parseKeyBits()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="getSunProperty(java.lang.String)" isStatic="true" returnType="java.lang.String"/>
            <Method signature="buildPKCS8Key(sun.security.x509.AlgorithmId,byte[])" isStatic="true" returnType="sun.security.pkcs.PKCS8Key">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="getAlgorithm()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getAlgorithmId()" returnType="sun.security.x509.AlgorithmId" visibility="public"/>
            <Method signature="emit(sun.security.util.DerOutputStream)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getEncoded()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="getFormat()" returnType="java.lang.String" visibility="public"/>
            <Method signature="encode()" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="decode(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="decode(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.security.pkcs.PKCS10" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.security.x509.X509Key)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.security.SignatureException"/>
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="encodeAndSign(sun.security.x509.X500Signer)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="getSubjectName()" returnType="sun.security.x509.X500Name" visibility="public"/>
            <Method signature="getSubjectPublicKeyInfo()" returnType="sun.security.x509.X509Key" visibility="public"/>
            <Method signature="toByteArray()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="print(java.io.PrintStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.pkcs.EncodingException" extends="java.lang.Exception" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.X509Cert" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.Certificate"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="algid" type="sun.security.x509.AlgorithmId" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(sun.security.util.DerValue)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(sun.security.x509.X500Name,sun.security.x509.X509Key,java.util.Date,java.util.Date)" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.security.x509.CertException"/>
            </Method>
            <Method signature="decode(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encode(java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equals(sun.security.x509.X509Cert)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getFormat()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getGuarantor()" returnType="java.security.Principal" visibility="public"/>
            <Method signature="getPrincipal()" returnType="java.security.Principal" visibility="public"/>
            <Method signature="verify(java.security.PublicKey)" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.security.x509.CertException"/>
            </Method>
            <Method signature="encodeAndSign(sun.security.util.BigInt,sun.security.x509.X500Signer)" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="getSigner(sun.security.x509.AlgorithmId,java.security.PrivateKey)" returnType="sun.security.x509.X500Signer" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="getVerifier(java.lang.String)" returnType="java.security.Signature" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="getSignedCert()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="getSerialNumber()" returnType="sun.security.util.BigInt" visibility="public"/>
            <Method signature="getSubjectName()" returnType="sun.security.x509.X500Name" visibility="public"/>
            <Method signature="getIssuerName()" returnType="sun.security.x509.X500Name" visibility="public"/>
            <Method signature="getIssuerAlgorithmId()" returnType="sun.security.x509.AlgorithmId" visibility="public"/>
            <Method signature="getNotBefore()" returnType="java.util.Date" visibility="public"/>
            <Method signature="getNotAfter()" returnType="java.util.Date" visibility="public"/>
            <Method signature="getPublicKey()" returnType="java.security.PublicKey" visibility="public"/>
            <Method signature="getVersion()" returnType="[ext]int" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString(boolean)" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.CertException" extends="java.lang.SecurityException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.SecurityException"/>
        <Fields>
            <Field name="verf_INVALID_SIG" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="verf_INVALID_REVOKED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="verf_INVALID_NOTBEFORE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="verf_INVALID_EXPIRED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="verf_CA_UNTRUSTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="verf_CHAIN_LENGTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="verf_PARSE_ERROR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="err_CONSTRUCTION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="err_INVALID_PUBLIC_KEY" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getVerfCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="getMoreData()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getVerfDescription()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.X500Name" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.Principal"/>
        <Fields>
            <Field name="commonName_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="countryName_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="localityName_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="orgName_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="orgUnitName_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="stateName_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="streetAddress_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="title_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ipAddress_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(sun.security.util.DerValue)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(sun.security.util.DerInputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="equals(sun.security.x509.X500Name)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getCountry()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOrganization()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOrganizationalUnit()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getCommonName()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getLocality()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getState()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="emit(sun.security.util.DerOutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="intern(sun.security.util.ObjectIdentifier)" isStatic="true" returnType="sun.security.util.ObjectIdentifier"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.RDN" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="assertion" type="sun.security.x509.AVA[]" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.security.util.DerValue)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(int)" returnType="[ext]void"/>
            <Method signature="equals(sun.security.x509.RDN)" returnType="[ext]boolean"/>
            <Method signature="findAttribute(sun.security.util.ObjectIdentifier)" returnType="sun.security.util.DerValue"/>
            <Method signature="emit(sun.security.util.DerOutputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.AlgorithmId" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="params" type="sun.security.util.DerValue" visibility="protected"/>
            <Field name="MD2_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MD5_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SHA_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DH_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DSA_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="RSA_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="RSAEncryption_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="md2WithRSAEncryption_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="md5WithRSAEncryption_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="shaWithDSA_oid" type="sun.security.util.ObjectIdentifier" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="getAlgorithmId(java.lang.String)" isStatic="true" returnType="sun.security.x509.AlgorithmId" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="get(java.lang.String)" isStatic="true" returnType="sun.security.x509.AlgorithmId" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="parse(sun.security.util.DerValue)" isStatic="true" returnType="sun.security.x509.AlgorithmId" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(sun.security.util.ObjectIdentifier)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="decodeParams()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="emit(sun.security.util.DerOutputStream)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encode(java.io.OutputStream)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="encode()" returnType="[ext]byte[]" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOID()" returnType="sun.security.util.ObjectIdentifier" isFinal="true" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="paramsToString()" returnType="java.lang.String" visibility="protected"/>
            <Method signature="equals(sun.security.x509.AlgorithmId)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equals(sun.security.util.ObjectIdentifier)" returnType="[ext]boolean" isFinal="true" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.X509Key" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.PublicKey"/>
        <Fields>
            <Field name="algid" type="sun.security.x509.AlgorithmId" visibility="protected"/>
            <Field name="key" type="byte[]" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="protected"/>
            <Method signature="parse(sun.security.util.DerValue)" isStatic="true" returnType="sun.security.x509.X509Key" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="parseKeyBits()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="getSunProperty(java.lang.String)" isStatic="true" returnType="java.lang.String"/>
            <Method signature="buildX509Key(sun.security.x509.AlgorithmId,byte[])" isStatic="true" returnType="sun.security.x509.X509Key">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="getAlgorithm()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getAlgorithmId()" returnType="sun.security.x509.AlgorithmId" visibility="public"/>
            <Method signature="emit(sun.security.util.DerOutputStream)" returnType="[ext]void" isFinal="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getEncoded()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="getFormat()" returnType="java.lang.String" visibility="public"/>
            <Method signature="encode()" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="decode(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="decode(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.CertParseError" extends="sun.security.x509.CertException" isGeneric="false">
        <Extends mangling="sun.security.x509.CertException"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.X500Signer" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="update(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="sign()" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="getAlgorithmId()" returnType="sun.security.x509.AlgorithmId" visibility="public"/>
            <Method signature="getSigner()" returnType="sun.security.x509.X500Name" visibility="public"/>
            <Method signature="+ctor(java.security.Signature,sun.security.x509.X500Name)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.AVA" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="oid" type="sun.security.util.ObjectIdentifier"/>
            <Field name="value" type="sun.security.util.DerValue"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.security.util.ObjectIdentifier,sun.security.util.DerValue)" returnType="[ext]void"/>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(sun.security.util.DerInputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="equals(sun.security.x509.AVA)" returnType="[ext]boolean"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="emit(sun.security.util.DerOutputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.AlgIdDSA" extends="sun.security.x509.AlgorithmId" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="sun.security.x509.AlgorithmId"/>
        <Implements mangling="java.security.interfaces.DSAParams"/>
        <Fields/>
        <Methods>
            <Method signature="getP()" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="getQ()" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="getG()" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.security.util.DerValue)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(byte[],byte[],byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)" returnType="[ext]void" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="decodeParams()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="paramsToString()" returnType="java.lang.String" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.x509.CertAndKeyGen" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="setRandom(java.security.SecureRandom)" returnType="[ext]void" visibility="public"/>
            <Method signature="generate(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="getPublicKey()" returnType="sun.security.x509.X509Key" visibility="public"/>
            <Method signature="getPrivateKey()" returnType="java.security.PrivateKey" visibility="public"/>
            <Method signature="getSelfCert(sun.security.x509.X500Name,long)" returnType="sun.security.x509.X509Cert" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
                <Throw mangling="java.security.SignatureException"/>
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="getCertRequest(sun.security.x509.X500Name)" returnType="sun.security.pkcs.PKCS10" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
                <Throw mangling="java.security.SignatureException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.SystemIdentity" extends="java.security.Identity" isGeneric="false" visibility="public">
        <Extends mangling="java.security.Identity"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="trusted" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.security.IdentityScope)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidParameterException"/>
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="isTrusted()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setTrusted(boolean)" returnType="[ext]void" visibility="protected"/>
            <Method signature="setIdentityInfo(java.lang.String)" returnType="[ext]void"/>
            <Method signature="getIndentityInfo()" returnType="java.lang.String"/>
            <Method signature="setIdentityPublicKey(java.security.PublicKey)" returnType="[ext]void">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="addIdentityCertificate(java.security.Certificate)" returnType="[ext]void">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="clearCertificates()" returnType="[ext]void">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.Sun" extends="java.security.Provider" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.security.Provider"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.IdentityDatabase" extends="java.security.IdentityScope" isGeneric="false" visibility="public">
        <Extends mangling="java.security.IdentityScope"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="sourceFile" type="java.io.File"/>
            <Field name="identities" type="java.util.Hashtable"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
            <Method signature="+ctor(java.io.File)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
            <Method signature="fromStream(java.io.InputStream)" isStatic="true" returnType="sun.security.provider.IdentityDatabase" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="fromFile(java.io.File)" isStatic="true" returnType="sun.security.provider.IdentityDatabase" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="size()" returnType="[ext]int" visibility="public"/>
            <Method signature="getIdentity(java.lang.String)" returnType="java.security.Identity" visibility="public"/>
            <Method signature="getIdentity(java.security.PublicKey)" returnType="java.security.Identity" visibility="public"/>
            <Method signature="addIdentity(java.security.Identity)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="removeIdentity(java.security.Identity)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="identities()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="setSourceFile(java.io.File)" returnType="[ext]void"/>
            <Method signature="getSourceFile()" returnType="java.io.File"/>
            <Method signature="save(java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="save(java.io.File)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="save()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="localCheck(java.lang.String)" returnType="[ext]void"/>
            <Method signature="localFullName()" returnType="java.lang.String"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.SystemSigner" extends="java.security.Signer" isGeneric="false" visibility="public">
        <Extends mangling="java.security.Signer"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.security.IdentityScope)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="setTrusted(boolean)" returnType="[ext]void"/>
            <Method signature="isTrusted()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setSignerKeyPair(java.security.KeyPair)" returnType="[ext]void">
                <Throw mangling="java.security.InvalidParameterException"/>
                <Throw mangling="java.security.KeyException"/>
            </Method>
            <Method signature="getSignerPrivateKey()" returnType="java.security.PrivateKey"/>
            <Method signature="setSignerInfo(java.lang.String)" returnType="[ext]void"/>
            <Method signature="addSignerCertificate(java.security.Certificate)" returnType="[ext]void">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="clearCertificates()" returnType="[ext]void">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.DSA" extends="java.security.Signature" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.security.Signature"/>
        <Fields>
            <Field name="strength" type="int"/>
            <Field name="p512" type="java.math.BigInteger" isStatic="true"/>
            <Field name="q512" type="java.math.BigInteger" isStatic="true"/>
            <Field name="g512" type="java.math.BigInteger" isStatic="true"/>
            <Field name="x512" type="java.math.BigInteger" isStatic="true"/>
            <Field name="y512" type="java.math.BigInteger" isStatic="true"/>
            <Field name="pString" type="java.lang.String" isStatic="true"/>
            <Field name="testP" type="java.math.BigInteger" isStatic="true"/>
            <Field name="gString" type="java.lang.String" isStatic="true"/>
            <Field name="testG" type="java.math.BigInteger" isStatic="true"/>
            <Field name="testQ" type="java.math.BigInteger" isStatic="true"/>
            <Field name="testX" type="java.math.BigInteger" isStatic="true"/>
            <Field name="yString" type="java.lang.String" isStatic="true"/>
            <Field name="testY" type="java.math.BigInteger" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="engineInitSign(java.security.PrivateKey)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="engineInitVerify(java.security.PublicKey)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="engineSign()" returnType="[ext]byte[]" visibility="protected">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="engineVerify(byte[])" returnType="[ext]boolean" visibility="protected">
                <Throw mangling="java.security.SignatureException"/>
            </Method>
            <Method signature="generateR(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)" returnType="java.math.BigInteger"/>
            <Method signature="generateS(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)" returnType="java.math.BigInteger"/>
            <Method signature="generateW(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)" returnType="java.math.BigInteger"/>
            <Method signature="generateV(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)" returnType="java.math.BigInteger"/>
            <Method signature="generateK(java.math.BigInteger)" returnType="java.math.BigInteger"/>
            <Method signature="generateK(int[],java.math.BigInteger)" returnType="java.math.BigInteger"/>
            <Method signature="SHA_7(int[],int[])" isStatic="true" returnType="[ext]int[]"/>
            <Method signature="engineSetParameter(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="protected"/>
            <Method signature="engineGetParameter(java.lang.String)" returnType="[ext]void" visibility="protected"/>
            <Method signature="engineUpdate(byte)" returnType="[ext]void" visibility="protected"/>
            <Method signature="engineUpdate(byte[],int,int)" returnType="[ext]void" visibility="protected"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="testDSA()" isStatic="true" returnType="[ext]void">
                <Throw mangling="java.lang.Exception"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.DSAKeyPairGenerator" extends="java.security.KeyPairGenerator" isGeneric="false" visibility="public">
        <Extends mangling="java.security.KeyPairGenerator"/>
        <Implements mangling="java.security.interfaces.DSAKeyPairGenerator"/>
        <Fields>
            <Field name="generateNewParameters" type="boolean"/>
            <Field name="random" type="java.security.SecureRandom"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="initialize(int,java.security.SecureRandom)" returnType="[ext]void" visibility="public"/>
            <Method signature="initialize(int,boolean,java.security.SecureRandom)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
            <Method signature="initialize(java.security.interfaces.DSAParams,java.security.SecureRandom)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidParameterException"/>
            </Method>
            <Method signature="generateKeyPair()" returnType="java.security.KeyPair" visibility="public"/>
            <Method signature="generateKeyPair(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)" returnType="java.security.KeyPair" visibility="public"/>
            <Method signature="generatePandQ(java.security.SecureRandom,int)" returnType="[ext]java.math.BigInteger[]"/>
            <Method signature="generatePandQ(byte[],int)" returnType="[ext]java.math.BigInteger[]"/>
            <Method signature="generateG(java.math.BigInteger,java.math.BigInteger)" returnType="java.math.BigInteger"/>
            <Method signature="generateX(int[],java.math.BigInteger)" returnType="java.math.BigInteger"/>
            <Method signature="generateY(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)" returnType="java.math.BigInteger"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.SHA" extends="java.security.MessageDigest" isGeneric="false" visibility="public">
        <Extends mangling="java.security.MessageDigest"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int)" returnType="[ext]void"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="engineUpdate(byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="engineUpdate(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="engineReset()" returnType="[ext]void" visibility="public"/>
            <Method signature="engineDigest()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.DSAPublicKey" extends="sun.security.x509.X509Key" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="sun.security.x509.X509Key"/>
        <Implements mangling="java.security.interfaces.DSAPublicKey"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="+ctor(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="getY()" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="getParams()" returnType="java.security.interfaces.DSAParams" visibility="public"/>
            <Method signature="parseKeyBits()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.DSAPrivateKey" extends="sun.security.pkcs.PKCS8Key" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="sun.security.pkcs.PKCS8Key"/>
        <Implements mangling="java.security.interfaces.DSAPrivateKey"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="+ctor(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="getParams()" returnType="java.security.interfaces.DSAParams" visibility="public"/>
            <Method signature="getX()" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="parseKeyBits()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="getEncodedKey()" returnType="[ext]byte[]">
                <Throw mangling="java.security.InvalidKeyException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.MD5" extends="java.security.MessageDigest" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.security.MessageDigest"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="transform(byte[],int)" returnType="[ext]void"/>
            <Method signature="init()" returnType="[ext]void" visibility="public"/>
            <Method signature="engineReset()" returnType="[ext]void" visibility="protected"/>
            <Method signature="engineUpdate(byte)" returnType="[ext]void" visibility="protected"/>
            <Method signature="engineUpdate(byte[],int,int)" returnType="[ext]void" visibility="protected"/>
            <Method signature="engineDigest()" returnType="[ext]byte[]" visibility="protected"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.provider.Main" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="program" type="java.lang.String"/>
            <Field name="usage" type="java.lang.String"/>
            <Field name="out" type="java.io.PrintStream"/>
            <Field name="err" type="java.io.PrintStream"/>
            <Field name="in" type="java.io.InputStream"/>
            <Field name="scope" type="java.security.IdentityScope" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.PrintStream,java.io.PrintStream,java.io.InputStream,java.lang.String,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setScope(java.security.IdentityScope)" returnType="[ext]void" visibility="protected"/>
            <Method signature="listCmd(java.lang.String[])" returnType="[ext]void"/>
            <Method signature="listUsage()" returnType="[ext]void"/>
            <Method signature="list(boolean)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="list(java.security.Identity)" returnType="[ext]void" visibility="public"/>
            <Method signature="createCmd(java.lang.String[])" returnType="[ext]void"/>
            <Method signature="createIdentity(java.lang.String,boolean)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="createSigner(java.lang.String,boolean)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="removeCmd(java.lang.String[])" returnType="[ext]void" visibility="protected"/>
            <Method signature="remove(java.lang.String)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="exportCmd(java.lang.String[])" returnType="[ext]void" visibility="protected"/>
            <Method signature="exportKeys(java.lang.String,java.io.File,java.io.File)" returnType="[ext]boolean"/>
            <Method signature="exportCert(java.lang.String,int,java.io.File)" returnType="[ext]boolean"/>
            <Method signature="importCmd(java.lang.String[])" returnType="[ext]void" visibility="protected"/>
            <Method signature="importCertificate(java.lang.String,java.lang.String)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="importCertificate(java.security.Identity,java.security.Certificate)" returnType="[ext]boolean">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="importPublicKey(java.lang.String,java.lang.String)" returnType="[ext]boolean"/>
            <Method signature="setKeyPair(java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]boolean"/>
            <Method signature="setKeyPair(java.lang.String,java.security.KeyPair)" returnType="[ext]boolean"/>
            <Method signature="generateCertificate(java.util.Properties)" returnType="[ext]boolean"/>
            <Method signature="generateKeyPair(java.util.Properties)" returnType="[ext]boolean"/>
            <Method signature="signJar(java.util.Properties,java.io.File)" returnType="[ext]boolean">
                <Throw mangling="java.lang.Exception"/>
            </Method>
            <Method signature="computeSignatures(sun.tools.jar.Manifest,java.util.Properties)" returnType="sun.tools.jar.SignatureFile">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.security.InvalidKeyException"/>
                <Throw mangling="java.security.SignatureException"/>
                <Throw mangling="java.security.NoSuchAlgorithmException"/>
            </Method>
            <Method signature="displayCmd(java.lang.String[])" returnType="[ext]void"/>
            <Method signature="run(java.lang.String[])" returnType="[ext]void">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="main(java.lang.String[])" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.security.KeyManagementException"/>
            </Method>
            <Method signature="machineSeed(int)" returnType="[ext]byte[]"/>
            <Method signature="userSeed(int)" returnType="[ext]byte[]"/>
            <Method signature="usage()" returnType="[ext]void"/>
            <Method signature="usageError(java.lang.String)" returnType="[ext]boolean"/>
            <Method signature="error(java.lang.String)" returnType="[ext]boolean"/>
            <Method signature="internalError(java.lang.String)" returnType="[ext]boolean"/>
            <Method signature="error(java.lang.String,java.lang.Throwable)" returnType="[ext]boolean"/>
            <Method signature="debug(java.lang.Throwable)" returnType="[ext]void"/>
            <Method signature="debug(java.lang.String,java.lang.Throwable)" returnType="[ext]void"/>
            <Method signature="debug(java.lang.String)" returnType="[ext]void"/>
            <Method signature="message(java.lang.String)" returnType="[ext]void"/>
            <Method signature="exit(java.lang.String)" returnType="[ext]void"/>
            <Method signature="assertProp(java.lang.String,java.util.Properties)" returnType="java.lang.String"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.util.ObjectIdentifier" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.security.util.DerInputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(sun.security.util.DerInputBuffer)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="emit(sun.security.util.DerOutputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="precedes(sun.security.util.ObjectIdentifier)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equals(sun.security.util.ObjectIdentifier)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.util.BigInt" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.math.BigInteger)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="toInt()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toBigInteger()" returnType="java.math.BigInteger" visibility="public"/>
            <Method signature="toByteArray()" returnType="[ext]byte[]" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equals(sun.security.util.BigInt)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.util.DerInputStream" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="buffer" type="sun.security.util.DerInputBuffer"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[],int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.security.util.DerInputBuffer)" returnType="[ext]void"/>
            <Method signature="subStream(int,boolean)" returnType="sun.security.util.DerInputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInteger()" returnType="sun.security.util.BigInt" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getBitString()" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOctetString()" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getNull()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOID()" returnType="sun.security.util.ObjectIdentifier" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getSequence(int)" returnType="[ext]sun.security.util.DerValue[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getSet(int)" returnType="[ext]sun.security.util.DerValue[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readVector(int)" returnType="[ext]sun.security.util.DerValue[]" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getDerValue()" returnType="sun.security.util.DerValue" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getUTCTime()" returnType="java.util.Date" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getByte()" returnType="[ext]int">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="peekByte()" returnType="[ext]int">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getLength()" returnType="[ext]int">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getLength(java.io.InputStream)" isStatic="true" returnType="[ext]int">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="available()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.util.DerValue" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="tag" type="byte" visibility="public"/>
            <Field name="buffer" type="sun.security.util.DerInputBuffer" visibility="protected"/>
            <Field name="data" type="sun.security.util.DerInputStream" visibility="public"/>
            <Field name="tag_Integer" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_BitString" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_OctetString" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_Null" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_ObjectId" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_PrintableString" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_T61String" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_IA5String" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_UtcTime" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_Sequence" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_SequenceOf" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_Set" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="tag_SetOf" type="byte" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="isUniversal()" returnType="[ext]boolean"/>
            <Method signature="isApplication()" returnType="[ext]boolean"/>
            <Method signature="isContextSpecific()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isPrivate()" returnType="[ext]boolean"/>
            <Method signature="isConstructed()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(byte,byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.security.util.DerInputBuffer)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="emit(sun.security.util.DerOutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOID()" returnType="sun.security.util.ObjectIdentifier" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOctetString()" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInteger()" returnType="sun.security.util.BigInt" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getBitString()" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getAsString()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getPrintableString()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getT61String()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getIA5String()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equals(sun.security.util.DerValue)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="toByteArray()" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toDerInputStream()" returnType="sun.security.util.DerInputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.security.util.DerOutputStream" extends="java.io.ByteArrayOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ByteArrayOutputStream"/>
        <Methods>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="write(byte,byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte,sun.security.util.DerOutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putDerValue(sun.security.util.DerValue)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putInteger(sun.security.util.BigInt)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putBitString(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putOctetString(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putNull()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putOID(sun.security.util.ObjectIdentifier)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putSequence(sun.security.util.DerValue[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putSet(sun.security.util.DerValue[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putPrintableString(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putIA5String(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putUTCTime(java.util.Date)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="putLength(int)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.security.util.DerInputBuffer" extends="java.io.ByteArrayInputStream" isGeneric="false">
        <Extends mangling="java.io.ByteArrayInputStream"/>
        <Implements mangling="java.lang.Cloneable"/>
        <Methods>
            <Method signature="+ctor(byte[])" returnType="[ext]void"/>
            <Method signature="+ctor(byte[],int,int)" returnType="[ext]void"/>
            <Method signature="dup()" returnType="sun.security.util.DerInputBuffer"/>
            <Method signature="peek()" returnType="[ext]int">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="equals(sun.security.util.DerInputBuffer)" returnType="[ext]boolean"/>
            <Method signature="truncate(int)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getUnsigned(int)" returnType="sun.security.util.BigInt">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getBitString()" returnType="[ext]byte[]"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.acl.AclEntryImpl" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.acl.AclEntry"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.security.Principal)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="setPrincipal(java.security.Principal)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setNegativePermissions()" returnType="[ext]void" visibility="public"/>
            <Method signature="isNegative()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="addPermission(java.security.acl.Permission)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="removePermission(java.security.acl.Permission)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkPermission(java.security.acl.Permission)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="permissions()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="clone()" returnType="[ext]void" visibility="public"/>
            <Method signature="getPrincipal()" returnType="java.security.Principal" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.acl.GroupImpl" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.acl.Group"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="addMember(java.security.Principal)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="removeMember(java.security.Principal)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="members()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="equals(java.security.acl.Group)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="isMember(java.security.Principal)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="isMemberRecurse(java.security.Principal,java.util.Vector)" returnType="[ext]boolean"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.acl.OwnerImpl" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.acl.Owner"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.security.Principal)" returnType="[ext]void" visibility="public"/>
            <Method signature="addOwner(java.security.Principal,java.security.Principal)" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.security.acl.NotOwnerException"/>
            </Method>
            <Method signature="deleteOwner(java.security.Principal,java.security.Principal)" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.security.acl.NotOwnerException"/>
                <Throw mangling="java.security.acl.LastOwnerException"/>
            </Method>
            <Method signature="isOwner(java.security.Principal)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.acl.AclEnumerator" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.Enumeration"/>
        <Fields>
            <Field name="acl" type="java.security.acl.Acl"/>
            <Field name="u1" type="java.util.Enumeration"/>
            <Field name="u2" type="java.util.Enumeration"/>
            <Field name="g1" type="java.util.Enumeration"/>
            <Field name="g2" type="java.util.Enumeration"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.security.acl.Acl,java.util.Hashtable,java.util.Hashtable,java.util.Hashtable,java.util.Hashtable)" returnType="[ext]void"/>
            <Method signature="hasMoreElements()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="nextElement()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.acl.PermissionImpl" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.acl.Permission"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.security.acl.PrincipalImpl" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.security.Principal"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.audio.AudioDataStream" extends="java.io.ByteArrayInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ByteArrayInputStream"/>
        <Methods>
            <Method signature="+ctor(sun.audio.AudioData)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.audio.AudioData" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="buffer" type="byte[]"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.audio.AudioDevice" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="device" type="sun.audio.AudioDevice" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="openChannel(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="closeChannel(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="open()" returnType="[ext]void" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public"/>
            <Method signature="play()" returnType="[ext]void" visibility="public"/>
            <Method signature="closeStreams()" returnType="[ext]void" visibility="public"/>
            <Method signature="openChannels()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.audio.AudioPlayer" extends="java.lang.Thread" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Thread"/>
        <Fields>
            <Field name="player" type="sun.audio.AudioPlayer" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="start(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="stop(java.io.InputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.audio.AudioStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="audioIn" type="sun.audio.NativeAudioStream"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getData()" returnType="sun.audio.AudioData" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getLength()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.audio.NativeAudioStream" extends="java.io.FilterInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getLength()" returnType="[ext]int" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.audio.InvalidAudioFormatException" extends="java.io.IOException" isGeneric="false">
        <Extends mangling="java.io.IOException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.audio.AudioStreamSequence" extends="java.io.SequenceInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.SequenceInputStream"/>
        <Fields>
            <Field name="e" type="java.util.Enumeration"/>
            <Field name="in" type="java.io.InputStream"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.util.Enumeration)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletResourceLoader" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="debug" type="boolean" isStatic="true"/>
            <Field name="verboseResourceLoading" type="boolean" isStatic="true"/>
            <Field name="loader" type="sun.applet.AppletClassLoader"/>
        </Fields>
        <Methods>
            <Method signature="debug(java.lang.String)" isStatic="true" returnType="[ext]void"/>
            <Method signature="debug(java.lang.String,java.lang.Throwable)" isStatic="true" returnType="[ext]void"/>
            <Method signature="+ctor(sun.applet.AppletClassLoader)" returnType="[ext]void" visibility="public"/>
            <Method signature="loadJar(java.net.URL,java.lang.String)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="loadJar(java.net.URL,java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="guessManifestType(java.lang.String)" returnType="java.lang.String"/>
            <Method signature="getAudioClip(java.net.URL)" isStatic="true" returnType="java.applet.AudioClip" visibility="public"/>
            <Method signature="flushAudioClips()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="createImage(byte[],java.net.URL,java.lang.String,java.lang.String)" returnType="java.awt.Image">
                <Throw mangling="java.net.MalformedURLException"/>
            </Method>
            <Method signature="getImage(java.net.URL)" isStatic="true" returnType="java.awt.Image" visibility="public"/>
            <Method signature="getImageRef(java.net.URL)" isStatic="true" returnType="sun.misc.Ref" visibility="public"/>
            <Method signature="flushImages()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocalResource(java.net.URL)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocalResourceStream(java.net.URL)" isStatic="true" returnType="java.io.InputStream" visibility="public"/>
            <Method signature="getResourceAsName(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getResourceAsStream(java.lang.String)" returnType="java.io.InputStream" visibility="public"/>
            <Method signature="resetLocalResources()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.HashValues" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="sha" type="byte[]"/>
            <Field name="md5" type="byte[]"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(byte[],byte[])" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletClassLoader" extends="java.lang.ClassLoader" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.ClassLoader"/>
        <Fields>
            <Field name="archives" type="java.util.Vector"/>
            <Field name="verboseClassLoading" type="boolean" visibility="protected"/>
            <Field name="base" type="java.net.URL"/>
            <Field name="resources" type="sun.applet.AppletResourceLoader"/>
            <Field name="threadGroup" type="sun.applet.AppletThreadGroup"/>
            <Field name="rawClasses" type="java.util.Hashtable" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="protected"/>
            <Method signature="+ctor(java.net.URL,sun.applet.AppletResourceLoader)" returnType="[ext]void" visibility="protected"/>
            <Method signature="getCodeBase()" returnType="java.net.URL" visibility="protected"/>
            <Method signature="makeRelativeURLWithSecurity(java.net.URL,java.lang.String)" isStatic="true" returnType="java.net.URL">
                <Throw mangling="java.net.MalformedURLException"/>
            </Method>
            <Method signature="loadClass(java.lang.String)" returnType="java.lang.Class" visibility="public">
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="loadClass(java.lang.String,boolean)" returnType="java.lang.Class" visibility="protected">
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="loadCode(java.lang.String)" returnType="java.lang.Class">
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="defineClassFromBytes(java.lang.String,byte[],int,int)" returnType="sun.applet.AppletClassEntry" visibility="public"/>
            <Method signature="errorMsg(java.lang.String,java.lang.String)" returnType="[ext]void"/>
            <Method signature="errorMsg(java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]void"/>
            <Method signature="getResourceLoader()" returnType="sun.applet.AppletResourceLoader" visibility="public"/>
            <Method signature="getResource(java.lang.String)" returnType="java.net.URL" visibility="public"/>
            <Method signature="getResourceAsStream(java.lang.String)" returnType="java.io.InputStream" visibility="public"/>
            <Method signature="getThreadGroup()" returnType="java.lang.ThreadGroup" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletAudioClip" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.applet.AudioClip"/>
        <Fields>
            <Field name="url" type="java.net.URL"/>
            <Field name="data" type="sun.audio.AudioData"/>
            <Field name="stream" type="java.io.InputStream"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="play()" returnType="[ext]void" visibility="public"/>
            <Method signature="loop()" returnType="[ext]void" visibility="public"/>
            <Method signature="stop()" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletClassEntry" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="classBuf" type="byte[]"/>
            <Field name="start" type="int"/>
            <Field name="len" type="int"/>
            <Field name="name" type="java.lang.String"/>
            <Field name="ids" type="java.security.Identity[]"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(byte[],int,int,java.lang.String,java.security.Identity[])" returnType="[ext]void"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletSecurityException" extends="java.lang.SecurityException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.SecurityException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocalizedMessage()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletThreadGroup" extends="java.lang.ThreadGroup" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.ThreadGroup"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.ThreadGroup,java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletMessageHandler" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void"/>
            <Method signature="getMessage(java.lang.String)" returnType="java.lang.String"/>
            <Method signature="getMessage(java.lang.String,java.lang.Object)" returnType="java.lang.String"/>
            <Method signature="getMessage(java.lang.String,java.lang.Object,java.lang.Object)" returnType="java.lang.String"/>
            <Method signature="getMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)" returnType="java.lang.String"/>
            <Method signature="getMessage(java.lang.String,java.lang.Object[])" returnType="java.lang.String"/>
            <Method signature="getQualifiedKey(java.lang.String)" returnType="java.lang.String"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletIOException" extends="java.io.IOException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.IOException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocalizedMessage()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletIllegalArgumentException" extends="java.lang.IllegalArgumentException" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.IllegalArgumentException"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocalizedMessage()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.TextFrame" extends="java.awt.Frame" isGeneric="false">
        <Extends mangling="java.awt.Frame"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(int,int,java.lang.String,java.lang.String)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.TextFrame$1$ActionEventListener" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.ActionListener"/>
        <Fields/>
        <Methods>
            <Method signature="actionPerformed(java.awt.event.ActionEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.applet.TextFrame)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.StdAppletViewerFactory" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.applet.AppletViewerFactory"/>
        <Methods>
            <Method signature="createAppletViewer(int,int,java.net.URL,java.util.Hashtable)" returnType="sun.applet.AppletViewer" visibility="public"/>
            <Method signature="getBaseMenuBar()" returnType="java.awt.MenuBar" visibility="public"/>
            <Method signature="isStandalone()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletViewer" extends="java.awt.Frame" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Frame"/>
        <Implements mangling="java.applet.AppletContext"/>
        <Fields>
            <Field name="theVersion" type="java.lang.String" isStatic="true" visibility="public"/>
            <Field name="theUserPropertiesFile" type="java.io.File" isStatic="true" visibility="public"/>
            <Field name="theAppletViewerPropsFile" type="java.io.File" isStatic="true" visibility="public"/>
            <Field name="panel" type="sun.applet.AppletViewerPanel"/>
            <Field name="label" type="java.awt.Label"/>
            <Field name="statusMsgStream" type="java.io.PrintStream"/>
            <Field name="factory" type="sun.applet.AppletViewerFactory"/>
            <Field name="appletPanels" type="java.util.Vector" isStatic="true"/>
            <Field name="systemParam" type="java.util.Hashtable" isStatic="true"/>
            <Field name="props" type="sun.applet.AppletProps" isStatic="true"/>
            <Field name="c" type="int" isStatic="true"/>
            <Field name="x" type="int" isStatic="true"/>
            <Field name="y" type="int" isStatic="true"/>
            <Field name="encoding" type="java.lang.String" isStatic="true"/>
            <Field name="didInitialize" type="boolean" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int,int,java.net.URL,java.util.Hashtable,java.io.PrintStream,sun.applet.AppletViewerFactory)" returnType="[ext]void" visibility="public"/>
            <Method signature="addMenuItem(java.awt.Menu,java.lang.String)" returnType="java.awt.MenuItem" visibility="public"/>
            <Method signature="getAudioClip(java.net.URL)" returnType="java.applet.AudioClip" visibility="public"/>
            <Method signature="getImage(java.net.URL)" returnType="java.awt.Image" visibility="public"/>
            <Method signature="getApplet(java.lang.String)" returnType="java.applet.Applet" visibility="public"/>
            <Method signature="getApplets()" returnType="java.util.Enumeration" visibility="public"/>
            <Method signature="showDocument(java.net.URL)" returnType="[ext]void" visibility="public"/>
            <Method signature="showDocument(java.net.URL,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="showStatus(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="printTag(java.io.PrintStream,java.util.Hashtable)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="updateAtts()" returnType="[ext]void" visibility="public"/>
            <Method signature="appletRestart()" returnType="[ext]void"/>
            <Method signature="appletReload()" returnType="[ext]void"/>
            <Method signature="appletSave()" returnType="[ext]void"/>
            <Method signature="appletClone()" returnType="[ext]void"/>
            <Method signature="appletTag()" returnType="[ext]void"/>
            <Method signature="appletInfo()" returnType="[ext]void"/>
            <Method signature="appletCharacterEncoding()" returnType="[ext]void"/>
            <Method signature="appletEdit()" returnType="[ext]void"/>
            <Method signature="appletPrint()" returnType="[ext]void"/>
            <Method signature="networkProperties()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="appletStart()" returnType="[ext]void"/>
            <Method signature="appletStop()" returnType="[ext]void"/>
            <Method signature="appletClose()" returnType="[ext]void"/>
            <Method signature="appletQuit()" returnType="[ext]void" visibility="protected"/>
            <Method signature="processUserAction(java.awt.event.ActionEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="countApplets()" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="init()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="skipSpace(java.io.Reader)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="scanIdentifier(java.io.Reader)" isStatic="true" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="scanTag(java.io.Reader)" isStatic="true" returnType="java.util.Hashtable" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="parse(java.net.URL)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="parse(java.net.URL,java.io.PrintStream,sun.applet.AppletViewerFactory)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="usage()" isStatic="true" returnType="[ext]void"/>
            <Method signature="mainInit()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="main(java.lang.String[])" isStatic="true" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletViewer$UserActionListener" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.awt.event.ActionListener"/>
        <Fields/>
        <Methods>
            <Method signature="actionPerformed(java.awt.event.ActionEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.applet.AppletViewer)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletViewer$1$AppletEventListener" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.applet.AppletListener"/>
        <Fields/>
        <Methods>
            <Method signature="appletStateChanged(sun.applet.AppletEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.applet.AppletViewer)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Interface mangling="sun.applet.AppletViewerFactory" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="createAppletViewer(int,int,java.net.URL,java.util.Hashtable)" returnType="sun.applet.AppletViewer" isAbstract="true" visibility="public"/>
            <Method signature="getBaseMenuBar()" returnType="java.awt.MenuBar" isAbstract="true" visibility="public"/>
            <Method signature="isStandalone()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.applet.AppletViewerPanel" extends="sun.applet.AppletPanel" isGeneric="false">
        <Extends mangling="sun.applet.AppletPanel"/>
        <Fields>
            <Field name="debug" type="boolean" isStatic="true"/>
            <Field name="documentURL" type="java.net.URL"/>
            <Field name="baseURL" type="java.net.URL"/>
            <Field name="atts" type="java.util.Hashtable"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.URL,java.util.Hashtable)" returnType="[ext]void"/>
            <Method signature="getParameter(java.lang.String)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getDocumentBase()" returnType="java.net.URL" visibility="public"/>
            <Method signature="getCodeBase()" returnType="java.net.URL" visibility="public"/>
            <Method signature="getWidth()" returnType="[ext]int" visibility="public"/>
            <Method signature="getHeight()" returnType="[ext]int" visibility="public"/>
            <Method signature="getCode()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getJarFiles()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getSerializedObject()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getAppletContext()" returnType="java.applet.AppletContext" visibility="public"/>
            <Method signature="debug(java.lang.String)" isStatic="true" returnType="[ext]void"/>
            <Method signature="debug(java.lang.String,java.lang.Throwable)" isStatic="true" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletPanel" extends="java.awt.Panel" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Panel"/>
        <Implements mangling="java.applet.AppletStub"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields>
            <Field name="debug" type="boolean" isStatic="true"/>
            <Field name="applet" type="java.applet.Applet"/>
            <Field name="doInit" type="boolean" visibility="protected"/>
            <Field name="loader" type="sun.applet.AppletClassLoader"/>
            <Field name="APPLET_DISPOSE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APPLET_LOAD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APPLET_INIT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APPLET_START" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APPLET_STOP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APPLET_DESTROY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APPLET_QUIT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APPLET_ERROR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APPLET_RESIZE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APPLET_LOADING" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="APPLET_LOADING_COMPLETED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="status" type="int" visibility="protected"/>
            <Field name="handler" type="java.lang.Thread"/>
            <Field name="appletSize" type="java.awt.Dimension"/>
            <Field name="mu" type="sun.misc.MessageUtils"/>
            <Field name="loaderThread" type="java.lang.Thread"/>
            <Field name="loadAbortRequest" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="getCode()" returnType="java.lang.String" isAbstract="true" visibility="protected"/>
            <Method signature="getWidth()" returnType="[ext]int" isAbstract="true" visibility="protected"/>
            <Method signature="getHeight()" returnType="[ext]int" isAbstract="true" visibility="protected"/>
            <Method signature="getJarFiles()" returnType="java.lang.String" isAbstract="true" visibility="protected"/>
            <Method signature="getSerializedObject()" returnType="java.lang.String" isAbstract="true" visibility="protected"/>
            <Method signature="init()" returnType="[ext]void" visibility="public"/>
            <Method signature="minimumSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="addAppletListener(sun.applet.AppletListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeAppletListener(sun.applet.AppletListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="dispatchAppletEvent(int,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="sendEvent(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getNextEvent()" returnType="sun.applet.AppletEvent">
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="createApplet(sun.applet.AppletClassLoader)" returnType="java.applet.Applet" visibility="protected">
                <Throw mangling="java.lang.ClassNotFoundException"/>
                <Throw mangling="java.lang.IllegalAccessException"/>
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.InstantiationException"/>
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="loadJarFiles(sun.applet.AppletClassLoader)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.InterruptedException"/>
            </Method>
            <Method signature="stopLoading()" returnType="[ext]void" visibility="protected"/>
            <Method signature="okToLoad()" returnType="[ext]boolean" visibility="protected"/>
            <Method signature="clearLoadAbortRequest()" returnType="[ext]void" visibility="protected"/>
            <Method signature="setLoadAbortRequest()" returnType="[ext]void" visibility="protected"/>
            <Method signature="isActive()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="appletResize(int,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getApplet()" returnType="java.applet.Applet" visibility="public"/>
            <Method signature="showAppletStatus(java.lang.String)" returnType="[ext]void" visibility="protected"/>
            <Method signature="showAppletStatus(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="protected"/>
            <Method signature="showAppletStatus(java.lang.String,java.lang.Object,java.lang.Object)" returnType="[ext]void" visibility="protected"/>
            <Method signature="showAppletLog(java.lang.String)" returnType="[ext]void" visibility="protected"/>
            <Method signature="showAppletLog(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="protected"/>
            <Method signature="showAppletException(java.lang.Throwable)" returnType="[ext]void" visibility="protected"/>
            <Method signature="flushClassLoader(java.net.URL)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="flushClassLoaders()" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="getClassLoader(java.net.URL)" isStatic="true" returnType="sun.applet.AppletClassLoader"/>
            <Method signature="getAppletHandlerThread()" returnType="java.lang.Thread" visibility="public"/>
            <Method signature="getAppletWidth()" returnType="[ext]int" visibility="public"/>
            <Method signature="getAppletHeight()" returnType="[ext]int" visibility="public"/>
            <Method signature="debug(java.lang.String)" isStatic="true" returnType="[ext]void"/>
            <Method signature="debug(java.lang.String,java.lang.Throwable)" isStatic="true" returnType="[ext]void"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="getDocumentBase()" returnType="java.net.URL" isAbstract="true" visibility="public"/>
            <Method signature="getCodeBase()" returnType="java.net.URL" isAbstract="true" visibility="public"/>
            <Method signature="getParameter(java.lang.String)" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="getAppletContext()" returnType="java.applet.AppletContext" isAbstract="true" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletProps" extends="java.awt.Frame" isGeneric="false">
        <Extends mangling="java.awt.Frame"/>
        <Fields>
            <Field name="proxyHost" type="java.awt.TextField"/>
            <Field name="proxyPort" type="java.awt.TextField"/>
            <Field name="networkMode" type="java.awt.Choice"/>
            <Field name="accessMode" type="java.awt.Choice"/>
            <Field name="unsignedMode" type="java.awt.Choice"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
            <Method signature="reset()" returnType="[ext]void"/>
            <Method signature="apply()" returnType="[ext]void"/>
            <Method signature="action(java.awt.Event,java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletPropsErrorDialog" extends="java.awt.Dialog" isGeneric="false">
        <Extends mangling="java.awt.Dialog"/>
        <Methods>
            <Method signature="+ctor(java.awt.Frame,java.lang.String,java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="action(java.awt.Event,java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.applet.AppletListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
        <Methods>
            <Method signature="appletStateChanged(sun.applet.AppletEvent)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.applet.AppletEvent" extends="java.util.EventObject" isGeneric="false" visibility="public">
        <Extends mangling="java.util.EventObject"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.Object,int,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="getID()" returnType="[ext]int" visibility="public"/>
            <Method signature="getArgument()" returnType="[ext]void" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletEventMulticaster" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.applet.AppletListener"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.applet.AppletListener,sun.applet.AppletListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="appletStateChanged(sun.applet.AppletEvent)" returnType="[ext]void" visibility="public"/>
            <Method signature="add(sun.applet.AppletListener,sun.applet.AppletListener)" isStatic="true" returnType="sun.applet.AppletListener" visibility="public"/>
            <Method signature="remove(sun.applet.AppletListener,sun.applet.AppletListener)" isStatic="true" returnType="sun.applet.AppletListener" visibility="public"/>
            <Method signature="remove(sun.applet.AppletListener)" returnType="sun.applet.AppletListener" visibility="protected"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletObjectInputStream" extends="java.io.ObjectInputStream" isGeneric="false">
        <Extends mangling="java.io.ObjectInputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,sun.applet.AppletClassLoader)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.io.StreamCorruptedException"/>
            </Method>
            <Method signature="resolveClass(java.io.ObjectStreamClass)" returnType="java.lang.Class" visibility="protected">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletSecurity" extends="java.lang.SecurityManager" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.SecurityManager"/>
        <Fields>
            <Field name="NETWORK_NONE" type="int" isStatic="true" isFinal="true"/>
            <Field name="NETWORK_HOST" type="int" isStatic="true" isFinal="true"/>
            <Field name="NETWORK_UNRESTRICTED" type="int" isStatic="true" isFinal="true"/>
            <Field name="initACL" type="boolean"/>
            <Field name="readACL" type="java.lang.String[]"/>
            <Field name="writeACL" type="java.lang.String[]"/>
            <Field name="networkMode" type="int"/>
            <Field name="scope" type="java.security.IdentityScope"/>
            <Field name="loadedClasses" type="java.util.Hashtable"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public"/>
            <Method signature="fromApplet()" returnType="[ext]boolean"/>
            <Method signature="assessTrust(java.lang.Object[])" returnType="[ext]boolean" visibility="protected"/>
            <Method signature="inApplet()" returnType="[ext]boolean"/>
            <Method signature="getSecurityContext()" returnType="[ext]void" visibility="public"/>
            <Method signature="getInCheck()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkCreateClassLoader()" returnType="[ext]void" visibility="public"/>
            <Method signature="inThreadGroup(java.lang.ThreadGroup)" returnType="[ext]boolean" visibility="protected"/>
            <Method signature="inThreadGroup(java.lang.Thread)" returnType="[ext]boolean" visibility="protected"/>
            <Method signature="checkAccess(java.lang.Thread)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccess(java.lang.ThreadGroup)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkExit(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkExec(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkLink(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPropertiesAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPropertyAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="parseACL(java.util.Vector,java.lang.String,java.lang.String)" returnType="[ext]void"/>
            <Method signature="parseACL(java.lang.String,java.lang.String)" returnType="[ext]java.lang.String[]"/>
            <Method signature="initializeACLs()" returnType="[ext]void"/>
            <Method signature="checkRead(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.lang.String,java.net.URL)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.lang.String,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkWrite(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkDelete(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkRead(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkWrite(java.io.FileDescriptor)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkListen(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAccept(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkConnect(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkConnect(java.lang.String,int,java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkConnect(java.lang.String,java.lang.String,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkConnect(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMulticast(java.net.InetAddress)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMulticast(java.net.InetAddress,byte)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkTopLevelWindow(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="checkPackageAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPackageDefinition(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSetFactory()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkMemberAccess(java.lang.Class,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="checkPrintJobAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSystemClipboardAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkAwtEventQueueAccess()" returnType="[ext]void" visibility="public"/>
            <Method signature="checkSecurityAccess(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="getThreadGroup()" returnType="java.lang.ThreadGroup" visibility="public"/>
            <Method signature="debug(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.AppletCopyright" extends="java.awt.Frame" isGeneric="false">
        <Extends mangling="java.awt.Frame"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
            <Method signature="load()" returnType="java.lang.String"/>
            <Method signature="action(java.awt.Event,java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="waitForUser()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.applet.resources.MsgAppletViewer" extends="java.util.ListResourceBundle" isGeneric="false" visibility="public">
        <Extends mangling="java.util.ListResourceBundle"/>
        <Fields>
            <Field name="contents" type="java.lang.Object[][]" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="getContents()" returnType="[ext]java.lang.Object[][]" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.registry.RegistryHandler" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.registry.RegistryHandler"/>
        <Methods>
            <Method signature="registryStub(java.lang.String,int)" returnType="java.rmi.registry.Registry" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.UnknownHostException"/>
            </Method>
            <Method signature="registryImpl(int)" returnType="java.rmi.registry.Registry" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.registry.RegistryImpl" extends="java.rmi.server.RemoteServer" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.server.RemoteServer"/>
        <Implements mangling="java.rmi.registry.Registry"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="lookup(java.lang.String)" returnType="java.rmi.Remote" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.NotBoundException"/>
            </Method>
            <Method signature="bind(java.lang.String,java.rmi.Remote)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.AlreadyBoundException"/>
                <Throw mangling="java.rmi.AccessException"/>
            </Method>
            <Method signature="unbind(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.NotBoundException"/>
                <Throw mangling="java.rmi.AccessException"/>
            </Method>
            <Method signature="rebind(java.lang.String,java.rmi.Remote)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
                <Throw mangling="java.rmi.AccessException"/>
            </Method>
            <Method signature="list()" returnType="[ext]java.lang.String[]" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="checkAccess(java.lang.String)" isStatic="true" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.AccessException"/>
            </Method>
            <Method signature="getID()" isStatic="true" returnType="java.rmi.server.ObjID" visibility="public"/>
            <Method signature="main(java.lang.String[])" isStatic="true" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.registry.RegistryImpl_Stub" extends="java.rmi.server.RemoteStub" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.rmi.server.RemoteStub"/>
        <Implements mangling="java.rmi.registry.Registry"/>
        <Implements mangling="java.rmi.Remote"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.rmi.server.RemoteRef)" returnType="[ext]void" visibility="public"/>
            <Method signature="bind(java.lang.String,java.rmi.Remote)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.AccessException"/>
                <Throw mangling="java.rmi.AlreadyBoundException"/>
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="list()" returnType="[ext]java.lang.String[]" visibility="public">
                <Throw mangling="java.rmi.AccessException"/>
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="lookup(java.lang.String)" returnType="java.rmi.Remote" visibility="public">
                <Throw mangling="java.rmi.AccessException"/>
                <Throw mangling="java.rmi.NotBoundException"/>
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="rebind(java.lang.String,java.rmi.Remote)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.AccessException"/>
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="unbind(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.AccessException"/>
                <Throw mangling="java.rmi.NotBoundException"/>
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.registry.RegistryImpl_Skel" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.server.Skeleton"/>
        <Fields/>
        <Methods>
            <Method signature="getOperations()" returnType="[ext]java.rmi.server.Operation[]" visibility="public"/>
            <Method signature="dispatch(java.rmi.Remote,java.rmi.server.RemoteCall,int,long)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.Exception"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.server.RemoteProxy" extends="java.rmi.server.RemoteStub" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.rmi.server.RemoteStub"/>
        <Fields>
            <Field name="logLevel" type="int" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="getStub(java.rmi.Remote,java.rmi.server.RemoteRef)" isStatic="true" returnType="java.rmi.server.RemoteStub" visibility="public">
                <Throw mangling="java.rmi.StubNotFoundException"/>
            </Method>
            <Method signature="getStub(java.lang.String,java.rmi.server.RemoteRef)" isStatic="true" returnType="java.rmi.server.RemoteStub" visibility="public">
                <Throw mangling="java.rmi.StubNotFoundException"/>
            </Method>
            <Method signature="getStub(java.lang.String,java.lang.Class,java.rmi.server.RemoteRef)" isStatic="true" returnType="java.rmi.server.RemoteStub" visibility="public">
                <Throw mangling="java.rmi.StubNotFoundException"/>
            </Method>
            <Method signature="getProxy(java.rmi.Remote)" isStatic="true" returnType="java.rmi.server.RemoteStub" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getSkeleton(java.rmi.Remote)" isStatic="true" returnType="java.rmi.server.Skeleton" visibility="public">
                <Throw mangling="java.rmi.server.SkeletonNotFoundException"/>
            </Method>
        </Methods>
    </Class>
    <Interface mangling="sun.rmi.server.Dispatcher" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="dispatch(java.rmi.Remote,java.rmi.server.RemoteCall)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="sun.rmi.server.UnicastRef" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.server.RemoteRef"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields>
            <Field name="ref" type="sun.rmi.transport.LiveRef" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.rmi.transport.LiveRef)" returnType="[ext]void" visibility="public"/>
            <Method signature="newCall(java.rmi.server.RemoteObject,java.rmi.server.Operation[],int,long)" returnType="java.rmi.server.RemoteCall" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="marshalCustomCallData(java.io.ObjectOutput)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="invoke(java.rmi.server.RemoteCall)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.Exception"/>
            </Method>
            <Method signature="done(java.rmi.server.RemoteCall)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getRefClass(java.io.ObjectOutput)" returnType="java.lang.String" visibility="public"/>
            <Method signature="writeExternal(java.io.ObjectOutput)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readExternal(java.io.ObjectInput)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="remoteToString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="remoteHashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="remoteEquals(java.rmi.server.RemoteRef)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.server.UnicastServerRef" extends="sun.rmi.server.UnicastRef" isGeneric="false" visibility="public">
        <Extends mangling="sun.rmi.server.UnicastRef"/>
        <Implements mangling="java.rmi.server.ServerRef"/>
        <Implements mangling="sun.rmi.server.Dispatcher"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.rmi.transport.LiveRef)" returnType="[ext]void" visibility="public"/>
            <Method signature="exportObject(java.rmi.Remote,java.lang.Object)" returnType="java.rmi.server.RemoteStub" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getClientHost()" returnType="java.lang.String" visibility="public">
                <Throw mangling="java.rmi.server.ServerNotActiveException"/>
            </Method>
            <Method signature="setSkeleton(java.rmi.Remote)" returnType="java.rmi.server.RemoteStub" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="dispatch(java.rmi.Remote,java.rmi.server.RemoteCall)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="unmarshalCustomCallData(java.io.ObjectInput)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="getRefClass(java.io.ObjectOutput)" returnType="java.lang.String" visibility="public"/>
            <Method signature="getClientRef()" returnType="java.rmi.server.RemoteRef" visibility="protected"/>
            <Method signature="writeExternal(java.io.ObjectOutput)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readExternal(java.io.ObjectInput)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.server.MarshalOutputStream" extends="java.io.ObjectOutputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ObjectOutputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="replaceObject(java.lang.Object)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="annotateClass(java.lang.Class)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.server.MarshalInputStream" extends="java.io.ObjectInputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.ObjectInputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.io.StreamCorruptedException"/>
            </Method>
            <Method signature="resolveClass(java.io.ObjectStreamClass)" returnType="java.lang.Class" visibility="protected">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.server.RMIClassLoader" extends="sun.applet.AppletClassLoader" isGeneric="false" visibility="public">
        <Extends mangling="sun.applet.AppletClassLoader"/>
        <Fields/>
        <Methods>
            <Method signature="flushClassLoader(java.net.URL)" isStatic="true" returnType="[ext]void"/>
            <Method signature="getClassLoader(java.net.URL)" isStatic="true" returnType="sun.rmi.server.RMIClassLoader" visibility="public"/>
            <Method signature="getLocalLoader()" isStatic="true" returnType="sun.rmi.server.RMIClassLoader" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
            </Method>
            <Method signature="getCodeBase()" returnType="java.net.URL" visibility="public"/>
            <Method signature="loadClass(java.lang.String)" returnType="java.lang.Class" visibility="public">
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.server.LoaderHandler" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.server.LoaderHandler"/>
        <Methods>
            <Method signature="loadClass(java.lang.String)" returnType="java.lang.Class" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="loadClass(java.net.URL,java.lang.String)" returnType="java.lang.Class" visibility="public">
                <Throw mangling="java.net.MalformedURLException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="getSecurityContext(java.lang.ClassLoader)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.ObjectTable" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="getTarget(java.rmi.server.ObjID)" isStatic="true" returnType="sun.rmi.transport.Target"/>
            <Method signature="getTarget(java.rmi.Remote)" isStatic="true" returnType="sun.rmi.transport.Target" visibility="public"/>
            <Method signature="putTarget(java.rmi.server.ObjID,sun.rmi.transport.Target)" isStatic="true" returnType="[ext]void">
                <Throw mangling="java.rmi.server.ExportException"/>
            </Method>
            <Method signature="referenced(java.rmi.server.ObjID,long,java.rmi.dgc.VMID)" isStatic="true" returnType="[ext]void"/>
            <Method signature="unreferenced(java.rmi.server.ObjID,long,java.rmi.dgc.VMID,boolean)" isStatic="true" returnType="[ext]void"/>
            <Method signature="reap()" isStatic="true" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.KeepAlive" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Methods>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.Reaper" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Methods>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.Target" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.rmi.Remote,sun.rmi.server.Dispatcher,java.rmi.server.RemoteStub)" returnType="[ext]void" visibility="public"/>
            <Method signature="getStub()" returnType="java.rmi.server.RemoteStub" visibility="public"/>
            <Method signature="getWeakImpl()" returnType="[ext]sun.rmi.transport.WeakRef"/>
            <Method signature="getDispatcher()" returnType="sun.rmi.server.Dispatcher"/>
            <Method signature="getImpl()" returnType="java.rmi.Remote"/>
            <Method signature="isPermanent()" returnType="[ext]boolean"/>
            <Method signature="pinImpl()" returnType="[ext]void"/>
            <Method signature="unpinImpl()" returnType="[ext]void"/>
            <Method signature="setPermanent(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="referenced(long,java.rmi.dgc.VMID)" returnType="[ext]void"/>
            <Method signature="unreferenced(long,java.rmi.dgc.VMID,boolean)" returnType="[ext]void"/>
            <Method signature="isEmpty()" returnType="[ext]boolean"/>
            <Method signature="vmidDead(java.rmi.dgc.VMID)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.SequenceEntry" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="sequenceNum" type="long"/>
            <Field name="keep" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(long)" returnType="[ext]void"/>
            <Method signature="retain(long)" returnType="[ext]void"/>
            <Method signature="update(long)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.UnreferencedObj" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields>
            <Field name="obj" type="java.rmi.server.Unreferenced"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.rmi.server.Unreferenced)" returnType="[ext]void"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.Utils" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getLong(java.lang.String,long)" isStatic="true" returnType="java.lang.Long" visibility="public"/>
            <Method signature="getProperty(java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="getBoolean(java.lang.String)" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.rmi.transport.Channel" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.rmi.transport.Notifier"/>
        <Methods>
            <Method signature="newConnection()" returnType="sun.rmi.transport.Connection" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getEndpoint()" returnType="sun.rmi.transport.Endpoint" isAbstract="true" visibility="public"/>
            <Method signature="free(sun.rmi.transport.Connection,boolean)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="dead(int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="sun.rmi.transport.Notifier" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="Alive" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="Dead" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="Failed" type="int" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="addNotifiable(sun.rmi.transport.Endpoint,sun.rmi.transport.Notifiable)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="removeNotifiable(sun.rmi.transport.Endpoint,sun.rmi.transport.Notifiable)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="sun.rmi.transport.Connection" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getInputStream()" returnType="java.io.InputStream" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="releaseInputStream()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="releaseOutputStream()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="isReusable()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getChannel()" returnType="sun.rmi.transport.Channel" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.rmi.transport.LiveRef" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Externalizable"/>
        <Fields/>
        <Methods>
            <Method signature="copy()" returnType="sun.rmi.transport.LiveRef"/>
            <Method signature="+ctor(java.rmi.server.ObjID,sun.rmi.transport.Endpoint,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="+ctor(java.rmi.server.ObjID,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="exportObject(sun.rmi.transport.Target)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getChannel()" returnType="sun.rmi.transport.Channel" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getObjID()" returnType="java.rmi.server.ObjID" visibility="public"/>
            <Method signature="getEndpoint()" returnType="sun.rmi.transport.Endpoint"/>
            <Method signature="counted()" returnType="[ext]void"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="remoteEquals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="writeExternal(java.io.ObjectOutput)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readExternal(java.io.ObjectInput)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.lang.ClassNotFoundException"/>
            </Method>
            <Method signature="finalize()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.Throwable"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.TCPEndpoint" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.rmi.transport.Endpoint"/>
        <Implements mangling="java.io.Serializable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="getLocalEndpoint(int)" isStatic="true" returnType="sun.rmi.transport.tcp.TCPEndpoint" visibility="public"/>
            <Method signature="setLocalHost(java.lang.String)" isStatic="true" returnType="[ext]void"/>
            <Method signature="setDefaultPort(int)" isStatic="true" returnType="[ext]void"/>
            <Method signature="getTransport()" returnType="sun.rmi.transport.Transport" visibility="public"/>
            <Method signature="exportObject(java.rmi.server.ObjID,sun.rmi.transport.Target)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getChannel()" returnType="sun.rmi.transport.Channel" visibility="public"/>
            <Method signature="getHost()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="hashCode()" returnType="[ext]int" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="write(java.io.DataOutput)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(java.io.DataInput)" isStatic="true" returnType="sun.rmi.transport.tcp.TCPEndpoint" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.TCPEndpoint$FQDN" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields/>
        <Methods>
            <Method signature="attemptFQDN(java.net.InetAddress)" isStatic="true" returnType="java.lang.String">
                <Throw mangling="java.net.UnknownHostException"/>
            </Method>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.TCPChannel" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.rmi.transport.Channel"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.tcp.TCPTransport,sun.rmi.transport.tcp.TCPEndpoint)" returnType="[ext]void"/>
            <Method signature="getEndpoint()" returnType="sun.rmi.transport.Endpoint" visibility="public"/>
            <Method signature="newConnection()" returnType="sun.rmi.transport.Connection" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="free(sun.rmi.transport.Connection,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="haveMultiplexer()" returnType="[ext]void">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="useMultiplexer(sun.rmi.transport.tcp.ConnectionMultiplexer)" returnType="[ext]void"/>
            <Method signature="acceptMultiplexConnection(sun.rmi.transport.Connection)" returnType="[ext]void"/>
            <Method signature="dead(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="addNotifiable(sun.rmi.transport.Endpoint,sun.rmi.transport.Notifiable)" returnType="[ext]void" visibility="public"/>
            <Method signature="removeNotifiable(sun.rmi.transport.Endpoint,sun.rmi.transport.Notifiable)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.TCPChannel$Reaper" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields/>
        <Methods>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.rmi.transport.tcp.TCPChannel)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.ConnectionAcceptor" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.tcp.TCPTransport)" returnType="[ext]void" visibility="public"/>
            <Method signature="startNewAcceptor()" returnType="[ext]void" visibility="public"/>
            <Method signature="accept(sun.rmi.transport.Connection)" returnType="[ext]void" visibility="public"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.TCPTransport" extends="sun.rmi.transport.Transport" isGeneric="false" visibility="public">
        <Extends mangling="sun.rmi.transport.Transport"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields>
            <Field name="logLevel" type="int" isStatic="true"/>
            <Field name="DefaultPort" type="int" isStatic="true"/>
            <Field name="defaultSocketFactory" type="java.rmi.server.RMISocketFactory" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
            <Method signature="+ctor(int)" returnType="[ext]void"/>
            <Method signature="getChannel(sun.rmi.transport.Endpoint)" returnType="sun.rmi.transport.Channel" visibility="public"/>
            <Method signature="thisEndpoint()" returnType="sun.rmi.transport.Endpoint" visibility="public"/>
            <Method signature="exportObject(java.rmi.server.ObjID,sun.rmi.transport.Target)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="handleMessages(sun.rmi.transport.Connection,boolean)" returnType="[ext]void"/>
            <Method signature="getCurrentChannel()" isStatic="true" returnType="sun.rmi.transport.Channel" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields>
            <Field name="socket" type="java.net.Socket"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.tcp.TCPTransport,java.net.Socket)" returnType="[ext]void"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.ConnectionMultiplexer" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="logLevel" type="int" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.tcp.TCPChannel,java.io.InputStream,java.io.OutputStream,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="run()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="openConnection()" returnType="sun.rmi.transport.tcp.TCPConnection" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="shutDown()" returnType="[ext]void" visibility="public"/>
            <Method signature="sendRequest(sun.rmi.transport.tcp.MultiplexConnectionInfo,int)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="sendTransmit(sun.rmi.transport.tcp.MultiplexConnectionInfo,byte[],int,int)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="sendClose(sun.rmi.transport.tcp.MultiplexConnectionInfo)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="sendCloseAck(sun.rmi.transport.tcp.MultiplexConnectionInfo)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="finalize()" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.lang.Throwable"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.TCPConnection" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.rmi.transport.Connection"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.tcp.TCPChannel,java.io.InputStream,java.io.OutputStream)" returnType="[ext]void"/>
            <Method signature="+ctor(sun.rmi.transport.Channel,sun.rmi.transport.tcp.TCPEndpoint)" returnType="[ext]void">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="+ctor(sun.rmi.transport.tcp.TCPChannel,java.net.Socket)" returnType="[ext]void"/>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="releaseOutputStream()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="releaseInputStream()" returnType="[ext]void" visibility="public"/>
            <Method signature="isReusable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setExpiration(long)" returnType="[ext]void"/>
            <Method signature="setLastUseTime(long)" returnType="[ext]void"/>
            <Method signature="expired(long)" returnType="[ext]boolean"/>
            <Method signature="isDead()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getChannel()" returnType="sun.rmi.transport.Channel" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.MultiplexConnectionInfo" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="id" type="int"/>
            <Field name="in" type="sun.rmi.transport.tcp.MultiplexInputStream"/>
            <Field name="out" type="sun.rmi.transport.tcp.MultiplexOutputStream"/>
            <Field name="closed" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(int)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.MultiplexInputStream" extends="java.io.InputStream" isGeneric="false" isFinal="true">
        <Extends mangling="java.io.InputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.tcp.ConnectionMultiplexer,sun.rmi.transport.tcp.MultiplexConnectionInfo,int)" returnType="[ext]void"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="receive(int,java.io.DataInputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="disconnect()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.tcp.MultiplexOutputStream" extends="java.io.OutputStream" isGeneric="false" isFinal="true">
        <Extends mangling="java.io.OutputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.tcp.ConnectionMultiplexer,sun.rmi.transport.tcp.MultiplexConnectionInfo,int)" returnType="[ext]void"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="request(int)" returnType="[ext]void"/>
            <Method signature="disconnect()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Interface mangling="sun.rmi.transport.Endpoint" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getChannel()" returnType="sun.rmi.transport.Channel" isAbstract="true" visibility="public"/>
            <Method signature="exportObject(java.rmi.server.ObjID,sun.rmi.transport.Target)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getTransport()" returnType="sun.rmi.transport.Transport" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.rmi.transport.RMIThread" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="newThread(java.lang.Runnable,java.lang.String,boolean)" isStatic="true" returnType="java.lang.Thread" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.Transport" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="logLevel" type="int" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="getChannel(sun.rmi.transport.Endpoint)" returnType="sun.rmi.transport.Channel" isAbstract="true" visibility="public"/>
            <Method signature="thisEndpoint()" returnType="sun.rmi.transport.Endpoint" isAbstract="true" visibility="public"/>
            <Method signature="exportObject(java.rmi.server.ObjID,sun.rmi.transport.Target)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="serviceCall(java.rmi.server.RemoteCall)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.StreamRemoteCall" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.server.RemoteCall"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.Connection)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.rmi.transport.Connection,java.rmi.server.ObjID,int,long)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="getConnection()" returnType="sun.rmi.transport.Connection" visibility="public"/>
            <Method signature="getOutputStream()" returnType="java.io.ObjectOutput" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="releaseOutputStream()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInputStream()" returnType="java.io.ObjectInput" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="releaseInputStream()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getResultStream(boolean)" returnType="java.io.ObjectOutput" visibility="public">
                <Throw mangling="java.io.IOException"/>
                <Throw mangling="java.io.StreamCorruptedException"/>
            </Method>
            <Method signature="executeCall()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.Exception"/>
            </Method>
            <Method signature="exceptionReceivedFromServer(java.lang.Exception)" returnType="[ext]void" visibility="protected">
                <Throw mangling="java.lang.Exception"/>
            </Method>
            <Method signature="done()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Interface mangling="sun.rmi.transport.Notifiable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="notify(sun.rmi.transport.Endpoint,int)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.rmi.transport.TransportConstants" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="Magic" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="Version" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="StreamProtocol" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SingleOpProtocol" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="MultiplexProtocol" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ProtocolAck" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ProtocolNack" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="Call" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="Return" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="Ping" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="PingAck" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="DGCAck" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="NormalReturn" type="byte" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="ExceptionalReturn" type="byte" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCAckHandler" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.rmi.transport.Notifiable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.Channel,java.rmi.server.UID,java.util.Vector)" returnType="[ext]void" visibility="public"/>
            <Method signature="received(java.rmi.server.UID)" isStatic="true" returnType="[ext]void" visibility="public"/>
            <Method signature="notify(sun.rmi.transport.Endpoint,int)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCImpl" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.dgc.DGC"/>
        <Fields>
            <Field name="logLevel" type="int" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="getDGCImpl()" isStatic="true" returnType="sun.rmi.transport.DGCImpl"/>
            <Method signature="dirty(java.rmi.server.ObjID[],long,java.rmi.dgc.Lease)" returnType="java.rmi.dgc.Lease" visibility="public"/>
            <Method signature="clean(java.rmi.server.ObjID[],long,java.rmi.dgc.VMID,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="registerTarget(java.rmi.dgc.VMID,sun.rmi.transport.Target)" returnType="[ext]void"/>
            <Method signature="unregisterTarget(java.rmi.dgc.VMID,sun.rmi.transport.Target)" returnType="[ext]void"/>
            <Method signature="getID()" isStatic="true" returnType="java.rmi.server.ObjID"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCImpl$LeaseChecker" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields/>
        <Methods>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.rmi.transport.DGCImpl)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCImpl$LeaseInfo" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="vmid" type="java.rmi.dgc.VMID"/>
            <Field name="expiration" type="long"/>
            <Field name="notifyList" type="java.util.Vector"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.rmi.dgc.VMID,long)" returnType="[ext]void"/>
            <Method signature="renew(long)" returnType="[ext]void"/>
            <Method signature="expired(long)" returnType="[ext]boolean"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.ConnectionOutputStream" extends="sun.rmi.server.MarshalOutputStream" isGeneric="false">
        <Extends mangling="sun.rmi.server.MarshalOutputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(sun.rmi.transport.Connection,boolean)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="writeID()" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="isResultStream()" returnType="[ext]boolean"/>
            <Method signature="saveRef(sun.rmi.transport.LiveRef)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.ConnectionInputStream" extends="sun.rmi.server.MarshalInputStream" isGeneric="false">
        <Extends mangling="sun.rmi.server.MarshalInputStream"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readID()" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="saveRef(sun.rmi.transport.LiveRef)" returnType="[ext]void"/>
            <Method signature="registerRefs()" returnType="[ext]void">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setAckNeeded()" returnType="[ext]void"/>
            <Method signature="done(sun.rmi.transport.Connection)" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.IncomingRefTableEntry" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="refList" type="java.util.Vector"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCClient" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields/>
        <Methods>
            <Method signature="referenced(sun.rmi.transport.LiveRef[])" isStatic="true" returnType="[ext]void">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="referenced(sun.rmi.transport.LiveRef)" isStatic="true" returnType="[ext]void">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="unreferenced(sun.rmi.transport.LiveRef)" isStatic="true" returnType="[ext]void"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="doRenewal()" isStatic="true" returnType="[ext]boolean" visibility="public"/>
            <Method signature="renewLeases(sun.rmi.transport.DGCClient.LeaseTableEntry)" isStatic="true" returnType="[ext]boolean"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCClient$CountTableEntry" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="refCount" type="int"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCClient$CleanRequest" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="objIdArray" type="java.rmi.server.ObjID[]"/>
            <Field name="ep" type="sun.rmi.transport.Endpoint"/>
            <Field name="sequenceNum" type="long"/>
            <Field name="strong" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.LiveRef,long,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.rmi.server.ObjID[],sun.rmi.transport.Endpoint,long,boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="equals(java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCClient$LeaseTableEntry" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="renewTime" type="long" visibility="public"/>
            <Field name="ep" type="sun.rmi.transport.Endpoint" visibility="public"/>
            <Field name="objIdList" type="java.util.Vector" visibility="public"/>
            <Field name="lease" type="java.rmi.dgc.Lease" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.Endpoint)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCClient$LeaseRenewer" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Methods>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.RMIMasterSocketFactory" extends="java.rmi.server.RMISocketFactory" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.server.RMISocketFactory"/>
        <Fields>
            <Field name="logLevel" type="int" isStatic="true"/>
            <Field name="initialFactory" type="java.rmi.server.RMISocketFactory" visibility="protected"/>
            <Field name="altFactoryList" type="java.util.Vector" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="createSocket(java.lang.String,int)" returnType="java.net.Socket" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="rememberFactory(java.lang.String,java.rmi.server.RMISocketFactory)" returnType="[ext]void"/>
            <Method signature="checkConnector(sun.rmi.transport.proxy.AsyncConnector)" returnType="java.net.Socket">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="createServerSocket(int)" returnType="java.net.ServerSocket" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.AsyncConnector" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.lang.Runnable"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor(sun.rmi.transport.proxy.RMIMasterSocketFactory,java.rmi.server.RMISocketFactory,java.lang.String,int)" returnType="[ext]void"/>
            <Method signature="run()" returnType="[ext]void" visibility="public"/>
            <Method signature="getException()" returnType="java.io.IOException"/>
            <Method signature="getSocket()" returnType="java.net.Socket"/>
            <Method signature="notUsed()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Interface mangling="sun.rmi.transport.proxy.RMISocketInfo" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="isReusable()" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Class mangling="sun.rmi.transport.proxy.RMIDirectSocketFactory" extends="java.rmi.server.RMISocketFactory" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.server.RMISocketFactory"/>
        <Methods>
            <Method signature="createSocket(java.lang.String,int)" returnType="java.net.Socket" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="createServerSocket(int)" returnType="java.net.ServerSocket" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.RMIHttpToPortSocketFactory" extends="java.rmi.server.RMISocketFactory" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.server.RMISocketFactory"/>
        <Methods>
            <Method signature="createSocket(java.lang.String,int)" returnType="java.net.Socket" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="createServerSocket(int)" returnType="java.net.ServerSocket" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.RMIHttpToCGISocketFactory" extends="java.rmi.server.RMISocketFactory" isGeneric="false" visibility="public">
        <Extends mangling="java.rmi.server.RMISocketFactory"/>
        <Methods>
            <Method signature="createSocket(java.lang.String,int)" returnType="java.net.Socket" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="createServerSocket(int)" returnType="java.net.ServerSocket" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.HttpAwareServerSocket" extends="java.net.ServerSocket" isGeneric="false">
        <Extends mangling="java.net.ServerSocket"/>
        <Methods>
            <Method signature="+ctor(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="accept()" returnType="java.net.Socket" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.HttpSendSocket" extends="java.net.Socket" isGeneric="false">
        <Extends mangling="java.net.Socket"/>
        <Implements mangling="sun.rmi.transport.proxy.RMISocketInfo"/>
        <Fields>
            <Field name="host" type="java.lang.String" visibility="protected"/>
            <Field name="port" type="int" visibility="protected"/>
            <Field name="url" type="java.net.URL" visibility="protected"/>
            <Field name="conn" type="java.net.URLConnection" visibility="protected"/>
            <Field name="in" type="java.io.InputStream" visibility="protected"/>
            <Field name="out" type="java.io.OutputStream" visibility="protected"/>
            <Field name="inNotifier" type="sun.rmi.transport.proxy.HttpSendInputStream" visibility="protected"/>
            <Field name="outNotifier" type="sun.rmi.transport.proxy.HttpSendOutputStream" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,int,java.net.URL)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.lang.String,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="+ctor(java.net.InetAddress,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="isReusable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="writeNotify()" returnType="java.io.OutputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readNotify()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInetAddress()" returnType="java.net.InetAddress" visibility="public"/>
            <Method signature="getLocalAddress()" returnType="java.net.InetAddress" visibility="public"/>
            <Method signature="getPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="getLocalPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setTcpNoDelay(boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getTcpNoDelay()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="setSoLinger(boolean,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getSoLinger()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="setSoTimeout(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getSoTimeout()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.WrappedSocket" extends="java.net.Socket" isGeneric="false">
        <Extends mangling="java.net.Socket"/>
        <Fields>
            <Field name="socket" type="java.net.Socket" visibility="protected"/>
            <Field name="in" type="java.io.InputStream" visibility="protected"/>
            <Field name="out" type="java.io.OutputStream" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.net.Socket,java.io.InputStream,java.io.OutputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getInetAddress()" returnType="java.net.InetAddress" visibility="public"/>
            <Method signature="getLocalAddress()" returnType="java.net.InetAddress" visibility="public"/>
            <Method signature="getPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="getLocalPort()" returnType="[ext]int" visibility="public"/>
            <Method signature="getInputStream()" returnType="java.io.InputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="getOutputStream()" returnType="java.io.OutputStream" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="setTcpNoDelay(boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getTcpNoDelay()" returnType="[ext]boolean" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="setSoLinger(boolean,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getSoLinger()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="setSoTimeout(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="getSoTimeout()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.net.SocketException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.HttpSendInputStream" extends="java.io.FilterInputStream" isGeneric="false">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="owner" type="sun.rmi.transport.proxy.HttpSendSocket"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream,sun.rmi.transport.proxy.HttpSendSocket)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="deactivate()" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="markSupported()" returnType="[ext]boolean" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.HttpSendOutputStream" extends="java.io.FilterOutputStream" isGeneric="false">
        <Extends mangling="java.io.FilterOutputStream"/>
        <Fields>
            <Field name="owner" type="sun.rmi.transport.proxy.HttpSendSocket"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream,sun.rmi.transport.proxy.HttpSendSocket)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="deactivate()" returnType="[ext]void" visibility="public"/>
            <Method signature="write(int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="write(byte[],int,int)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="flush()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.HttpInputStream" extends="java.io.FilterInputStream" isGeneric="false">
        <Extends mangling="java.io.FilterInputStream"/>
        <Fields>
            <Field name="bytesLeft" type="int" visibility="protected"/>
            <Field name="bytesLeftAtMark" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.InputStream)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="mark(int)" returnType="[ext]void" visibility="public"/>
            <Method signature="reset()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="skip(long)" returnType="[ext]long" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.HttpOutputStream" extends="java.io.ByteArrayOutputStream" isGeneric="false">
        <Extends mangling="java.io.ByteArrayOutputStream"/>
        <Fields>
            <Field name="out" type="java.io.OutputStream" visibility="protected"/>
            <Field name="responseSent" type="boolean"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.io.OutputStream)" returnType="[ext]void" visibility="public"/>
            <Method signature="close()" returnType="[ext]void" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.CGIClientException" extends="java.lang.Exception" isGeneric="false">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.CGIServerException" extends="java.lang.Exception" isGeneric="false">
        <Extends mangling="java.lang.Exception"/>
        <Methods>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.rmi.transport.proxy.CGICommandHandler" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getName()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="execute(java.lang.String)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="sun.rmi.transport.proxy.CGIClientException"/>
                <Throw mangling="sun.rmi.transport.proxy.CGIServerException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="sun.rmi.transport.proxy.CGIHandler" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="ContentLength" type="int" isStatic="true"/>
            <Field name="QueryString" type="java.lang.String" isStatic="true"/>
            <Field name="RequestMethod" type="java.lang.String" isStatic="true"/>
            <Field name="ServerName" type="java.lang.String" isStatic="true"/>
            <Field name="ServerPort" type="int" isStatic="true"/>
        </Fields>
        <Methods>
            <Method signature="main(java.lang.String[])" isStatic="true" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.CGIForwardCommand" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.rmi.transport.proxy.CGICommandHandler"/>
        <Methods>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="execute(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="sun.rmi.transport.proxy.CGIClientException"/>
                <Throw mangling="sun.rmi.transport.proxy.CGIServerException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.CGIGethostnameCommand" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.rmi.transport.proxy.CGICommandHandler"/>
        <Methods>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="execute(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.CGIPingCommand" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.rmi.transport.proxy.CGICommandHandler"/>
        <Methods>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="execute(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.proxy.CGITryHostnameCommand" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="sun.rmi.transport.proxy.CGICommandHandler"/>
        <Methods>
            <Method signature="getName()" returnType="java.lang.String" visibility="public"/>
            <Method signature="execute(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.LocateDGC" extends="java.lang.Object" isGeneric="false" isFinal="true">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="getDGC(sun.rmi.transport.Endpoint)" isStatic="true" returnType="java.rmi.dgc.DGC">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCImpl_Stub" extends="java.rmi.server.RemoteStub" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.rmi.server.RemoteStub"/>
        <Implements mangling="java.rmi.dgc.DGC"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.rmi.server.RemoteRef)" returnType="[ext]void" visibility="public"/>
            <Method signature="clean(java.rmi.server.ObjID[],long,java.rmi.dgc.VMID,boolean)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
            <Method signature="dirty(java.rmi.server.ObjID[],long,java.rmi.dgc.Lease)" returnType="java.rmi.dgc.Lease" visibility="public">
                <Throw mangling="java.rmi.RemoteException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.rmi.transport.DGCImpl_Skel" extends="java.lang.Object" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.rmi.server.Skeleton"/>
        <Fields/>
        <Methods>
            <Method signature="getOperations()" returnType="[ext]java.rmi.server.Operation[]" visibility="public"/>
            <Method signature="dispatch(java.rmi.Remote,java.rmi.server.RemoteCall,int,long)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.Exception"/>
            </Method>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.jdbc.odbc.JdbcOdbcObject" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="isTracing()" isStatic="true" returnType="[ext]boolean" visibility="protected"/>
            <Method signature="trace(java.lang.String)" isStatic="true" returnType="[ext]void" visibility="protected"/>
            <Method signature="trace(java.lang.String,boolean)" isStatic="true" returnType="[ext]void" visibility="protected"/>
            <Method signature="dumpByte(byte[],int)" isStatic="true" returnType="[ext]void" visibility="protected"/>
            <Method signature="hexPad(java.lang.String,int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="toHex(int)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="hexStringToByteArray(java.lang.String)" isStatic="true" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
            <Method signature="hexPairToInt(java.lang.String)" isStatic="true" returnType="[ext]int" visibility="public">
                <Throw mangling="java.lang.NumberFormatException"/>
            </Method>
        </Methods>
    </Class>
    <Class mangling="sun.jdbc.odbc.OdbcDef" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="SQL_SUCCESS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SUCCESS_WITH_INFO" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NO_DATA" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NO_DATA_FOUND" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ERROR" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_INVALID_HANDLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_STILL_EXECUTING" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NEED_DATA" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TRUE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FALSE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_BINARY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_BIT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_BOOKMARK" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_CHAR" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_DATE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_DEFAULT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_DOUBLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_FLOAT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_LONG" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_SHORT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_SLONG" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_SSHORT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_STINYINT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_TIME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_TIMESTAMP" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_TINYINT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_ULONG" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_USHORT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_C_UTINYINT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_DATE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TIME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TIMESTAMP" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TYPE_NULL" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TYPE_UNKNOWN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NULL_HENV" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NULL_HDBC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NULL_HSTMT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NULL_DATA" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NO_TOTAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CLOSE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_DROP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_UNBIND" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_RESET_PARAMS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ACCESS_MODE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MODE_READ_WRITE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MODE_READ_ONLY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_AUTOCOMMIT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_AUTOCOMMIT_OFF" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_AUTOCOMMIT_ON" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_LOGIN_TIMEOUT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TXN_ISOLATION" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CURRENT_QUALIFIER" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ACTIVE_CONNECTIONS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ACTIVE_STATEMENTS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_DRIVER_NAME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_DRIVER_VER" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ODBC_VER" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SEARCH_PATTERN_ESCAPE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ODBC_SQL_CONFORMANCE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OSC_MINIMUM" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OSC_CORE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OSC_EXTENDED" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_DATABASE_NAME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_DBMS_NAME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_DBMS_VER" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ACCESSIBLE_TABLES" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ACCESSIBLE_PROCEDURES" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_PROCEDURES" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONCAT_NULL_BEHAVIOR" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CB_NULL" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CURSOR_COMMIT_BEHAVIOR" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CURSOR_ROLLBACK_BEHAVIOR" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CB_DELETE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CB_CLOSE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CB_PRESERVE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_DATA_SOURCE_READ_ONLY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_DEFAULT_TXN_ISOLATION" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_EXPRESSIONS_IN_ORDERBY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_IDENTIFIER_CASE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_IC_UPPER" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_IC_LOWER" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_IC_SENSITIVE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_IC_MIXED" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_IDENTIFIER_QUOTE_CHAR" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_COLUMN_NAME_LEN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_CURSOR_NAME_LEN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_OWNER_NAME_LEN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_PROCEDURE_NAME_LEN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_QUALIFIER_NAME_LEN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_TABLE_NAME_LEN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MULT_RESULT_SETS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MULTIPLE_ACTIVE_TXN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OUTER_JOINS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OWNER_TERM" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_PROCEDURE_TERM" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QUALIFIER_NAME_SEPARATOR" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QUALIFIER_TERM" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TXN_CAPABLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TC_NONE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TC_DML" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TC_ALL" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TC_DDL_COMMIT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TC_DDL_IGNORE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_USER_NAME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_FUNCTIONS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_CVT_CONVERT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NUMERIC_FUNCTIONS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_ABS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_ACOS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_ASIN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_ATAN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_ATAN2" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_CEILING" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_COS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_COT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_EXP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_FLOOR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_LOG" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_MOD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_SIGN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_SIN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_SQRT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_TAN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_PI" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_RAND" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_DEGREES" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_LOG10" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_POWER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_RADIANS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_ROUND" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_NUM_TRUNCATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_STRING_FUNCTIONS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_CONCAT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_INSERT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_LEFT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_LTRIM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_LENGTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_LOCATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_LCASE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_REPEAT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_REPLACE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_RIGHT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_RTRIM" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_SUBSTRING" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_UCASE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_ASCII" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_CHAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_DIFFERENCE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_LOCATE_2" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_SOUNDEX" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_STR_SPACE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SYSTEM_FUNCTIONS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_SYS_USERNAME" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_SYS_DBNAME" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_SYS_IFNULL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TIMEDATE_FUNCTIONS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_NOW" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_CURDATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_DAYOFMONTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_DAYOFWEEK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_DAYOFYEAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_MONTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_QUARTER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_WEEK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_YEAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_CURTIME" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_HOUR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_MINUTE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_SECOND" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_TIMESTAMPADD" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_TIMESTAMPDIFF" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_DAYNAME" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FN_TD_MONTHNAME" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_BIGINT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_BINARY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_BIT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_CHAR" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_DATE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_DECIMAL" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_DOUBLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_FLOAT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_INTEGER" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_LONGVARCHAR" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_NUMERIC" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_REAL" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_SMALLINT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_TIME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_TIMESTAMP" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_TINYINT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_VARBINARY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_VARCHAR" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONVERT_LONGVARBINARY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_CHAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_NUMERIC" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_DECIMAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_INTEGER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_SMALLINT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_FLOAT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_REAL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_DOUBLE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_VARCHAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_LONGVARCHAR" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_BINARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_VARBINARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_BIT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_TINYINT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_BIGINT" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_DATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_TIME" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_TIMESTAMP" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CVT_LONGVARBINARY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TXN_ISOLATION_OPTION" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TXN_READ_UNCOMMITTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TXN_READ_COMMITTED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TXN_REPEATABLE_READ" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TXN_SERIALIZABLE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_TXN_VERSIONING" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CORRELATION_NAME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CN_NONE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CN_DIFFERENT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CN_ANY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ODBC_SQL_OPT_IEF" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NON_NULLABLE_COLUMNS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NNC_NULL" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NNC_NON_NULL" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_POSITIONED_STATEMENTS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_PS_POSITIONED_DELETE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_PS_POSITIONED_UPDATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_PS_SELECT_FOR_UPDATE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FILE_USAGE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FILE_TABLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_FILE_QUALIFIER" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NULL_COLLATION" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NC_HIGH" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NC_LOW" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NC_START" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NC_END" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ALTER_TABLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_AT_ADD_COLUMN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_AT_DROP_COLUMN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_ALIAS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_GROUP_BY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_GB_NOT_SUPPORTED" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_GB_GROUP_BY_EQUALS_SELECT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_GB_GROUP_BY_CONTAINS_SELECT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_GB_NO_RELATION" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_KEYWORDS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ORDER_BY_COLUMNS_IN_SELECT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OWNER_USAGE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OU_DML_STATEMENTS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OU_PROCEDURE_INVOCATION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OU_TABLE_DEFINITION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OU_INDEX_DEFINITION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_OU_PRIVILEGE_DEFINITION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QUALIFIER_USAGE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QU_DML_STATEMENTS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QU_PROCEDURE_INVOCATION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QU_TABLE_DEFINITION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QU_INDEX_DEFINITION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QU_PRIVILEGE_DEFINITION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QUOTED_IDENTIFIER_CASE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SPECIAL_CHARACTERS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SUBQUERIES" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SQ_COMPARISON" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SQ_EXISTS" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SQ_IN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SQ_QUANTIFIED" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SQ_CORRELATED_SUBQUERIES" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_UNION" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_U_UNION" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_U_UNION_ALL" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_COLUMNS_IN_GROUP_BY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_COLUMNS_IN_INDEX" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_COLUMNS_IN_ORDER_BY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_COLUMNS_IN_SELECT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_COLUMNS_IN_TABLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_INDEX_SIZE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_ROW_SIZE_INCLUDES_LONG" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_ROW_SIZE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_STATEMENT_LEN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_TABLES_IN_SELECT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_USER_NAME_LEN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_CHAR_LITERAL_LEN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_BINARY_LITERAL_LEN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_LIKE_CLAUSE_ESCAPE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QUALIFIER_LOCATION" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QL_START" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QL_END" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_NAME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_TYPE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_LENGTH" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_PRECISION" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_SCALE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_DISPLAY_SIZE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_NULLABLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NULLABLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_UNSIGNED" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_MONEY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_UPDATABLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ATTR_READONLY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ATTR_WRITE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ATTR_READWRITE_UNKNOWN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_AUTO_INCREMENT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_CASE_SENSITIVE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_SEARCHABLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_UNSEARCHABLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_SEARCHABLE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_TYPE_NAME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_TABLE_NAME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_OWNER_NAME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_QUALIFIER_NAME" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COLUMN_LABEL" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_QUERY_TIMEOUT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_ROWS" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NOSCAN" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NOSCAN_OFF" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_NOSCAN_ON" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_MAX_LENGTH" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONCURRENCY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONCUR_READ_ONLY" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONCUR_LOCK" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONCUR_ROWVER" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_CONCUR_VALUES" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_GET_BOOKMARK" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ROW_NUMBER" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_BEST_ROWID" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ROWVER" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ALL_TYPES" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_COMMIT" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="SQL_ROLLBACK" type="short" isStatic="true" isFinal="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="odbcTypeToJdbc(int)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="jdbcTypeToOdbc(int)" isStatic="true" returnType="[ext]int" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.jdbc.odbc.JdbcOdbcLimits" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="MAX_GET_DATA_LENGTH" type="int" isStatic="true" visibility="public"/>
            <Field name="DEFAULT_BUFFER_LENGTH" type="int" isStatic="true" visibility="public"/>
            <Field name="DEFAULT_IN_PRECISION" type="int" isStatic="true" visibility="public"/>
            <Field name="DEFAULT_NATIVE_SQL_LENGTH" type="int" isStatic="true" visibility="public"/>
            <Field name="MAX_PUT_DATA_LENGTH" type="int" isStatic="true" visibility="public"/>
            <Field name="MAX_BROWSE_RESULT_LENGTH" type="int" isStatic="true" visibility="public"/>
            <Field name="DEFAULT_OUT_SCALE" type="int" isStatic="true" visibility="public"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.jdbc.odbc.JdbcOdbcSQLWarning" extends="java.sql.SQLWarning" isGeneric="false" visibility="public">
        <Extends mangling="java.sql.SQLWarning"/>
        <Fields>
            <Field name="value" type="java.lang.Object"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(java.lang.String,java.lang.String,int)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String,java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.jdbc.odbc.JdbcOdbcInputStream" extends="java.io.InputStream" isGeneric="false" visibility="public">
        <Extends mangling="java.io.InputStream"/>
        <Fields>
            <Field name="OdbcApi" type="sun.jdbc.odbc.JdbcOdbc" visibility="protected"/>
            <Field name="hStmt" type="int" visibility="protected"/>
            <Field name="column" type="int" visibility="protected"/>
            <Field name="type" type="short" visibility="protected"/>
            <Field name="ASCII" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="UNICODE" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="BINARY" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="LOCAL" type="short" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="localByteArray" type="byte[]" visibility="protected"/>
            <Field name="localOffset" type="int" visibility="protected"/>
            <Field name="invalid" type="boolean" visibility="protected"/>
            <Field name="highRead" type="boolean" visibility="protected"/>
            <Field name="sqlType" type="int" visibility="protected"/>
            <Field name="buf" type="byte[]" visibility="protected"/>
            <Field name="MAX_BUF_LEN" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="convertType" type="int" visibility="protected"/>
            <Field name="CONVERT_NONE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONVERT_UNICODE" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONVERT_ASCII" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="CONVERT_BOTH" type="int" isStatic="true" isFinal="true" visibility="public"/>
            <Field name="convertMultiplier" type="int" visibility="protected"/>
            <Field name="bytesInBuf" type="int" visibility="protected"/>
            <Field name="bufOffset" type="int" visibility="protected"/>
            <Field name="ownerStatement" type="java.sql.Statement" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="+ctor(sun.jdbc.odbc.JdbcOdbc,int,int,short,int,java.sql.Statement)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(sun.jdbc.odbc.JdbcOdbc,int,int,byte[])" returnType="[ext]void" visibility="public"/>
            <Method signature="read()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[])" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="read(byte[],int,int)" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="available()" returnType="[ext]int" visibility="public">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="invalidate()" returnType="[ext]void" visibility="public"/>
            <Method signature="readData(byte[])" returnType="[ext]int" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="readBinaryData(byte[],int)" returnType="[ext]int" visibility="protected">
                <Throw mangling="java.io.IOException"/>
            </Method>
            <Method signature="convertData(byte[],int)" returnType="[ext]int" visibility="protected"/>
        </Methods>
    </Class>
    <Interface mangling="sun.jdbc.odbc.JdbcOdbcResultSetInterface" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.sql.ResultSet"/>
        <Methods>
            <Method signature="getPseudoCol(int)" returnType="[ext]sun.jdbc.odbc.JdbcOdbcPseudoCol" isAbstract="true" visibility="public"/>
            <Method signature="mapColumn(int)" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="clearWarnings()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getHSTMT()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getColumnCount()" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getScale(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getColumnType(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="getColAttribute(int,int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="setWarning(java.sql.SQLWarning)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="mapColumnName(java.lang.String,int)" returnType="java.lang.String" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="sun.jdbc.odbc.JdbcOdbcConnectionInterface" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.sql.Connection"/>
        <Methods>
            <Method signature="getHDBC()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getURL()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="getODBCVer()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="validateConnection()" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="deregisterStatement(java.sql.Statement)" returnType="[ext]void" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="sun.jdbc.odbc.JdbcOdbcDriverInterface" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.sql.Driver"/>
        <Methods>
            <Method signature="allocConnection(int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="closeConnection(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
            <Method signature="disconnect(int)" returnType="[ext]void" isAbstract="true" visibility="public">
                <Throw mangling="java.sql.SQLException"/>
            </Method>
        </Methods>
    </Interface>
    <Class mangling="sun.jdbc.odbc.JdbcOdbcDriverAttribute" extends="java.lang.Object" isGeneric="false">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="shortName" type="java.lang.String"/>
            <Field name="longName" type="java.lang.String"/>
            <Field name="selections" type="java.lang.String"/>
        </Fields>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void"/>
        </Methods>
    </Class>
    <Class mangling="sun.beans.editors.BoolEditor" extends="java.beans.PropertyEditorSupport" isGeneric="false" visibility="public">
        <Extends mangling="java.beans.PropertyEditorSupport"/>
        <Methods>
            <Method signature="getJavaInitializationString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getAsText()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setAsText(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="getTags()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.beans.editors.ColorEditor" extends="java.awt.Panel" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Panel"/>
        <Implements mangling="java.beans.PropertyEditor"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="setValue(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="keyUp(java.awt.Event,int)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="setAsText(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="action(java.awt.Event,java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getJavaInitializationString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]void" visibility="public"/>
            <Method signature="isPaintable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="paintValue(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void" visibility="public"/>
            <Method signature="getAsText()" returnType="java.lang.String" visibility="public"/>
            <Method signature="getTags()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="getCustomEditor()" returnType="java.awt.Component" visibility="public"/>
            <Method signature="supportsCustomEditor()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="addPropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removePropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.beans.editors.FontEditor" extends="java.awt.Panel" isGeneric="false" visibility="public">
        <Extends mangling="java.awt.Panel"/>
        <Implements mangling="java.beans.PropertyEditor"/>
        <Fields/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="preferredSize()" returnType="java.awt.Dimension" visibility="public"/>
            <Method signature="setValue(java.lang.Object)" returnType="[ext]void" visibility="public"/>
            <Method signature="getValue()" returnType="[ext]void" visibility="public"/>
            <Method signature="getJavaInitializationString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="action(java.awt.Event,java.lang.Object)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="isPaintable()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="paintValue(java.awt.Graphics,java.awt.Rectangle)" returnType="[ext]void" visibility="public"/>
            <Method signature="getAsText()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setAsText(java.lang.String)" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="getTags()" returnType="[ext]java.lang.String[]" visibility="public"/>
            <Method signature="getCustomEditor()" returnType="java.awt.Component" visibility="public"/>
            <Method signature="supportsCustomEditor()" returnType="[ext]boolean" visibility="public"/>
            <Method signature="addPropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" visibility="public"/>
            <Method signature="removePropertyChangeListener(java.beans.PropertyChangeListener)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.beans.editors.StringEditor" extends="java.beans.PropertyEditorSupport" isGeneric="false" visibility="public">
        <Extends mangling="java.beans.PropertyEditorSupport"/>
        <Methods>
            <Method signature="getJavaInitializationString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="setAsText(java.lang.String)" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.beans.editors.NumberEditor" extends="java.beans.PropertyEditorSupport" isGeneric="false" visibility="public">
        <Extends mangling="java.beans.PropertyEditorSupport"/>
        <Methods>
            <Method signature="getJavaInitializationString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.beans.infos.ComponentBeanInfo" extends="java.beans.SimpleBeanInfo" isGeneric="false" visibility="public">
        <Extends mangling="java.beans.SimpleBeanInfo"/>
        <Fields/>
        <Methods>
            <Method signature="getPropertyDescriptors()" returnType="[ext]java.beans.PropertyDescriptor[]" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sunw.util.EventObject" extends="java.util.EventObject" isGeneric="false" visibility="public">
        <Extends mangling="java.util.EventObject"/>
        <Methods>
            <Method signature="+ctor(java.lang.Object)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sunw.util.EventListener" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.util.EventListener"/>
    </Interface>
    <Interface mangling="sunw.io.Serializable" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Implements mangling="java.io.Serializable"/>
    </Interface>
    <Class mangling="java.text.resources.LocaleElements" extends="java.util.ListResourceBundle" isGeneric="false" visibility="public">
        <Extends mangling="java.util.ListResourceBundle"/>
        <Methods>
            <Method signature="getContents()" returnType="[ext]java.lang.Object[][]" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.resources.DateFormatZoneData_en" extends="java.util.ListResourceBundle" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.util.ListResourceBundle"/>
        <Fields>
            <Field name="contents" type="java.lang.Object[][]" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="getContents()" returnType="[ext]java.lang.Object[][]" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.io.CharacterEncoding" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="aliasName(java.lang.String)" isStatic="true" returnType="java.lang.String" visibility="public"/>
            <Method signature="getSJISName()" isStatic="true" returnType="java.lang.String"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.io.MalformedInputException" extends="java.io.CharConversionException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.CharConversionException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.resources.DateFormatZoneData" extends="java.util.ListResourceBundle" isGeneric="false" isFinal="true" visibility="public">
        <Extends mangling="java.util.ListResourceBundle"/>
        <Fields>
            <Field name="contents" type="java.lang.Object[][]" isStatic="true" isFinal="true"/>
        </Fields>
        <Methods>
            <Method signature="getContents()" returnType="[ext]java.lang.Object[][]" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.io.ConversionBufferFullException" extends="java.io.CharConversionException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.CharConversionException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.resources.LocaleElements_en" extends="java.util.ListResourceBundle" isGeneric="false" visibility="public">
        <Extends mangling="java.util.ListResourceBundle"/>
        <Methods>
            <Method signature="getContents()" returnType="[ext]java.lang.Object[][]" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.io.UnknownCharacterException" extends="java.io.CharConversionException" isGeneric="false" visibility="public">
        <Extends mangling="java.io.CharConversionException"/>
        <Methods>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
            <Method signature="+ctor(java.lang.String)" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.io.ByteToCharConverter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="subMode" type="boolean" visibility="protected"/>
            <Field name="subChars" type="char[]" visibility="protected"/>
            <Field name="charOff" type="int" visibility="protected"/>
            <Field name="byteOff" type="int" visibility="protected"/>
            <Field name="badInputLength" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="getDefault()" isStatic="true" returnType="sun.io.ByteToCharConverter" visibility="public"/>
            <Method signature="getConverter(java.lang.String)" isStatic="true" returnType="sun.io.ByteToCharConverter" visibility="public">
                <Throw mangling="java.io.UnsupportedEncodingException"/>
            </Method>
            <Method signature="getCharacterEncoding()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="convert(byte[],int,int,char[],int,int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="sun.io.MalformedInputException"/>
                <Throw mangling="sun.io.UnknownCharacterException"/>
                <Throw mangling="sun.io.ConversionBufferFullException"/>
            </Method>
            <Method signature="convertAll(byte[])" returnType="[ext]char[]" visibility="public">
                <Throw mangling="sun.io.MalformedInputException"/>
            </Method>
            <Method signature="flush(char[],int,int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="sun.io.MalformedInputException"/>
                <Throw mangling="sun.io.ConversionBufferFullException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="getMaxCharsPerByte()" returnType="[ext]int" visibility="public"/>
            <Method signature="getBadInputLength()" returnType="[ext]int" visibility="public"/>
            <Method signature="nextCharIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="nextByteIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="setSubstitutionMode(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setSubstitutionChars(char[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="java.text.resources.LocaleData" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields/>
        <Methods>
            <Method signature="getAvailableLocales(java.lang.String)" isStatic="true" returnType="[ext]java.util.Locale[]" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Class mangling="sun.io.CharToByteConverter" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Fields>
            <Field name="subMode" type="boolean" visibility="protected"/>
            <Field name="subBytes" type="byte[]" visibility="protected"/>
            <Field name="charOff" type="int" visibility="protected"/>
            <Field name="byteOff" type="int" visibility="protected"/>
            <Field name="badInputLength" type="int" visibility="protected"/>
        </Fields>
        <Methods>
            <Method signature="getDefault()" isStatic="true" returnType="sun.io.CharToByteConverter" visibility="public"/>
            <Method signature="getConverter(java.lang.String)" isStatic="true" returnType="sun.io.CharToByteConverter" visibility="public">
                <Throw mangling="java.io.UnsupportedEncodingException"/>
            </Method>
            <Method signature="getCharacterEncoding()" returnType="java.lang.String" isAbstract="true" visibility="public"/>
            <Method signature="convert(char[],int,int,byte[],int,int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="sun.io.MalformedInputException"/>
                <Throw mangling="sun.io.UnknownCharacterException"/>
                <Throw mangling="sun.io.ConversionBufferFullException"/>
            </Method>
            <Method signature="convertAll(char[])" returnType="[ext]byte[]" visibility="public">
                <Throw mangling="sun.io.MalformedInputException"/>
            </Method>
            <Method signature="flush(byte[],int,int)" returnType="[ext]int" isAbstract="true" visibility="public">
                <Throw mangling="sun.io.MalformedInputException"/>
                <Throw mangling="sun.io.ConversionBufferFullException"/>
            </Method>
            <Method signature="reset()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="canConvert(char)" returnType="[ext]boolean" visibility="public"/>
            <Method signature="getMaxBytesPerChar()" returnType="[ext]int" isAbstract="true" visibility="public"/>
            <Method signature="getBadInputLength()" returnType="[ext]int" visibility="public"/>
            <Method signature="nextCharIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="nextByteIndex()" returnType="[ext]int" visibility="public"/>
            <Method signature="setSubstitutionMode(boolean)" returnType="[ext]void" visibility="public"/>
            <Method signature="setSubstitutionBytes(byte[])" returnType="[ext]void" visibility="public">
                <Throw mangling="java.lang.IllegalArgumentException"/>
            </Method>
            <Method signature="toString()" returnType="java.lang.String" visibility="public"/>
            <Method signature="+ctor()" returnType="[ext]void" visibility="public"/>
        </Methods>
    </Class>
    <Interface mangling="sun.io.ObjectInputStreamDelegate" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="readObjectDelegate()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="defaultReadObjectDelegate()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="enableResolveObjectDelegate(boolean)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
    <Interface mangling="sun.io.ObjectOutputStreamDelegate" extends="java.lang.Object" isGeneric="false" visibility="public">
        <Extends mangling="java.lang.Object"/>
        <Methods>
            <Method signature="writeObjectDelegate(java.lang.Object)" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="defaultWriteObjectDelegate()" returnType="[ext]void" isAbstract="true" visibility="public"/>
            <Method signature="enableReplaceObjectDelegate(boolean)" returnType="[ext]boolean" isAbstract="true" visibility="public"/>
        </Methods>
    </Interface>
</BlackBox>
