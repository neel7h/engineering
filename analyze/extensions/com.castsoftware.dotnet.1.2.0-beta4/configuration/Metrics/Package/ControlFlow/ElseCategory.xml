<?xml version="1.0" encoding="utf-8"?>
<METRIC PACKAGE_NAME="ControlFlow.Else">
	<ACTIVE>YES</ACTIVE>
	<ACTION_LIST>
			<ACTION NAME="MATCH IN TREE ELEMENT" >
					<INTERNAL_UID>8033D1FB-9FAB-4fcc-99A8-3ECD667C2889</INTERNAL_UID>					
					<ACTIVE>YES</ACTIVE>
			</ACTION>
	</ACTION_LIST>
	
	<CATEGORY_LIST>		

		<CATEGORY NAME="MATCH_ELSE">
			<PROPERTY NAME="VALUE" type="integer" /> 
			<PROPERTY NAME="GENERIC_ELSE" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_J11_ClassInitializer</SIGNATURE>
						<SIGNATURE>NODE_J11_ClassInitializerASSEXP_EQ</SIGNATURE>
						<SIGNATURE>NODE_J11_MethodBody</SIGNATURE>						
						<SIGNATURE>NODE_J11_ConstructorBody</SIGNATURE>	
						<SIGNATURE>NODE_C_BODY</SIGNATURE>	
						<SIGNATURE>NODE_CSharp_BODY</SIGNATURE>	
						<SIGNATURE>NODE_JS15_Script</SIGNATURE>												
					</OR>
														
					<SUB_TREE_OR>
						<TOKEN NAME="_ELSE_" />
					</SUB_TREE_OR>
				</TREE>
			</PROPERTY>

			<PROPERTY NAME="PLSQL_ELSE" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>CLASS_PLSQL_function_body</SIGNATURE>
            <SIGNATURE>CLASS_PL_function_body</SIGNATURE> --
            <SIGNATURE>CLASS_PLSQL_procedure_body</SIGNATURE>
            <SIGNATURE>CLASS_PL_procedure_body</SIGNATURE> --
            <SIGNATURE>NODE_P23_PACKAGE_BODY_1</SIGNATURE>
            <SIGNATURE>NODE_PL_PACKAGE_BODY_1</SIGNATURE> --
            <SIGNATURE>NODE_P23_PACKAGE_BODY_2</SIGNATURE>
            <SIGNATURE>NODE_PL_PACKAGE_BODY_2</SIGNATURE> --
            <SIGNATURE>NODE_P23_TRIGGER</SIGNATURE>
            <SIGNATURE>NODE_PL_TRIGGER</SIGNATURE> --
					</OR>
														
					<SUB_TREE_OR>						
						<SIGNATURE NAME="NODE_P23_STATEMENT_ELSE" />
            <SIGNATURE NAME="NODE_PL_STATEMENT_ELSE" /> --
					</SUB_TREE_OR>
				</TREE>			
			</PROPERTY>

			<PROPERTY NAME="ABAP_ELSE" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_AB4_FileUnit</SIGNATURE>						
					</OR>
														
					<SUB_TREE_OR>						
						<SIGNATURE NAME="NODE_AB4_ElseStatement" />
					</SUB_TREE_OR>
				</TREE>			
			</PROPERTY>

			<PROPERTY NAME="VB_NET_ELSE" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_VbNet_FUNCTION</SIGNATURE>
						<SIGNATURE>NODE_VbNet_SUB</SIGNATURE>												
					</OR>
														
					<SUB_TREE_OR>
						<SIGNATURE NAME="NODE_VbNet_ELSE" />	
					</SUB_TREE_OR>
				</TREE>
			</PROPERTY>



			<PROPERTY NAME="PB_ELSE" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_PB6_LIST_STATEMENT</SIGNATURE>						
					</OR>
					<SUB_TREE_OR>
						<SIGNATURE NAME="NODE_PB6_STAT_ELSE" />							
					</SUB_TREE_OR>
				</TREE>
			</PROPERTY>

			<PROPERTY NAME="DB2_Else" type="pattern">
					<TREE>
						<OR>
							<SIGNATURE>LIST_UDB_SQL_STATEMENT_LIST</SIGNATURE>													
							<SIGNATURE>LIST_DSN_SQL_STATEMENT_LIST</SIGNATURE>
							<SIGNATURE>NODE_UDB_CREATE_TRIGGER_BEFORE</SIGNATURE>
							<SIGNATURE>NODE_UDB_CREATE_TRIGGER_AFTER</SIGNATURE>
							<SIGNATURE>NODE_DSN_CREATE_TRIGGER_BEFORE</SIGNATURE>
							<SIGNATURE>NODE_DSN_CREATE_TRIGGER_AFTER</SIGNATURE>
						</OR>
						<TREE>
							<OR>
								<SIGNATURE NAME="NODE_UDB_CTRL_IF" />	
								<SIGNATURE NAME="NODE_DSN_CTRL_IF" />	
							</OR>						
							<SUB_TREE_OR>
								<TOKEN NAME="_ELSE_" />									
							</SUB_TREE_OR>
						</TREE>									
					</TREE>
			</PROPERTY>
			<PROPERTY NAME="VB_ELSE" type="pattern">
					<TREE>
						<OR>
							<SIGNATURE>NODE_VB6_STATEMENT_DECLARE_LIST</SIGNATURE>																				
						</OR>
            <SUB_TREE_OR>
              <SIGNATURE NAME="NODE_VB6_ELSE_UNDER_IF" />
            </SUB_TREE_OR>
            <!-- In VB an Else can be found in a Select statement
              -  to avoid confusion between the two a new node has been
              -  created, we do not anymore simply look for a token _ELSE_ -->
						<!--TREE>
							<OR>
								<SIGNATURE>NODE_VB6_STATEMENT_IF</SIGNATURE>																				
							</OR>															
							<SUB_TREE_OR>
								<TOKEN NAME="_ELSE_" />								
							</SUB_TREE_OR>
						</TREE-->
					</TREE>
			</PROPERTY>

			<PROPERTY NAME="DELPHI_ELSE" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_DP6_FUNC_BLOCK</SIGNATURE>
						<SIGNATURE>NODE_DP6_PROC_BLOCK</SIGNATURE>
						<SIGNATURE>NODE_DP6_CONSTRUCTOR_IMPL</SIGNATURE>
						<SIGNATURE>NODE_DP6_DESTRUCTOR_IMPL</SIGNATURE>
					</OR>																						
					<TREE>
						<OR>
							<SIGNATURE>NODE_DP6_IF_THEN_ELSE_BRANCH</SIGNATURE>																				
						</OR>															
						<SUB_TREE_OR>
							<TOKEN NAME="_ELSE_" />								
						</SUB_TREE_OR>
					</TREE>
				</TREE>
			</PROPERTY>

			<PROPERTY NAME="VB_SCRIPT_ELSE" type="pattern">
					<TREE>
						<OR>
							<SIGNATURE>NODE_VBS5_Script</SIGNATURE>
						</OR>
						<TREE>
							<OR>
								<SIGNATURE>NODE_VBS5_IfStatement3</SIGNATURE>																				
								<SIGNATURE>NODE_VBS5_IfStatement4</SIGNATURE>																				
								<SIGNATURE>NODE_VBS5_IfStatement5</SIGNATURE>																				
							</OR>															
							<SUB_TREE_OR>
								<SIGNATURE NAME="NODE_VBS5_ElseStatement" />
                <SIGNATURE NAME="NODE_VBS5_OptElseSyntax" />
							</SUB_TREE_OR>
					  </TREE>
					</TREE>
			</PROPERTY>


			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>ABAP_ELSE</MATCH>
				<MATCH>VB_SCRIPT_ELSE</MATCH>
				<MATCH>VB_NET_ELSE</MATCH>
				<MATCH>DELPHI_ELSE</MATCH>	
				<MATCH>VB_ELSE</MATCH>	
				<MATCH>DB2_Else</MATCH>	
				<MATCH>PB_ELSE</MATCH>			
				<MATCH>PLSQL_ELSE</MATCH> 								
				<MATCH>GENERIC_ELSE</MATCH> 								
				<TOKEN>TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN> 
				<SIGNATURE>TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE> 
				<RESULT_CLUMP>VALUE</RESULT_CLUMP> 
			</ADD_ACTION>
		</CATEGORY>

	</CATEGORY_LIST>
</METRIC>
