<?xml version="1.0" encoding="utf-8"?>

<METRIC PACKAGE_NAME="SQL Metrics.GroupBy">
	<ACTIVE>YES</ACTIVE>
	<ACTION_LIST>
		<ACTION NAME="MATCH IN TREE ELEMENT" >
			<INTERNAL_UID>8033D1FB-9FAB-4fcc-99A8-3ECD667C2889</INTERNAL_UID>
			<ACTIVE>YES</ACTIVE>
		</ACTION>
		<ACTION NAME="MATCH" >
			<INTERNAL_UID>1E981836-A530-4185-BA82-56E92E784545</INTERNAL_UID>
			<ACTIVE>YES</ACTIVE>
		</ACTION>

		<ACTION NAME="PERSISTENCE" >
			<INTERNAL_UID>1AE3873E-AE59-4813-8914-18CF33125148</INTERNAL_UID>
			<ACTIVE>YES</ACTIVE>
		</ACTION>
	</ACTION_LIST>

	<CATEGORY_LIST>
		<CATEGORY NAME="MATCH_PLSQL_GROUP_BY">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="VALUE_EMBEDDED" type="integer" />
			<PROPERTY NAME="PLSQL_GROUP_BY" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_C_BODY</SIGNATURE>
						<SIGNATURE>CLASS_PLSQL_function_body</SIGNATURE>
						<SIGNATURE>CLASS_PL_function_body</SIGNATURE> --
						<SIGNATURE>NODE_P23_TRIGGER</SIGNATURE>
						<SIGNATURE>NODE_PL_TRIGGER</SIGNATURE> --
						<SIGNATURE>CLASS_PLSQL_procedure_body</SIGNATURE>
						<SIGNATURE>CLASS_PL_procedure_body</SIGNATURE> --
						<SIGNATURE>NODE_P23_PACKAGE_BODY_1</SIGNATURE>
						<SIGNATURE>NODE_PL_PACKAGE_BODY_1</SIGNATURE> --
						<SIGNATURE>NODE_P23_PACKAGE_BODY_2</SIGNATURE>
						<SIGNATURE>NODE_PL_PACKAGE_BODY_2</SIGNATURE> --
						<SIGNATURE>NODE_P23_VIEW</SIGNATURE>
						<SIGNATURE>NODE_PL_VIEW</SIGNATURE> --
						<SIGNATURE>NODE_P23_CURSOR_BODY</SIGNATURE>
						<SIGNATURE>NODE_PL_CURSOR_BODY</SIGNATURE> --
						<SIGNATURE>LIST_NV_INSTRUCTIONS</SIGNATURE>
						<SIGNATURE>NODE_49X_VIEW_DEFINITION</SIGNATURE>
						<SIGNATURE>NODE_PB6_LIST_STATEMENT</SIGNATURE>
						<SIGNATURE>LIST_UDB_SQL_STATEMENT_LIST</SIGNATURE>
						<SIGNATURE>LIST_DSN_SQL_STATEMENT_LIST</SIGNATURE>
						<SIGNATURE>NODE_UDB_CREATE_VIEW</SIGNATURE>
						<SIGNATURE>NODE_DSN_CREATE_VIEW</SIGNATURE>
						<SIGNATURE>NODE_UDB_FUNC_RETURN</SIGNATURE>
						<SIGNATURE>NODE_DSN_FUNC_RETURN</SIGNATURE>
						<SIGNATURE>NODE_UDB_CREATE_TRIGGER_BEFORE</SIGNATURE>
						<SIGNATURE>NODE_UDB_CREATE_TRIGGER_AFTER</SIGNATURE>
						<SIGNATURE>NODE_DSN_CREATE_TRIGGER_BEFORE</SIGNATURE>
						<SIGNATURE>NODE_DSN_CREATE_TRIGGER_AFTER</SIGNATURE>
						<!-- YLE BEGIN Add for T-SQL inline table functions -->
						<!-- bug 21838 -->
						<SIGNATURE>NODE_M80_CREATE_FCT_2</SIGNATURE>
						<!-- YLE END add -->
						<SIGNATURE>NODE_AB4_FileUnit</SIGNATURE>
					</OR>
					<SUB_TREE_OR>
						<SIGNATURE NAME="NODE_P23_GROUP_CLAUSE" />
						<SIGNATURE NAME="NODE_PL_GROUP_CLAUSE" /> --
						<SIGNATURE NAME="NODE_M65_GROUP_BY" />
						<SIGNATURE NAME="NODE_49X_GROUP_BY" />
						<SIGNATURE NAME="NODE_49X_GROUP_BY_ALL" />
						<SIGNATURE NAME="NODE_UDB_GROUP_CLAUSE" />
						<SIGNATURE NAME="NODE_DSN_GROUP_CLAUSE" />
						<SIGNATURE NAME="NODE_AB4_OpenSQLGroupByKeyword" />
						<SIGNATURE NAME="NODE_M100_GOUPING_SETS" />
					</SUB_TREE_OR>
				</TREE>
			</PROPERTY>
			<PROPERTY NAME="PLSQL_GROUP_BY_EMBEDDED" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>CLASS_UDB_STMT_DT_ACCESS</SIGNATURE>
						<SIGNATURE>CLASS_DSN_STMT_DT_ACCESS</SIGNATURE>
						<SIGNATURE>NODE_P23_QUERY</SIGNATURE>
						<SIGNATURE>NODE_49X_SELECT</SIGNATURE>
					</OR>
					<SUB_TREE_OR>
						<SIGNATURE NAME="NODE_P23_GROUP_CLAUSE" />
						<SIGNATURE NAME="NODE_PL_GROUP_CLAUSE" /> --
						<SIGNATURE NAME="NODE_M65_GROUP_BY" />
						<SIGNATURE NAME="NODE_49X_GROUP_BY" />
						<SIGNATURE NAME="NODE_49X_GROUP_BY_ALL" />
						<SIGNATURE NAME="NODE_UDB_GROUP_CLAUSE" />
						<SIGNATURE NAME="NODE_DSN_GROUP_CLAUSE" />
						<SIGNATURE NAME="NODE_M100_GOUPING_SETS" />
					</SUB_TREE_OR>
				</TREE>
			</PROPERTY>
			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>PLSQL_GROUP_BY</MATCH>
				<TOKEN>TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_COUNT>VALUE</RESULT_COUNT>
			</ADD_ACTION>
			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>PLSQL_GROUP_BY_EMBEDDED</MATCH>
				<TOKEN>COBOL_EMBEDDED_SQL_TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>COBOL_EMBEDDED_SQL_TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_COUNT>VALUE_EMBEDDED</RESULT_COUNT>
			</ADD_ACTION>
		</CATEGORY>

		<CATEGORY NAME="SAVE_MATCH_PLSQL_GROUP_BY">
			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>MATCH_PLSQL_GROUP_BY.VALUE</SAVE>
				<NAME>Number of GROUP BY</NAME>
			</ADD_ACTION>
		</CATEGORY>

		<CATEGORY NAME="SAVE_MATCH_PLSQL_GROUP_BY_EMBEDDED_SQL">

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>MATCH_PLSQL_GROUP_BY.VALUE_EMBEDDED</SAVE>
				<NAME>Number of GROUP BY</NAME>
			</ADD_ACTION>
		</CATEGORY>

		<CATEGORY NAME="MATCH_REGEXP_GROUP_BY_FORMS">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="REGEXP_GROUP_BY" type="regexp_pattern">
				<LANGUAGE>FORMS-LANGUAGE</LANGUAGE>
				<SEARCH_IN_CODE>Yes</SEARCH_IN_CODE>
				<SEARCH_IN_COMMENT>No</SEARCH_IN_COMMENT>
				<SEARCH_IN_STRING>No</SEARCH_IN_STRING>
				<SEARCH_IN_EMBEDDEDSQL>No</SEARCH_IN_EMBEDDEDSQL>
				<SEARCH_CASE_SENSITIVE>No</SEARCH_CASE_SENSITIVE>

				<REGEXP><![CDATA[GROUP[[:Zs:]\t\r\n]+BY]]></REGEXP>
			</PROPERTY>

			<ADD_ACTION NAME="MATCH">
				<MATCH>REGEXP_GROUP_BY</MATCH>
				<CLASS>FORMS_GREP_CLASS.CLASS</CLASS>
				<SOURCE_CODE>OBJECT.SOURCECODE</SOURCE_CODE>
				<VALUE_OUTPUT>VALUE</VALUE_OUTPUT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<NAME>Number of GROUP BY</NAME>
			</ADD_ACTION>
		</CATEGORY>

		<CATEGORY NAME="MATCH_REGEXP_GROUP_BY_DB2_ZOS">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="REGEXP_GROUP_BY" type="regexp_pattern">
        <LANGUAGE>DB2-LANGUAGE</LANGUAGE>
        <LANGUAGE>DB2ZOS-LANGUAGE</LANGUAGE>
        <SEARCH_IN_CODE>Yes</SEARCH_IN_CODE>
				<SEARCH_IN_COMMENT>No</SEARCH_IN_COMMENT>
				<SEARCH_IN_STRING>No</SEARCH_IN_STRING>
				<SEARCH_IN_EMBEDDEDSQL>No</SEARCH_IN_EMBEDDEDSQL>
				<SEARCH_CASE_SENSITIVE>No</SEARCH_CASE_SENSITIVE>

				<REGEXP><![CDATA[GROUP[[:Zs:]\t\r\n]+BY]]></REGEXP>
			</PROPERTY>

			<ADD_ACTION NAME="MATCH">
				<MATCH>REGEXP_GROUP_BY</MATCH>
				<CLASS>DB2_ZOS_CLASS.CLASS</CLASS>
				<SOURCE_CODE>OBJECT.SOURCECODE</SOURCE_CODE>
				<VALUE_OUTPUT>VALUE</VALUE_OUTPUT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<NAME>Number of GROUP BY</NAME>
			</ADD_ACTION>
		</CATEGORY>

		<CATEGORY NAME="MATCH_REGEXP_GROUP_BY_DYNAMIC_SQL">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="GREP_OR_IE" type="integer" />
			<PROPERTY NAME="REGEXP_GROUP_BY" type="regexp_pattern">
				<LANGUAGE>PLSQL-LANGUAGE</LANGUAGE>
				<SEARCH_IN_CODE>Yes</SEARCH_IN_CODE>
				<SEARCH_IN_COMMENT>No</SEARCH_IN_COMMENT>
				<SEARCH_IN_STRING>Yes</SEARCH_IN_STRING>
				<SEARCH_IN_EMBEDDEDSQL>No</SEARCH_IN_EMBEDDEDSQL>
				<SEARCH_CASE_SENSITIVE>No</SEARCH_CASE_SENSITIVE>
				<MATCH_WHOLE_WORD_ONLY>No</MATCH_WHOLE_WORD_ONLY>

				<REGEXP><![CDATA[([^[:word:]]|\\[rntfv])GROUP([[:space:]]|\\[rntfv])+BY([^[:word:]]|\\[rntfv])]]></REGEXP>
			</PROPERTY>

			<ADD_ACTION NAME="MATCH">
				<MATCH>REGEXP_GROUP_BY</MATCH>
				<SOURCE_CODE>GET_STRING_COMMENT_WITH_GREP.STRING_VALUE</SOURCE_CODE>
				<SOURCE_CODE>OBJECT.SQL_DYNAMIC_IE_SOURCECODE</SOURCE_CODE>
				<SOURCE_CODE>STRING_CONCATENATION.VALUE</SOURCE_CODE>
				<GREP_OR_IE_OUTPUT>GREP_OR_IE</GREP_OR_IE_OUTPUT>
				<VALUE_OUTPUT>VALUE</VALUE_OUTPUT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<GREP_OR_IE>MATCH_REGEXP_GROUP_BY_DYNAMIC_SQL.GREP_OR_IE</GREP_OR_IE>
				<NAME>Number of GROUP BY</NAME>
			</ADD_ACTION>
		</CATEGORY>

		<CATEGORY NAME="MATCH_REGEXP_GROUP_BY_UA">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="MATCH_REGEXP_GROUP_BY" type="regexp_pattern">
				<SEARCH_IN_CODE>No</SEARCH_IN_CODE>
				<SEARCH_IN_COMMENT>No</SEARCH_IN_COMMENT>
				<SEARCH_IN_STRING>No</SEARCH_IN_STRING>
				<SEARCH_IN_EMBEDDEDSQL>Yes</SEARCH_IN_EMBEDDEDSQL>
				<SEARCH_CASE_SENSITIVE>No</SEARCH_CASE_SENSITIVE>
				<!-- note: the reg. exp. for U.A. volontarily doesn't recognize a '\' followed by 
				'r', or 'n', or 't' as an escape sequence for, respectively, CR, or LF, or TAB -->
				<REGEXP><![CDATA[GROUP[ \t\r\n]+BY]]></REGEXP>
			</PROPERTY>

			<ADD_ACTION NAME="MATCH">
				<MATCH>MATCH_REGEXP_GROUP_BY</MATCH>
				<SOURCE_CODE>OBJECT.SOURCECODE</SOURCE_CODE>
				<LANGUAGE_UA>OBJECT.LANGUAGE_UA</LANGUAGE_UA>
				<VALUE_OUTPUT>VALUE</VALUE_OUTPUT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<NAME>Number of GROUP BY</NAME>
			</ADD_ACTION>
		</CATEGORY>

	</CATEGORY_LIST>
</METRIC>
