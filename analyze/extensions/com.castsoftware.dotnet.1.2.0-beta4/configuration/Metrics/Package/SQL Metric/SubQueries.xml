<?xml version="1.0" encoding="utf-8"?>

<METRIC PACKAGE_NAME="SQL Metrics.SubQueries">
	<ACTIVE>YES</ACTIVE>
	<ACTION_LIST>
		<ACTION NAME="MATCH IN TREE ELEMENT" >
			<INTERNAL_UID>8033D1FB-9FAB-4fcc-99A8-3ECD667C2889</INTERNAL_UID>
			<ACTIVE>YES</ACTIVE>
		</ACTION>
		<ACTION NAME="MATCH" >
			<INTERNAL_UID>1E981836-A530-4185-BA82-56E92E784545</INTERNAL_UID>
			<ACTIVE>YES</ACTIVE>
		</ACTION>

		<ACTION NAME="PERSISTENCE" >
			<INTERNAL_UID>1AE3873E-AE59-4813-8914-18CF33125148</INTERNAL_UID>
			<ACTIVE>YES</ACTIVE>
		</ACTION>
	</ACTION_LIST>

	<!-- YLE 
	BIG FAT WARNING : any modification in the following categories MUST be propagated to
	the category MATCH_SQL_SUBQUERY_DEPTH (see below)
-->
	<CATEGORY_LIST>
		<CATEGORY NAME="MATCH_PLSQL_SUBQUERY">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="VALUE_EMBEDDED" type="integer" />
			<PROPERTY NAME="PLSQL_SUBQUERY" type="pattern">
        <BOOKMARK>YES</BOOKMARK>
        <TREE>
					<OR>
						<SIGNATURE>NODE_C_BODY</SIGNATURE>
						<SIGNATURE>CLASS_PLSQL_function_body</SIGNATURE>
						<SIGNATURE>CLASS_PL_function_body</SIGNATURE> --
						<SIGNATURE>NODE_P23_TRIGGER</SIGNATURE>
						<SIGNATURE>NODE_PL_TRIGGER</SIGNATURE> --
						<SIGNATURE>CLASS_PLSQL_procedure_body</SIGNATURE>
						<SIGNATURE>CLASS_PL_procedure_body</SIGNATURE> --
						<SIGNATURE>NODE_P23_PACKAGE_BODY_1</SIGNATURE>
						<SIGNATURE>NODE_PL_PACKAGE_BODY_1</SIGNATURE> --
						<SIGNATURE>NODE_P23_PACKAGE_BODY_2</SIGNATURE>
						<SIGNATURE>NODE_PL_PACKAGE_BODY_2</SIGNATURE> --
						<SIGNATURE>NODE_P23_VIEW</SIGNATURE>
						<SIGNATURE>NODE_PL_VIEW</SIGNATURE> --
						<SIGNATURE>NODE_P23_CURSOR_BODY</SIGNATURE>
						<SIGNATURE>NODE_PL_CURSOR_BODY</SIGNATURE> --
						<SIGNATURE>CLASS_COBOL_BODY_FILE</SIGNATURE>
						<SIGNATURE>NODE_PB6_LIST_STATEMENT</SIGNATURE>
						<SIGNATURE>NODE_AB4_FileUnit</SIGNATURE>
					</OR>
					<TREE>
						<OR>
							<SIGNATURE>NODE_P23_WHERE_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_PL_WHERE_CLAUSE</SIGNATURE> --
							<SIGNATURE>NODE_P23_FROM_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_PL_FROM_CLAUSE</SIGNATURE> --
							<!-- YLE bug 23153, added node NODE_P23_STATEMENT_SQL_UPDATE and
									NODE_P23_STATEMENT_SQL_DELETE	-->
							<SIGNATURE>NODE_P23_STATEMENT_SQL_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_UPDATE</SIGNATURE> --
							<SIGNATURE>NODE_P23_STATEMENT_SQL_DELETE</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_DELETE</SIGNATURE> --
							<!-- YLE bug 23153, added node NODE_P23_STATEMENT_SQL_INSERT-->
							<SIGNATURE>NODE_P23_STATEMENT_SQL_INSERT</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_INSERT</SIGNATURE> --
							<SIGNATURE>NODE_P23_STATEMENT_SQL_INSERT_COL</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_INSERT_COL</SIGNATURE> --
							<SIGNATURE>NODE_AB4_SelectStatement</SIGNATURE>
							<SIGNATURE>NODE_AB4_OpenSQL_StatementDELETE_STATEMENT</SIGNATURE>
							<SIGNATURE>NODE_AB4_OpenSQL_StatementUPDATE_STATEMENT</SIGNATURE>
							<SIGNATURE>NODE_AB4_OpenSQL_StatementINSERT_STATEMENT</SIGNATURE>
						</OR>
						<SUB_TREE_OR>
							<SIGNATURE NAME="CLASS_PLSQL_query_list" SUB_NAME="CLASS_PLSQL_query_terme" />
							<!--<SIGNATURE NAME="CLASS_PL_query_list" SUB_NAME="CLASS_PLSQL_query_terme" />-->
							<SIGNATURE NAME="CLASS_PL_query_list" SUB_NAME="CLASS_PL_query_term" /> --
							<SIGNATURE NAME="NODE_AB4_SubSelectStatement" />
							<SIGNATURE NAME="NODE_AB4_SubSelectStatement" SUB_NAME="SELECT_WITH_END_SELECT" />
						</SUB_TREE_OR>
					</TREE>
				</TREE>
			</PROPERTY>

			<PROPERTY NAME="SQL_SUBQUERY_EMBEDDED" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>CLASS_UDB_STMT_DT_ACCESS</SIGNATURE>
						<SIGNATURE>CLASS_DSN_STMT_DT_ACCESS</SIGNATURE>
						<SIGNATURE>NODE_P23_QUERY</SIGNATURE>
						<SIGNATURE>NODE_49X_SELECT</SIGNATURE>
					</OR>
					<TREE>
						<OR>
							<SIGNATURE>NODE_P23_WHERE_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_PL_WHERE_CLAUSE</SIGNATURE> --
							<SIGNATURE>NODE_P23_FROM_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_PL_FROM_CLAUSE</SIGNATURE> --
							<SIGNATURE>NODE_P23_STATEMENT_SQL_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_UPDATE</SIGNATURE> --
							<SIGNATURE>NODE_P23_STATEMENT_SQL_DELETE</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_DELETE</SIGNATURE> --
							<SIGNATURE>NODE_P23_STATEMENT_SQL_INSERT</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_INSERT</SIGNATURE> --
							<SIGNATURE>NODE_P23_STATEMENT_SQL_INSERT_COL</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_INSERT_COL</SIGNATURE> --
						</OR>
						<SUB_TREE_OR>
							<SIGNATURE NAME="CLASS_PLSQL_query_list" SUB_NAME="CLASS_PLSQL_query_terme" />
							<!--<SIGNATURE NAME="CLASS_PL_query_list" SUB_NAME="CLASS_PLSQL_query_terme" />-->
							<SIGNATURE NAME="CLASS_PL_query_list" SUB_NAME="CLASS_PL_query_term" /> --
						</SUB_TREE_OR>
					</TREE>
				</TREE>
			</PROPERTY>

			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>PLSQL_SUBQUERY</MATCH>
				<TOKEN>TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_COUNT>VALUE</RESULT_COUNT>
			</ADD_ACTION>
			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>SQL_SUBQUERY_EMBEDDED</MATCH>
				<TOKEN>COBOL_EMBEDDED_SQL_TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>COBOL_EMBEDDED_SQL_TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_COUNT>VALUE_EMBEDDED</RESULT_COUNT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<NAME>Number of Subqueries</NAME>
			</ADD_ACTION>
			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE_EMBEDDED</SAVE>
				<NAME>Number of Subqueries</NAME>
			</ADD_ACTION>

		</CATEGORY>

		<CATEGORY NAME="MATCH_TSQL_SUBQUERY">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="VALUE_EMBEDDED" type="integer" />
			<PROPERTY NAME="SQL_SUBQUERY_TSQL" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_C_BODY</SIGNATURE>
						<SIGNATURE>CLASS_COBOL_BODY_FILE</SIGNATURE>
						<SIGNATURE>NODE_PB6_LIST_STATEMENT</SIGNATURE>
					</OR>
					<TREE>
						<OR>
							<SIGNATURE>NODE_M70_SELECT_TERM</SIGNATURE>
							<SIGNATURE>NODE_49X_SELECT_TERM</SIGNATURE>
							<SIGNATURE>NODE_M80_UPDATE_1</SIGNATURE>
							<SIGNATURE>NODE_M80_DELETE_1</SIGNATURE>
							<SIGNATURE>NODE_49X_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_49X_DELETE</SIGNATURE>
							<SIGNATURE>CLASS_insert</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1a</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2a</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1b</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2b</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1c</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2c</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1d</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2d</SIGNATURE>
						</OR>
						<SUB_TREE_OR>
							<!-- YLE bug 23153, added NODE_M60_SELECT1 to detect 
								 the SELECT in INSERT INTO ... SELECT -->
							<SIGNATURE NAME="NODE_M60_SELECT1" />
							<SIGNATURE NAME="NODE_49X_SELECT" />
							<SIGNATURE NAME="NODE_M70_SUB_QUERY_TERM" />
							<SIGNATURE NAME="NODE_49X_SUB_QUERY_TERM" />
						</SUB_TREE_OR>
					</TREE>
				</TREE>
			</PROPERTY>
			<PROPERTY NAME="SQL_SUBQUERY_TSQL_EMBEDDED" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>CLASS_UDB_STMT_DT_ACCESS</SIGNATURE>
						<SIGNATURE>CLASS_DSN_STMT_DT_ACCESS</SIGNATURE>
						<SIGNATURE>NODE_P23_QUERY</SIGNATURE>
						<SIGNATURE>NODE_49X_SELECT</SIGNATURE>
					</OR>
					<TREE>
						<OR>
							<SIGNATURE>NODE_M70_SELECT_TERM</SIGNATURE>
							<SIGNATURE>NODE_49X_SELECT_TERM</SIGNATURE>
							<SIGNATURE>NODE_M80_UPDATE_1</SIGNATURE>
							<SIGNATURE>NODE_M80_DELETE_1</SIGNATURE>
							<SIGNATURE>NODE_49X_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_49X_DELETE</SIGNATURE>
							<SIGNATURE>CLASS_insert</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1a</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2a</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1b</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2b</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1c</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2c</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1d</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2d</SIGNATURE>
						</OR>
						<SUB_TREE_OR>
							<!-- YLE bug 23153, added NODE_M60_SELECT1 to detect 
								 the SELECT in INSERT INTO ... SELECT -->
							<SIGNATURE NAME="NODE_M60_SELECT1" />
							<SIGNATURE NAME="NODE_49X_SELECT" />
							<SIGNATURE NAME="NODE_M70_SUB_QUERY_TERM" />
							<SIGNATURE NAME="NODE_49X_SUB_QUERY_TERM" />
						</SUB_TREE_OR>
					</TREE>
				</TREE>
			</PROPERTY>
			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>SQL_SUBQUERY_TSQL</MATCH>
				<TOKEN>TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_COUNT>VALUE</RESULT_COUNT>
			</ADD_ACTION>
			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>SQL_SUBQUERY_TSQL_EMBEDDED</MATCH>
				<TOKEN>COBOL_EMBEDDED_SQL_TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>COBOL_EMBEDDED_SQL_TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_COUNT>VALUE_EMBEDDED</RESULT_COUNT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<NAME>Number of Subqueries</NAME>
			</ADD_ACTION>
			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE_EMBEDDED</SAVE>
				<NAME>Number of Subqueries</NAME>
			</ADD_ACTION>

		</CATEGORY>

		<CATEGORY NAME="MATCH_SQL_SUBQUERY">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="VALUE_EMBEDDED" type="integer" />
			<PROPERTY NAME="SQL_SUBQUERY" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_C_BODY</SIGNATURE>
						<SIGNATURE>CLASS_COBOL_BODY_FILE</SIGNATURE>
						<SIGNATURE>NODE_PB6_LIST_STATEMENT</SIGNATURE>
						<SIGNATURE>LIST_UDB_SQL_STATEMENT_LIST</SIGNATURE>
						<SIGNATURE>LIST_DSN_SQL_STATEMENT_LIST</SIGNATURE>
						<SIGNATURE>NODE_UDB_FUNC_RETURN</SIGNATURE>
						<SIGNATURE>NODE_DSN_FUNC_RETURN</SIGNATURE>
						<SIGNATURE>NODE_UDB_CREATE_TRIGGER_BEFORE</SIGNATURE>
						<SIGNATURE>NODE_UDB_CREATE_TRIGGER_AFTER</SIGNATURE>
						<SIGNATURE>NODE_DSN_CREATE_TRIGGER_BEFORE</SIGNATURE>
						<SIGNATURE>NODE_DSN_CREATE_TRIGGER_AFTER</SIGNATURE>
						<SIGNATURE>NODE_UDB_CREATE_VIEW</SIGNATURE>
						<SIGNATURE>NODE_DSN_CREATE_VIEW</SIGNATURE>
					</OR>
					<TREE>
						<OR>
							<SIGNATURE>NODE_UDB_INSERT_INTO</SIGNATURE>
							<SIGNATURE>NODE_DSN_INSERT_INTO</SIGNATURE>
							<SIGNATURE>NODE_UDB_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_DSN_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_UDB_DELETE_ROWS</SIGNATURE>
							<SIGNATURE>NODE_DSN_DELETE_ROWS</SIGNATURE>
							<SIGNATURE>NODE_UDB_WHERE_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_DSN_WHERE_CLAUSE</SIGNATURE>
							<!-- a from clause can contain a query : SELECT * FROM T, (SELECT c1 FROM T2) WHERE ... 
								 we consider this as a subrequest -->
							<SIGNATURE>NODE_UDB_FROM_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_DSN_FROM_CLAUSE</SIGNATURE>
						</OR>

						<TREE>
							<OR>
								<SIGNATURE>NODE_UDB_FULL_SELECT</SIGNATURE>
								<SIGNATURE>NODE_DSN_FULL_SELECT</SIGNATURE>
							</OR>
							<SUB_TREE_OR>
								<SIGNATURE NAME="NODE_UDB_ITEM_SELECT_LIST" />
								<SIGNATURE NAME="NODE_DSN_ITEM_SELECT_LIST" />
							</SUB_TREE_OR>
						</TREE>
					</TREE>
				</TREE>
			</PROPERTY>

			<PROPERTY NAME="SQL_SUBQUERY_EMBEDDED" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>CLASS_UDB_STMT_DT_ACCESS</SIGNATURE>
						<SIGNATURE>CLASS_DSN_STMT_DT_ACCESS</SIGNATURE>
						<SIGNATURE>NODE_P23_QUERY</SIGNATURE>
						<SIGNATURE>NODE_49X_SELECT</SIGNATURE>
					</OR>
					<TREE>
						<OR>
							<SIGNATURE>NODE_UDB_INSERT_INTO</SIGNATURE>
							<SIGNATURE>NODE_DSN_INSERT_INTO</SIGNATURE>
							<SIGNATURE>NODE_UDB_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_DSN_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_UDB_DELETE_ROWS</SIGNATURE>
							<SIGNATURE>NODE_DSN_DELETE_ROWS</SIGNATURE>
							<SIGNATURE>NODE_UDB_WHERE_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_DSN_WHERE_CLAUSE</SIGNATURE>
							<!-- a from clause can contain a query : SELECT * FROM T, (SELECT c1 FROM T2) WHERE ... 
								 we consider this as a subrequest -->
							<SIGNATURE>NODE_UDB_FROM_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_DSN_FROM_CLAUSE</SIGNATURE>
						</OR>
						<TREE>
							<OR>
								<SIGNATURE>NODE_UDB_FULL_SELECT</SIGNATURE>
								<SIGNATURE>NODE_DSN_FULL_SELECT</SIGNATURE>
							</OR>
							<SUB_TREE_OR>
								<SIGNATURE NAME="NODE_UDB_ITEM_SELECT_LIST" />
								<SIGNATURE NAME="NODE_DSN_ITEM_SELECT_LIST" />
							</SUB_TREE_OR>
						</TREE>
					</TREE>
				</TREE>
			</PROPERTY>

			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>SQL_SUBQUERY</MATCH>
				<TOKEN>TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_COUNT>VALUE</RESULT_COUNT>
			</ADD_ACTION>
			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>SQL_SUBQUERY_EMBEDDED</MATCH>
				<TOKEN>COBOL_EMBEDDED_SQL_TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>COBOL_EMBEDDED_SQL_TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_COUNT>VALUE_EMBEDDED</RESULT_COUNT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<NAME>Number of Subqueries</NAME>
			</ADD_ACTION>
			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE_EMBEDDED</SAVE>
				<NAME>Number of Subqueries</NAME>
			</ADD_ACTION>

		</CATEGORY>

		<CATEGORY NAME="MATCH_REGEXP_SUBQUERY_FORMS">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="REGEXP_SUBQUERY" type="regexp_pattern">
				<LANGUAGE>FORMS-LANGUAGE</LANGUAGE>
				<SEARCH_IN_CODE>Yes</SEARCH_IN_CODE>
				<SEARCH_IN_COMMENT>No</SEARCH_IN_COMMENT>
				<SEARCH_IN_STRING>No</SEARCH_IN_STRING>
				<SEARCH_IN_EMBEDDEDSQL>No</SEARCH_IN_EMBEDDEDSQL>
				<SEARCH_CASE_SENSITIVE>No</SEARCH_CASE_SENSITIVE>
				<REGEXP><![CDATA[(IN|=|<|>)[[:Zs:]\t\n\r]*\([[:Zs:]\t\n\r]*SELECT]]></REGEXP>
				<REGEXP><![CDATA[(OR|AND|WHERE)[[:Zs:]\t\n\r]+EXISTS[[:Zs:]\t\n\r]*\([[:Zs:]\t\n\r]*SELECT]]></REGEXP>
				<REGEXP><![CDATA[(OR|AND|WHERE)[[:Zs:]\t\n\r]+NOT[[:Zs:]\t\n\r]+EXISTS[[:Zs:]\t\n\r]*\([[:Zs:]\t\n\r]*SELECT]]></REGEXP>
				<REGEXP><![CDATA[(FROM|JOIN)[[:Zs:]\t\n\r]*\([[:Zs:]\t\n\r]*SELECT]]></REGEXP>

			</PROPERTY>

			<ADD_ACTION NAME="MATCH">
				<MATCH>REGEXP_SUBQUERY</MATCH>
				<CLASS>FORMS_GREP_CLASS.CLASS</CLASS>
				<SOURCE_CODE>OBJECT.SOURCECODE</SOURCE_CODE>
				<VALUE_OUTPUT>VALUE</VALUE_OUTPUT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<NAME>Number of Subqueries</NAME>
			</ADD_ACTION>

		</CATEGORY>

		<CATEGORY NAME="MATCH_REGEXP_SUBQUERY_DB2_ZOS">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="REGEXP_SUBQUERY" type="regexp_pattern">
        <LANGUAGE>DB2-LANGUAGE</LANGUAGE>
        <LANGUAGE>DB2ZOS-LANGUAGE</LANGUAGE>
        <SEARCH_IN_CODE>Yes</SEARCH_IN_CODE>
				<SEARCH_IN_COMMENT>No</SEARCH_IN_COMMENT>
				<SEARCH_IN_STRING>No</SEARCH_IN_STRING>
				<SEARCH_IN_EMBEDDEDSQL>No</SEARCH_IN_EMBEDDEDSQL>
				<SEARCH_CASE_SENSITIVE>No</SEARCH_CASE_SENSITIVE>
				<REGEXP><![CDATA[(IN|=|<|>)[[:Zs:]\t\n\r]*\([[:Zs:]\t\n\r]*SELECT]]></REGEXP>
				<REGEXP><![CDATA[(OR|AND|WHERE)[[:Zs:]\t\n\r]+EXISTS[[:Zs:]\t\n\r]*\([[:Zs:]\t\n\r]*SELECT]]></REGEXP>
				<REGEXP><![CDATA[(OR|AND|WHERE)[[:Zs:]\t\n\r]+NOT[[:Zs:]\t\n\r]+EXISTS[[:Zs:]\t\n\r]*\([[:Zs:]\t\n\r]*SELECT]]></REGEXP>
				<REGEXP><![CDATA[(FROM|JOIN)[[:Zs:]\t\n\r]*\([[:Zs:]\t\n\r]*SELECT]]></REGEXP>

			</PROPERTY>

			<ADD_ACTION NAME="MATCH">
				<MATCH>REGEXP_SUBQUERY</MATCH>
				<CLASS>DB2_ZOS_CLASS.CLASS</CLASS>
				<SOURCE_CODE>OBJECT.SOURCECODE</SOURCE_CODE>
				<VALUE_OUTPUT>VALUE</VALUE_OUTPUT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<NAME>Number of Subqueries</NAME>
			</ADD_ACTION>

		</CATEGORY>


		<CATEGORY NAME="MATCH_REGEXP_SUBQUERY_DYNAMIC_SQL">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="GREP_OR_IE" type="integer" />
			<PROPERTY NAME="REGEXP_SUBQUERY" type="regexp_pattern">
				<LANGUAGE>PLSQL-LANGUAGE</LANGUAGE>
				<SEARCH_IN_CODE>Yes</SEARCH_IN_CODE>
				<SEARCH_IN_COMMENT>No</SEARCH_IN_COMMENT>
				<SEARCH_IN_STRING>Yes</SEARCH_IN_STRING>
				<SEARCH_IN_EMBEDDEDSQL>No</SEARCH_IN_EMBEDDEDSQL>
				<SEARCH_CASE_SENSITIVE>No</SEARCH_CASE_SENSITIVE>
				<MATCH_WHOLE_WORD_ONLY>No</MATCH_WHOLE_WORD_ONLY>

				<REGEXP><![CDATA[([^[:word:]]|\\[rntfv])(IN|=|<|>)([[:space:]]|\\[rntfv])*[(]+([[:space:](]|\\[rntfv])*SELECT([^[:word:]]|\\[rntfv])]]></REGEXP>
				<REGEXP><![CDATA[([^[:word:]]|\\[rntfv])(OR|AND|WHERE)([[:space:](]|\\[rntfv])+(NOT([[:space:]]|\\[rntfv])+)?EXISTS([[:space:]]|\\[rntfv])*[(]+([[:space:](]|\\[rntfv])*SELECT([^[:word:]]|\\[rntfv])]]></REGEXP>
				<REGEXP><![CDATA[([^[:word:]]|\\[rntfv])(FROM|JOIN)([[:space:]]|\\[rntfv])*[(]+([[:space:](]|\\[rntfv])*SELECT([^[:word:]]|\\[rntfv])]]></REGEXP>
			</PROPERTY>

			<ADD_ACTION NAME="MATCH">
				<MATCH>REGEXP_SUBQUERY</MATCH>
				<SOURCE_CODE>GET_STRING_COMMENT_WITH_GREP.STRING_VALUE</SOURCE_CODE>
				<SOURCE_CODE>OBJECT.SQL_DYNAMIC_IE_SOURCECODE</SOURCE_CODE>
				<SOURCE_CODE>STRING_CONCATENATION.VALUE</SOURCE_CODE>
				<GREP_OR_IE_OUTPUT>GREP_OR_IE</GREP_OR_IE_OUTPUT>
				<VALUE_OUTPUT>VALUE</VALUE_OUTPUT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<GREP_OR_IE>MATCH_REGEXP_SUBQUERY_DYNAMIC_SQL.GREP_OR_IE</GREP_OR_IE>
				<NAME>Number of Subqueries</NAME>
			</ADD_ACTION>

		</CATEGORY>

		<CATEGORY NAME="MATCH_REGEXP_SUBQUERY_DYNAMIC_UA">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="MATCH_REGEXP_SUBQUERY_DYNAMIC" type="regexp_pattern">
				<SEARCH_IN_CODE>No</SEARCH_IN_CODE>
				<SEARCH_IN_COMMENT>No</SEARCH_IN_COMMENT>
				<SEARCH_IN_STRING>No</SEARCH_IN_STRING>
				<SEARCH_IN_EMBEDDEDSQL>Yes</SEARCH_IN_EMBEDDEDSQL>
				<SEARCH_CASE_SENSITIVE>No</SEARCH_CASE_SENSITIVE>
				<!-- note: the reg. exps. for U.A. volontarily doesn't recognize a '\' followed by 
				'r', or 'n', or 't' as an escape sequence for, respectively, CR, or LF, or TAB -->
				<REGEXP><![CDATA[(IN|=|<|>)[ \t\n\r]*\([ \t\n\r]*SELECT]]></REGEXP>
				<REGEXP><![CDATA[(OR|AND|WHERE)[ \t\n\r]+EXISTS[ \t\n\r]*\([ \t\n\r]*SELECT]]></REGEXP>
				<REGEXP><![CDATA[(OR|AND|WHERE)[ \t\n\r]+NOT[ \t\n\r]+EXISTS[ \t\n\r]*\([ \t\n\r]*SELECT]]></REGEXP>
				<REGEXP><![CDATA[(FROM|JOIN)[ \t\n\r]*\([ \t\n\r]*SELECT]]></REGEXP>
			</PROPERTY>

			<ADD_ACTION NAME="MATCH">
				<MATCH>MATCH_REGEXP_SUBQUERY_DYNAMIC</MATCH>
				<SOURCE_CODE>OBJECT.SOURCECODE</SOURCE_CODE>
				<LANGUAGE_UA>OBJECT.LANGUAGE_UA</LANGUAGE_UA>
				<VALUE_OUTPUT>VALUE</VALUE_OUTPUT>
			</ADD_ACTION>

			<ADD_ACTION NAME="PERSISTENCE">
				<SAVE>VALUE</SAVE>
				<NAME>Number of Subqueries</NAME>
			</ADD_ACTION>
		</CATEGORY>

		<!-- YLE Add for the new metric Max SQL subqueries nested levels -->
		<CATEGORY NAME="MATCH_SQL_SUBQUERY_DEPTH">
			<!-- the following properties must be kept in synch with the ones listed above -->
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="PLSQL_SUBQUERY" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_C_BODY</SIGNATURE>
						<SIGNATURE>CLASS_PLSQL_function_body</SIGNATURE>
						<SIGNATURE>CLASS_PL_function_body</SIGNATURE> --
						<SIGNATURE>NODE_P23_TRIGGER</SIGNATURE>
						<SIGNATURE>NODE_PL_TRIGGER</SIGNATURE> --
						<SIGNATURE>CLASS_PLSQL_procedure_body</SIGNATURE>
						<SIGNATURE>CLASS_PL_procedure_body</SIGNATURE> --
						<SIGNATURE>NODE_P23_PACKAGE_BODY_1</SIGNATURE>
						<SIGNATURE>NODE_PL_PACKAGE_BODY_1</SIGNATURE> --
						<SIGNATURE>NODE_P23_PACKAGE_BODY_2</SIGNATURE>
						<SIGNATURE>NODE_PL_PACKAGE_BODY_2</SIGNATURE> --
						<SIGNATURE>NODE_P23_VIEW</SIGNATURE>
						<SIGNATURE>NODE_PL_VIEW</SIGNATURE> --
						<SIGNATURE>NODE_P23_CURSOR_BODY</SIGNATURE>
						<SIGNATURE>NODE_PL_CURSOR_BODY</SIGNATURE> --
						<SIGNATURE>CLASS_COBOL_BODY_FILE</SIGNATURE>
						<SIGNATURE>NODE_PB6_LIST_STATEMENT</SIGNATURE>
						<SIGNATURE>NODE_AB4_FileUnit</SIGNATURE>
					</OR>
					<TREE>
						<OR>
							<SIGNATURE>NODE_P23_WHERE_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_PL_WHERE_CLAUSE</SIGNATURE> --
							<SIGNATURE>NODE_P23_FROM_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_PL_FROM_CLAUSE</SIGNATURE> --
							<!-- YLE bug 23153, added node NODE_P23_STATEMENT_SQL_UPDATE and
										NODE_P23_STATEMENT_SQL_DELETE	-->
							<SIGNATURE>NODE_P23_STATEMENT_SQL_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_UPDATE</SIGNATURE> --
							<SIGNATURE>NODE_P23_STATEMENT_SQL_DELETE</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_DELETE</SIGNATURE> --
							<SIGNATURE>NODE_P23_STATEMENT_SQL_INSERT</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_INSERT</SIGNATURE> --
							<SIGNATURE>NODE_P23_STATEMENT_SQL_INSERT_COL</SIGNATURE>
							<SIGNATURE>NODE_PL_STATEMENT_SQL_INSERT_COL</SIGNATURE> --
							<SIGNATURE>NODE_AB4_SelectStatement</SIGNATURE>
							<SIGNATURE NAME="NODE_AB4_OpenSQL_Statement" SUB_NAME="DELETE_STATEMENT" />
							<SIGNATURE NAME="NODE_AB4_OpenSQL_Statement" SUB_NAME="UPDATE_STATEMENT" />
							<SIGNATURE NAME="NODE_AB4_OpenSQL_Statement" SUB_NAME="INSERT_STATEMENT" />
						</OR>
						<SUB_TREE_OR>
							<SIGNATURE NAME="CLASS_PLSQL_query_list" SUB_NAME="CLASS_PLSQL_query_terme" />
							<!--<SIGNATURE NAME="CLASS_PL_query_list" SUB_NAME="CLASS_PLSQL_query_terme" />-->
							<SIGNATURE NAME="CLASS_PL_query_list" SUB_NAME="CLASS_PL_query_term" /> --
							<SIGNATURE NAME="NODE_AB4_SubSelectStatement" />
							<SIGNATURE NAME="NODE_AB4_SubSelectStatement" SUB_NAME="SELECT_WITH_END_SELECT" />
						</SUB_TREE_OR>
					</TREE>

				</TREE>
			</PROPERTY>

			<PROPERTY NAME="SQL_SUBQUERY_TSQL" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_C_BODY</SIGNATURE>
						<SIGNATURE>CLASS_COBOL_BODY_FILE</SIGNATURE>
						<SIGNATURE>LIST_NV_INSTRUCTIONS</SIGNATURE>
						<SIGNATURE>NODE_PB6_LIST_STATEMENT</SIGNATURE>
						<SIGNATURE>NODE_49X_CREATE_PROCEDURE_2</SIGNATURE>
						<SIGNATURE>NODE_M80_CREATE_FCT_2</SIGNATURE>
						<SIGNATURE>NODE_49X_VIEW_DEFINITION</SIGNATURE>
					</OR>
					<TREE>
						<OR>
							<SIGNATURE>NODE_49X_SELECT_TERM</SIGNATURE>
							<SIGNATURE>NODE_49X_WHERE</SIGNATURE>
							<SIGNATURE>NODE_M80_UPDATE_1</SIGNATURE>
							<SIGNATURE>NODE_M80_DELETE_1</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1a</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2a</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1b</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2b</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1c</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2c</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_1d</SIGNATURE>
							<SIGNATURE>NODE_M80_INSERT_2d</SIGNATURE>

						</OR>
						<SUB_TREE_OR>
							<SIGNATURE NAME="NODE_49X_SELECT" />
							<SIGNATURE NAME="NODE_M60_SELECT1" />
							<SIGNATURE NAME="NODE_M70_SUB_QUERY_TERM" />
							<SIGNATURE NAME="NODE_49X_SUB_QUERY_TERM" />
						</SUB_TREE_OR>
					</TREE>
				</TREE>
			</PROPERTY>

			<!-- Dealing with DB2-SQL's shitty grammar -->
			<PROPERTY NAME="SQL_SUBQUERY" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_C_BODY</SIGNATURE>
						<SIGNATURE>CLASS_COBOL_BODY_FILE</SIGNATURE>
						<SIGNATURE>NODE_PB6_LIST_STATEMENT</SIGNATURE>
						<SIGNATURE>LIST_UDB_SQL_STATEMENT_LIST</SIGNATURE>
						<SIGNATURE>LIST_DSN_SQL_STATEMENT_LIST</SIGNATURE>
						<SIGNATURE>NODE_UDB_FUNC_RETURN</SIGNATURE>
						<SIGNATURE>NODE_DSN_FUNC_RETURN</SIGNATURE>
						<SIGNATURE>NODE_UDB_CREATE_TRIGGER_BEFORE</SIGNATURE>
						<SIGNATURE>NODE_UDB_CREATE_TRIGGER_AFTER</SIGNATURE>
						<SIGNATURE>NODE_DSN_CREATE_TRIGGER_BEFORE</SIGNATURE>
						<SIGNATURE>NODE_DSN_CREATE_TRIGGER_AFTER</SIGNATURE>
					</OR>
					<TREE>
						<OR>
							<SIGNATURE>NODE_UDB_INSERT_INTO</SIGNATURE>
							<SIGNATURE>NODE_DSN_INSERT_INTO</SIGNATURE>
							<SIGNATURE>NODE_UDB_DELETE_ROWS</SIGNATURE>
							<SIGNATURE>NODE_DSN_DELETE_ROWS</SIGNATURE>
							<SIGNATURE>NODE_UDB_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_DSN_UPDATE</SIGNATURE>
							<SIGNATURE>NODE_UDB_WHERE_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_DSN_WHERE_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_UDB_FROM_CLAUSE</SIGNATURE>
							<SIGNATURE>NODE_DSN_FROM_CLAUSE</SIGNATURE>
						</OR>
						<SUB_TREE_OR>
							<SIGNATURE NAME="NODE_UDB_FULL_SELECT" />
							<SIGNATURE NAME="NODE_DSN_FULL_SELECT" />
						</SUB_TREE_OR>

					</TREE>
				</TREE>
			</PROPERTY>

			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>PLSQL_SUBQUERY</MATCH>
				<MATCH>SQL_SUBQUERY_TSQL</MATCH>
				<MATCH>SQL_SUBQUERY</MATCH>
				<TOKEN>TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_CLUMP>VALUE</RESULT_CLUMP>
			</ADD_ACTION>


			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>PLSQL_SUBQUERY</MATCH>
				<MATCH>SQL_SUBQUERY_TSQL</MATCH>
				<MATCH>SQL_SUBQUERY</MATCH>
				<TOKEN>COBOL_EMBEDDED_SQL_TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>COBOL_EMBEDDED_SQL_TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_CLUMP>VALUE</RESULT_CLUMP>
			</ADD_ACTION>

		</CATEGORY>

		<CATEGORY NAME="MATCH_SQL_SUBQUERY_DEPTH_UDB_VIEW">
			<PROPERTY NAME="VALUE" type="integer" />
			<PROPERTY NAME="SQL_SUBQUERY_UDB_VIEW" type="pattern">
				<TREE>
					<OR>
						<SIGNATURE>NODE_UDB_CREATE_VIEW</SIGNATURE>
						<SIGNATURE>NODE_DSN_CREATE_VIEW</SIGNATURE>
					</OR>
					<TREE>
						<OR>
							<SIGNATURE>NODE_UDB_COMP_SELECT_MA</SIGNATURE>
							<SIGNATURE>NODE_UDB_COMP_SELECT</SIGNATURE>
							<SIGNATURE>NODE_UDB_VALUES</SIGNATURE>

							<SIGNATURE>NODE_DSN_COMP_SELECT</SIGNATURE>
							<SIGNATURE>NODE_DSN_VALUES</SIGNATURE>
							<SIGNATURE>NODE_DSN_FULLSELECT_UNION</SIGNATURE>
							<SIGNATURE>NODE_DSN_FULLSELECT_UNION_ALL</SIGNATURE>
						</OR>

						<SUB_TREE_OR>
							<SIGNATURE NAME="NODE_UDB_SUB_REQUEST" />
							<SIGNATURE NAME="NODE_DSN_SUB_REQUEST" />
						</SUB_TREE_OR>
					</TREE>
				</TREE>
			</PROPERTY>
			<ADD_ACTION NAME="MATCH IN TREE ELEMENT">
				<MATCH>SQL_SUBQUERY_UDB_VIEW</MATCH>
				<TOKEN>TOKEN_AND_TREE_ELEMENT.TOKEN_VALUE</TOKEN>
				<SIGNATURE>TOKEN_AND_TREE_ELEMENT.SIGNATURE_VALUE</SIGNATURE>
				<RESULT_CLUMP>VALUE</RESULT_CLUMP>
			</ADD_ACTION>
		</CATEGORY>

		<!-- YLE end of the add -->

	</CATEGORY_LIST>
</METRIC>
