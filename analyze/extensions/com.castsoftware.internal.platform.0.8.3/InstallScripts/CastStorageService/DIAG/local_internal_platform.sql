DROP FUNCTION IF EXISTS DSS_DIAG_SCOPE_GENERIC_NUM2 (I_MODULE_ID INT, I_SNAPSHOT_ID INT, I_METRIC_PARENT_ID INT, I_METRIC_ID INT, I_METRIC_CHILD_ID INT, I_SCOPE_ID INT, I_PROPERTY_ID INT) 
/ 
DROP FUNCTION IF EXISTS DSS_DIAG_TOTAL_GENERIC2 (I_MODULE_ID INT, I_SNAPSHOT_ID INT, I_METRIC_PARENT_ID INT, I_METRIC_ID INT, I_METRIC_VALUE_INDEX INT, I_SCOPE_ID INT) 
/ 
DROP FUNCTION IF EXISTS DSS_DIAG_SCOPE_PARAM_NUM (I_SNAPSHOT_ID INT, I_METRIC_PARENT_ID INT, I_METRIC_ID INT, I_METRIC_VALUE_INDEX INT) 
/ 
DROP FUNCTION IF EXISTS DSS_TRIGGER_ADDON_DIAG (I_MODULE_ID INT, I_SNAPSHOT_ID INT, I_METRIC_PARENT_ID INT, I_METRIC_ID INT, I_METRIC_VALUE_INDEX INT, I_DIAGNOSIS_PROCEDURE CHARACTER VARYING, I_SCOPE_ID INT, I_PROPERTY_ID INT)
/
DROP FUNCTION IF EXISTS DSS_DIAG_TOTAL_PARAM (I_SNAPSHOT_ID INT, I_METRIC_PARENT_ID INT, I_METRIC_ID INT, I_METRIC_VALUE_INDEX INT)
/
DROP FUNCTION IF EXISTS DSS_TRIGGER_ADDON_TOTAL (I_MODULE_ID INT, I_SNAPSHOT_ID INT, I_METRIC_PARENT_ID INT, I_METRIC_ID INT, I_METRIC_VALUE_INDEX INT, I_TOTAL_PROCEDURE CHARACTER VARYING, I_SCOPE_ID INT)
/

CREATE OR REPLACE FUNCTION DSS_MOVE_QUALITY_RULES_RESULTS (I_SNAPSHOT_ID INTEGER, I_METRIC_PARENT_ID INTEGER, I_METRIC_ID INTEGER, I_METRIC_CHILD_ID INTEGER) RETURNS INTEGER
AS
$BODY$
BEGIN
    -- DSS_METRIC_PARAM_VALUES with PARAM_INDEX = -5 and OBJECT_TYPE_ID = 0, specifies a source ID as METRIC_ID-1 and a target metric ID as PARAM_NUM_VALUE+1

    -- MOVE VIOLATIONS
    UPDATE DSS_METRIC_RESULTS R
    SET METRIC_ID = CAST(P5.PARAM_NUM_VALUE AS INT) + 1
    FROM 
        DSS_METRIC_PARAM_VALUES P5
    WHERE 
            P5.OBJECT_TYPE_ID = 0 
        AND P5.PARAM_INDEX = -5
 		AND R.SNAPSHOT_ID = I_SNAPSHOT_ID
		AND R.METRIC_ID = P5.METRIC_ID;

    -- MOVE COUNTERS: TOTALCHECKS, FAILEDCHECKS, ETC.
    UPDATE DSS_METRIC_RESULTS R
    SET METRIC_ID = CAST(P5.PARAM_NUM_VALUE AS INT) 
    FROM 
        DSS_METRIC_PARAM_VALUES P5
    WHERE 
            P5.OBJECT_TYPE_ID = 0 
        AND P5.PARAM_INDEX = -5
 		AND R.SNAPSHOT_ID = I_SNAPSHOT_ID
		AND R.METRIC_ID	= P5.METRIC_ID - 1;

   RETURN 0;
END;
$BODY$
LANGUAGE 'plpgsql'	
/

CREATE OR REPLACE FUNCTION DSS_ADD_OBJECT_EXCEPTIONS (I_SNAPSHOT_ID INTEGER, I_METRIC_PARENT_ID INTEGER, I_METRIC_ID INTEGER, I_METRIC_CHILD_ID INTEGER) RETURNS INTEGER
AS
$BODY$
BEGIN

    -- PAIR OF METRIC_ID,OBJECT_ID to exclude are ADDED to the contibutive quality rule. 
 
    INSERT INTO DSS_OBJECT_EXCEPTIONS (METRIC_ID, OBJECT_ID)
    SELECT CAST(P5.METRIC_ID AS INT)-1, X.OBJECT_ID
    FROM DSS_METRIC_PARAM_VALUES P5, DSS_OBJECT_EXCEPTIONS X
    WHERE 
            P5.OBJECT_TYPE_ID = 0 
        AND P5.PARAM_INDEX = -5
	AND X.METRIC_ID = P5.PARAM_NUM_VALUE;

   RETURN 0;
END;
$BODY$
LANGUAGE 'plpgsql'	
/

CREATE OR REPLACE FUNCTION DSS_NOP (
    I_SNAPSHOT_ID INT,
    I_METRIC_PARENT_ID INT,
    I_METRIC_ID INT,
    I_METRIC_VALUE_INDEX INT
)
RETURNS INT
AS
$BODY$
BEGIN
    RETURN 0;
END;
$BODY$
LANGUAGE 'plpgsql'
/