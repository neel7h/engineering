<?xml version='1.0' encoding='utf-8'?>
<root>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101000" contributorType="quality-rule" contributorOriginalName="Never use SQL queries with a cartesian product (SQL)"               critical="false" weight="7"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101002" contributorType="quality-rule" contributorOriginalName="Never use SQL queries with a cartesian product on XXL tables (SQL)" critical="true" weight="9"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101004" contributorType="quality-rule" contributorOriginalName="Avoid non-indexed SQL queries"                                critical="false" weight="9"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101006" contributorType="quality-rule" contributorOriginalName="Avoid non-indexed XXL SQL queries"                            critical="true" weight="9"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101008" contributorType="quality-rule" contributorOriginalName="Avoid non-SARGable queries"                                   critical="false" weight="3"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101010" contributorType="quality-rule" contributorOriginalName="Avoid NATURAL JOIN queries"                                   critical="false" weight="5"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101012" contributorType="quality-rule" contributorOriginalName="Specify column names instead of column numbers in ORDER BY clauses" critical="false" weight="3"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101014" contributorType="quality-rule" contributorOriginalName="Avoid queries using old style join convention instead of ANSI-Standard joins (SQL)" critical="false" weight="4"/>
    <metric id="61009" type="technical-criterion" originalName="Complexity - Algorithmic and Control Structure Complexity" contributorId="1101016" contributorType="quality-rule" contributorOriginalName="Avoid Artifacts with too many parameters (SQL)"    critical="false" weight="4"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101018" contributorType="quality-rule" contributorOriginalName="Avoid using the GROUP BY clause"                              critical="false" weight="5"/>
    <metric id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior"    contributorId="1101020" contributorType="quality-rule" contributorOriginalName="Avoid using quoted identifiers"                               critical="false" weight="3"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101022" contributorType="quality-rule" contributorOriginalName="Avoid Tables without Primary Key (SQL)"                       critical="true" weight="5"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101024" contributorType="quality-rule" contributorOriginalName="Avoid using dynamic SQL in SQL Artifacts"                     critical="false" weight="5"/>
    <metric id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior"    contributorId="1101026" contributorType="quality-rule" contributorOriginalName="Always define column names when inserting values"             critical="false" weight="5"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101028" contributorType="quality-rule" contributorOriginalName="Use MINUS or EXCEPT operator instead of NOT EXISTS and NOT IN subqueries" critical="false" weight="5"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101030" contributorType="quality-rule" contributorOriginalName="Avoid Artifacts with queries on too many Tables and/or Views"  critical="false" weight="7"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101032" contributorType="quality-rule" contributorOriginalName="Avoid exists and not exists independent clauses (SQL)"              critical="true" weight="6"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101034" contributorType="quality-rule" contributorOriginalName="DISTINCT should not be used in SQL SELECT statements"         critical="false" weight="5"/>
    <metric id="61004" type="technical-criterion" originalName="Architecture - OS and Platform Independence"    contributorId="1101036" contributorType="quality-rule" contributorOriginalName="Use ANSI standard operators in SQL WHERE clauses"             critical="false" weight="3"/>
    <metric id="61019" type="technical-criterion" originalName="Efficiency - SQL and Data Handling Performance" contributorId="1101038" contributorType="quality-rule" contributorOriginalName="Replace OR conditions testing equality on the same identifier in SQL WHERE clauses by an IN test condition" critical="false" weight="5"/>
    <metric id="61014" type="technical-criterion" originalName="Programming Practices - Error and Exception Handling" contributorId="1101040" contributorType="quality-rule" contributorOriginalName="Avoid empty catch blocks (SQL)"                         critical="true" weight="7"/>
	<metric id="61017" type="technical-criterion" originalName="Documentation - Naming Convention Conformity" 	contributorId="1101042" contributorType="quality-rule" contributorOriginalName="Table naming convention - character set control (SQL)" 		  critical="false" weight="1"/>
	<metric id="61017" type="technical-criterion" originalName="Documentation - Naming Convention Conformity" 	contributorId="1101044" contributorType="quality-rule" contributorOriginalName="View naming convention - character set control (SQL)" 		  critical="false" weight="1"/>
	<metric id="61017" type="technical-criterion" originalName="Documentation - Naming Convention Conformity" 	contributorId="1101046" contributorType="quality-rule" contributorOriginalName="Package naming convention - prefix control (SQL)" 			  critical="false" weight="5"/>
	<metric id="61017" type="technical-criterion" originalName="Documentation - Naming Convention Conformity" 	contributorId="1101048" contributorType="quality-rule" contributorOriginalName="Package Function naming convention - prefix control (SQL)" 	  critical="false" weight="5"/>
	<metric id="61017" type="technical-criterion" originalName="Documentation - Naming Convention Conformity" 	contributorId="1101050" contributorType="quality-rule" contributorOriginalName="Package Stored Procedure naming convention - prefix control (SQL)"  critical="false" weight="5"/>
    	
</root>