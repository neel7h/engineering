<?xml version="1.0" encoding="utf-8"?>
<metrics>
  <metric extern="true" id="61018" type="technical-criterion" originalName="Efficiency - Memory, Network and Disk Space Management" active="N/A" detached="N/A" ignored="false" />
  <metric extern="true" id="61024" type="technical-criterion" originalName="Programming Practices - Structuredness" active="N/A" detached="N/A" ignored="false" />
  <metric extern="true" id="66062" type="technical-criterion" originalName="Secure Coding - Input Validation" active="N/A" detached="N/A" ignored="false" />
  <metric extern="true" id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior" active="N/A" detached="N/A" ignored="false" />
  <metric id="592" type="quality-rule" originalName="Ensure you provide a user-defined copy constructor or disable copy when a class allocates memory in its constructor" active="true" detached="false" ignored="false" />
  <metric id="1065000" type="quality-rule" originalName="Avoid using &quot;continue&quot; statement" active="true" detached="false" ignored="false" />
  <metric id="1065002" type="quality-rule" originalName="&quot;enum&quot; members other than the first one should not be explicitly initialized unless all members are explicitly initialized." active="true" detached="false" ignored="false" />
  <metric id="1065004" type="quality-rule" originalName="Ensure that dynamically allocated memory on local pointer in functions/methods is freed." active="true" detached="false" ignored="false" />
  <metric id="1065006" type="quality-rule" originalName="Avoid iterator invalidation." active="true" detached="false" ignored="false" />
  <metric id="1065008" type="quality-rule" originalName="Avoid use of unvalidated input in array indexing and memory allocation" active="false" detached="false" ignored="false" />
</metrics>