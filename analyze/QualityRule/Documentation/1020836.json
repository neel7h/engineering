{
    "id": 1020836,
    "name": "Avoid exporting namespaces",
    "href": "AIP/quality-rules/1020836",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Number of violation occurrences",
    "description": "This rule will check that no namespace is exported.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "While namespaces sometime have their uses, they add an extra level of indirection when combined with modules. This can quickly become confusing for users, and is usually unnecessary.\n\nThe general idea of namespacing is to provide logical grouping of constructs and to prevent name collisions. However since the module file is in itself a logical grouping, and its top-level name is defined by the code that imports it, it is unnecessary to use an additional module layer for exported objects.",
    "reference": "https://www.typescriptlang.org/docs/handbook/namespaces-and-modules.html\nhttps://www.typescriptlang.org/docs/handbook/modules.html",
    "remediation": "Favor using modules over namespaces for structuring you code.",
    "remediationSample": "// in shapes.ts module\nexport class Triangle { /* ... */ }\nexport class Square { /* ... */ }\n\n\n// in shapeConsumer.ts module\nimport * as shapes from \"./shapes\";\nlet t = new shapes.Triangle();",
    "sample": "//in shapes.ts module\nexport namespace Shapes {\n    export class Triangle { /* ... */ }\n    export class Square { /* ... */ }\n}\n\n\n//in shapeConsumer.ts module\nimport * as shapes from \"./shapes\";\nlet t = new shapes.Shapes.Triangle(); // shapes.Shapes?",
    "total": "Number of exported namespaces",
    "alternativeName": "Avoid exporting namespaces",
    "businessCriteria": [
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60011,
            "name": "Transferability",
            "href": "AIP/business-criteria/60011"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61024,
            "name": "Programming Practices - Structuredness",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
