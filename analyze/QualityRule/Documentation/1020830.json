{
    "id": 1020830,
    "name": "Avoid using Angular ElementRef API to manipulate DOM",
    "href": "AIP/quality-rules/1020830",
    "critical": false,
    "maxWeight": 1,
    "associatedValueName": "Number of violation occurrences",
    "description": "The built-in browser DOM APIs don't automatically protect you from security vulnerabilities. Not only it poses security risk, but it also creates tight coupling between your application and rendering layers which makes it difficult to run an app on multiple platforms.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "In DOM-based XSS, the client performs the injection of XSS into the page; in the other types, the server performs the injection. DOM-based XSS generally involves server-controlled, trusted script that is sent to the client, such as Javascript that performs sanity checks on a form before the user submits it. If the server-supplied script processes user-supplied data and then injects it back into the web page (such as with dynamic HTML), then DOM-based XSS is possible.",
    "reference": "https://angular.io/guide/security#avoid-direct-use-of-the-dom-apis\nhttps://angular.io/api/core/ElementRef",
    "remediation": "Avoid directly interacting with the DOM and instead use Angular Renderer2 when possible. ElementRef accessed by the following function is considered as dangerous:\n- textContent\n- style\n- replaceChild\n- removeChild\n- removeAttribute\n- removeAttributeNode\n- parentNode\n- parentElement\n- insertAdjacentHTML\n- insertAdjacentElement",
    "remediationSample": "import { Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective implements OnInit {\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) { }\n\n  ngOnInit() {\n    // this.el.nativeElement.style.color = 'blue';\n    this.renderer.setStyle(this.el.nativeElement, 'color', 'blue');\n  }\n\n}",
    "sample": "import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective implements OnInit {\n\n  constructor(\n    private el: ElementRef\n  ) { }\n\n  ngOnInit() {\n    this.el.nativeElement.style.color = 'blue';\n  }\n\n}",
    "total": "Number of TypeScript artifacts",
    "alternativeName": "Avoid using Angular ElementRef API to manipulate DOM",
    "businessCriteria": [
        {
            "id": 66032,
            "name": "Architectural Design",
            "href": "AIP/business-criteria/66032"
        },
        {
            "id": 60012,
            "name": "Changeability",
            "href": "AIP/business-criteria/60012"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61001,
            "name": "Architecture - Multi-Layers and Data Access",
            "weight": 1,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-79",
            "name": "Cross-site Scripting Improper Input Neutralization",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "url": null,
            "description": null
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-SI-10",
            "name": "Information Input Validation",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A3-2013",
            "name": "Cross-Site Scripting (XSS)",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A7-2017",
            "name": "Cross-Site Scripting (XSS)",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-6.5.7",
            "name": "  Cross-site scripting (XSS)",
            "url": null,
            "description": null
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70257",
            "name": "The application must protect from Cross-Site Scripting (XSS) vulnerabilities.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
