{
    "id": 1027010,
    "name": "Avoid weak encryption providing insufficient key size (.NET)",
    "href": "AIP/quality-rules/1027010",
    "critical": false,
    "maxWeight": 6,
    "associatedValueName": "Number of violation occurrences",
    "description": "When generating cryptograpic keys (or key pairs), it is important to use a key length that provides enough entropy against brute-force attacks. For the RSA algorithm the key should be at least 2048 bits long.\nThis rule raises an issue when a RSA key-pair generator is initialized with too small a length parameter.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Rather than directly attacking crypto, attackers steal keys, execute man-in-the-middle attacks, or steal clear text data off the server, while in transit, or from the user\u2019s client, e.g. browser. A manual attack is generally required. Previously retrieved password databases could be brute forced by Graphics Processing Units (GPUs). \n\nOver the last few years, this has been the most common impactful attack. The most common flaw is simply not encrypting sensitive data. When crypto is employed, weak key generation and management, and weak algorithm, protocol and cipher usage is common, particularly for weak password hashing storage techniques. For data in transit, server side weaknesses are mainly easy to detect, but hard for data at rest. \n\nFailure frequently compromises all data that should have been protected. Typically, this information includes sensitive personal information (PII) data such as health records, credentials, personal data, and credit cards, which often require protection as defined by laws or regulations such as the EU GDPR or local privacy laws.",
    "reference": "MITRE, CWE-326 - Inadequate Encryption Strength\nOWASP Top 10 2017 Category A3 - Sensitive Data Exposure\n\nhttps://www.keylength.com/en/5/",
    "remediation": "Review the source code and have longer Cryptographic keys",
    "remediationSample": "using System;\nusing System.Security.Cryptography;\n\nnamespace MyCASTNamepace\n{\n    public class MyCASTClass\n    {\n        static void Main()\n        {\n            RSACryptoServiceProvider RSA = new RSACryptoServiceProvider(2048);\n            // ...\n            DSACryptoServiceProvider DSA = new DSACryptoServiceProvider(2048);\n            // ...\n        }\n    }",
    "sample": "using System;\nusing System.Security.Cryptography;\n\nnamespace MyCASTApplication\n{\n    public class MyCASTClass\n    {\n        static void Main()\n        {\n            RSACryptoServiceProvider RSA = new RSACryptoServiceProvider(1024); // Noncompliant\n            // ...\n            DSACryptoServiceProvider DSA = new DSACryptoServiceProvider(1024); // Noncompliant\n            // ...\n        }\n    }\n}",
    "total": "Number of Methods using CryptoEncryption",
    "alternativeName": "Avoid weak encryption providing insufficient key size (.NET)",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66063,
            "name": "Secure Coding - API Abuse",
            "weight": 6,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-327",
            "name": "Broken or Risky Cryptographic Algorithm Usage",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-326",
            "name": "Inadequate Encryption Strength",
            "url": null,
            "description": null
        },
        {
            "standard": "NIST-SP-800-53R4",
            "id": "NIST-SC-12",
            "name": "Cryptographic Key Establishment and Management",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A3-2017",
            "name": "Sensitive Data Exposure",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A6-2013",
            "name": "Sensitive Data Exposure",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "M5-2016",
            "name": "Insufficient Cryptography",
            "url": null,
            "description": null
        },
        {
            "standard": "PCI-DSS-V3.1",
            "id": "PCI-Requirement-4.1",
            "name": "Use strong cryptography and security protocols",
            "url": null,
            "description": null
        },
        {
            "standard": "STIG-V4R8",
            "id": "STIG-V-70245",
            "name": "The application must protect the confidentiality and integrity of transmitted information.",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
