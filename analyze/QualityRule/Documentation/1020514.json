{
    "id": 1020514,
    "name": "Only use the angular.isUndefined or angular.isDefined methods in AngularJS application",
    "href": "AIP/quality-rules/1020514",
    "critical": false,
    "maxWeight": 3,
    "associatedValueName": "Number of violation occurrences",
    "description": "You should use the angular.isUndefined or angular.isDefined methods instead of using the keyword undefined.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Using two APIs for the same function is considered a problem in terms of maintainability and robustness. It is highly recommended to use only one API, especially when you are using a high-level library/framework or wrapping functionalities that provide additional checks on variables.",
    "remediationSample": "if (angular.isUndefined(obj)) { \n}; \nif (angular.isDefined(obj)) { \n};",
    "sample": "if (obj == undefined) { \n}; \nif (!(obj == undefined)) { \n};",
    "total": "Number of angular artifacts",
    "alternativeName": "Only use the angular.isUndefined or angular.isDefined methods in AngularJS application",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "weight": 3,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
