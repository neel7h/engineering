{
    "id": 1020724,
    "name": "Ensure that marked is sanitized",
    "href": "AIP/quality-rules/1020724",
    "critical": true,
    "associatedValueName": "Number of violation occurrences",
    "description": "In Node.js, some express components must be configured carefully to avoid any security hole. Market component must be carefully configured to avoid enabling sanitize option.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Attacker identifies a weak component through scanning or manual analysis. He customizes the exploit as needed and executes the attack. It gets more difficult if the used component is deep in the application.",
    "reference": "https://expressjs.com/en/advanced/best-practice-security.html \nhttps://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities \nhttps://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities",
    "remediation": "Always enable the sanitize option to yes when using marked component.",
    "remediationSample": "var express = require('express'); \nvar app = express(); \nvar marked = require(\"marked\"); \n\nmarked.setOptions({ \n sanitize: true \n }); \n\napp.locals.marked = marked; \n\napp.get('/', function(req, res){ \n    res.send(\"<html><body>hello world<script type='text/javascript'>alert('got you')</script></body></html>\"); \n}); \n\napp.listen(3000);",
    "sample": "var express = require('express'); \nvar app = express(); \nvar marked = require(\"marked\"); \n\napp.locals.marked = marked; \n\napp.get('/', function(req, res){ \n    res.send(\"<html><body>hello world<script type='text/javascript'>alert('got you')</script></body></html>\"); \n}); \n\napp.listen(3000);",
    "total": "Number of javascript source codes using express and marked",
    "alternativeName": "Ensure that marked is sanitized",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 7,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "OWASP",
            "id": "A9-2013",
            "name": "Using Components with Known Vulnerabilities",
            "url": null,
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A9-2017",
            "name": "Using Components with Known Vulnerabilities",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        10.0,
        70.0,
        90.0,
        99.0
    ]
}
