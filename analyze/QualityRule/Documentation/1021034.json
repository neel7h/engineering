{
    "id": 1021034,
    "name": "Avoid inconsistent initialization when deriving a new exception",
    "href": "AIP/quality-rules/1021034",
    "critical": false,
    "maxWeight": 7,
    "associatedValueName": "Number of violation occurrences",
    "description": "Reports all Python __init__ methods that override the __init__() method of the parent Exception class with inconsistent number of passed arguments.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Python Exceptions accept all arguments passed to them being stored in the .args attribute as a tuple. Various libraries and parts of Python rely on this behaviour. To prevent source of errors and unexpected behaviour, avoid inconsistent initialization when subclassing a new exception by passing the same number of arguments to the parent __init__ call.",
    "reference": "D. Beazley and B.K. Jones, Python Cookbook, 3rd Ed. (O'Reilly Media, Sebastopol, CA, May 2013), p. 579",
    "remediation": "Initialize parent exception class with the same number of parameters.",
    "remediationSample": ">>> class CustomError(Exception):\n>>>     def __init__(self, message, status):\n>>>     self.message = message\n>>>     self.status = status\n>>>     # parent exception class is initialized with same number of parameters\n>>>     super().__init__(message, status)",
    "sample": ">>> class CustomError(Exception):\n>>>     def __init__(self, message, status):\n>>>     self.message = message\n>>>     self.status = status",
    "total": "Number of Python __init__ methods",
    "alternativeName": "Avoid inconsistent initialization when deriving a new exception",
    "businessCriteria": [
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 60013,
            "name": "Robustness",
            "href": "AIP/business-criteria/60013"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66069,
            "name": "Programming Practices - Unexpected Behavior",
            "weight": 7,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1021000,
            "name": "Python",
            "href": "AIP/technologies/1021000"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        50.0,
        90.0,
        95.0,
        99.0
    ]
}
