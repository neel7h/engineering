{
    "id": 1020008,
    "name": "Avoid using for-in loop",
    "href": "AIP/quality-rules/1020008",
    "critical": false,
    "maxWeight": 4,
    "associatedValueName": "Number of violation occurrences",
    "description": "Since each iteration through the loop results in a property lookup either on the instance or on a prototype, the for-in loop has considerably more overhead per iteration and is therefore slower than the other loops. For the same number of loop iterations, a for-in loop can end up as much as seven times slower than the other loop types. For this reason, it's recommended to avoid the for-in loop unless your intent is to iterate over an unknown number of object properties.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "Ensure your web application interactivity by accessing/manipulating the DOM tree with high performance queries/enumerators.",
    "reference": "CISQ OMG ASCPEM-PRF-4",
    "remediation": "Replace the for-in with regular for with index",
    "remediationSample": "function printArray(arr) { \n    var l = arr.length; \n    for (var i = 0; i < l; i++) { \n        print(arr[i]); \n    } \n}",
    "sample": "function printArray(arr) { \n    for (var key in arr) { \n        print(arr[key]); \n    } \n}",
    "total": "Number of Javascript Functions",
    "alternativeName": "Avoid using for-in loop",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66068,
            "name": "Efficiency - Expensive Calls in Loops",
            "weight": 4,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        {
            "standard": "CISQ",
            "id": "ASCPEM-PRF-8",
            "name": "Control Elements Requiring Significant Resource Element within Control Flow Loop Block",
            "url": null,
            "description": null
        }
    ],
    "parameters": [
        
    ],
    "thresholds": [
        10.0,
        70.0,
        90.0,
        99.0
    ]
}
