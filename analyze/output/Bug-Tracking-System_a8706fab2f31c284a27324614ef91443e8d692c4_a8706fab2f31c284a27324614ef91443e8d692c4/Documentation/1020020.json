{
    "id": 1020020,
    "name": "Avoid blocking page loading with synchronous Javascript import",
    "href": "AIP/quality-rules/1020020",
    "critical": false,
    "maxWeight": 5,
    "associatedValueName": "Number of violation occurrences",
    "description": "Reports any code which contains the instruction <script src=\"http://*.js\"> in the html body block.",
    "output": "Associated to each violation, the following information is provided:\n- The number of violation occurrences\n- Bookmarks for violation occurrences found in the source code",
    "rationale": "When you include javascript under this form <script src=\"http://*.js\">, you create a Single Point of Failure. Loading the script in this way is blocking all other download in the page and any element below the script are blocked from rendering. \nIt is better to load the script asynchronously.",
    "reference": "[1] http://www.infoq.com/presentations/JavaScript-Performance-Patterns \n[2] http://www.stevesouders.com/blog/2008/12/27/coupling-async-scripts/",
    "remediation": "There are different methods that can be used: \n- <script defer> or <script async> \n- Asynchronous Script Loading: \nvar script = document.createElement('script'); \nscript.src = \"sorttable-async.js\"; \nscript.text = \"sorttable.init()\"; // this is explained in the next section \ndocument.getElementsByTagName('head')[0].appendChild(script); \n- Lazy Loading: \nwindow.onload = function() { \n    var script = document.createElement('script'); \n    script.src = \"sorttable-async.js\"; \n    script.text = \"sorttable.init()\"; \n    document.getElementsByTagName('head')[0].appendChild(script); \n}",
    "remediationSample": "<script async=\"http://*.js\">\n\n// or\n\n<script defer=\"http://*.js\">",
    "sample": "<script src=\"http://*.js\">",
    "total": "Number of HTML Contents",
    "alternativeName": "Avoid blocking page loading with synchronous Javascript import",
    "businessCriteria": [
        {
            "id": 60014,
            "name": "Efficiency",
            "href": "AIP/business-criteria/60014"
        },
        {
            "id": 20140522,
            "name": "Green Stuff",
            "href": "AIP/business-criteria/20140522"
        },
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 61018,
            "name": "Efficiency - Memory, Network and Disk Space Management",
            "weight": 5,
            "critical": false
        }
    ],
    "technologies": [
        {
            "id": 1020000,
            "name": "HTML5",
            "href": "AIP/technologies/1020000"
        }
    ],
    "qualityStandards": [
        
    ],
    "parameters": [
        
    ],
    "thresholds": [
        10.0,
        70.0,
        90.0,
        99.0
    ]
}
